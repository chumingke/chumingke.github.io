<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>chumingke-二师兄</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://chumingke.github.io/"/>
  <updated>2017-11-16T14:13:24.443Z</updated>
  <id>https://chumingke.github.io/</id>
  
  <author>
    <name>chumingke</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>exercise</title>
    <link href="https://chumingke.github.io//blog/2017/11/exercise.html"/>
    <id>https://chumingke.github.io//blog/2017/11/exercise.html</id>
    <published>2017-11-16T14:10:09.000Z</published>
    <updated>2017-11-16T14:13:24.443Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div><div class="line">352</div><div class="line">353</div><div class="line">354</div><div class="line">355</div><div class="line">356</div><div class="line">357</div><div class="line">358</div><div class="line">359</div><div class="line">360</div><div class="line">361</div><div class="line">362</div><div class="line">363</div><div class="line">364</div><div class="line">365</div><div class="line">366</div><div class="line">367</div><div class="line">368</div><div class="line">369</div><div class="line">370</div><div class="line">371</div><div class="line">372</div><div class="line">373</div><div class="line">374</div><div class="line">375</div><div class="line">376</div><div class="line">377</div><div class="line">378</div><div class="line">379</div><div class="line">380</div><div class="line">381</div><div class="line">382</div><div class="line">383</div><div class="line">384</div><div class="line">385</div><div class="line">386</div><div class="line">387</div><div class="line">388</div><div class="line">389</div><div class="line">390</div><div class="line">391</div><div class="line">392</div><div class="line">393</div><div class="line">394</div><div class="line">395</div><div class="line">396</div><div class="line">397</div><div class="line">398</div><div class="line">399</div><div class="line">400</div><div class="line">401</div><div class="line">402</div><div class="line">403</div><div class="line">404</div><div class="line">405</div><div class="line">406</div><div class="line">407</div><div class="line">408</div><div class="line">409</div><div class="line">410</div><div class="line">411</div><div class="line">412</div><div class="line">413</div><div class="line">414</div><div class="line">415</div><div class="line">416</div><div class="line">417</div><div class="line">418</div><div class="line">419</div><div class="line">420</div><div class="line">421</div><div class="line">422</div><div class="line">423</div><div class="line">424</div><div class="line">425</div><div class="line">426</div><div class="line">427</div><div class="line">428</div><div class="line">429</div><div class="line">430</div><div class="line">431</div><div class="line">432</div><div class="line">433</div><div class="line">434</div><div class="line">435</div><div class="line">436</div><div class="line">437</div><div class="line">438</div><div class="line">439</div><div class="line">440</div><div class="line">441</div><div class="line">442</div><div class="line">443</div><div class="line">444</div><div class="line">445</div><div class="line">446</div><div class="line">447</div><div class="line">448</div><div class="line">449</div><div class="line">450</div><div class="line">451</div><div class="line">452</div><div class="line">453</div><div class="line">454</div><div class="line">455</div><div class="line">456</div><div class="line">457</div><div class="line">458</div><div class="line">459</div><div class="line">460</div><div class="line">461</div><div class="line">462</div><div class="line">463</div><div class="line">464</div><div class="line">465</div><div class="line">466</div><div class="line">467</div><div class="line">468</div><div class="line">469</div><div class="line">470</div><div class="line">471</div><div class="line">472</div><div class="line">473</div><div class="line">474</div><div class="line">475</div><div class="line">476</div><div class="line">477</div><div class="line">478</div><div class="line">479</div><div class="line">480</div><div class="line">481</div><div class="line">482</div><div class="line">483</div><div class="line">484</div><div class="line">485</div><div class="line">486</div><div class="line">487</div><div class="line">488</div><div class="line">489</div><div class="line">490</div><div class="line">491</div><div class="line">492</div><div class="line">493</div><div class="line">494</div><div class="line">495</div><div class="line">496</div><div class="line">497</div><div class="line">498</div><div class="line">499</div><div class="line">500</div><div class="line">501</div><div class="line">502</div><div class="line">503</div><div class="line">504</div><div class="line">505</div><div class="line">506</div><div class="line">507</div><div class="line">508</div><div class="line">509</div><div class="line">510</div><div class="line">511</div><div class="line">512</div><div class="line">513</div><div class="line">514</div><div class="line">515</div><div class="line">516</div><div class="line">517</div><div class="line">518</div><div class="line">519</div><div class="line">520</div><div class="line">521</div><div class="line">522</div><div class="line">523</div><div class="line">524</div><div class="line">525</div><div class="line">526</div><div class="line">527</div><div class="line">528</div><div class="line">529</div><div class="line">530</div><div class="line">531</div><div class="line">532</div><div class="line">533</div><div class="line">534</div><div class="line">535</div><div class="line">536</div><div class="line">537</div><div class="line">538</div><div class="line">539</div><div class="line">540</div><div class="line">541</div><div class="line">542</div><div class="line">543</div><div class="line">544</div><div class="line">545</div><div class="line">546</div><div class="line">547</div><div class="line">548</div><div class="line">549</div><div class="line">550</div><div class="line">551</div><div class="line">552</div><div class="line">553</div><div class="line">554</div><div class="line">555</div><div class="line">556</div><div class="line">557</div><div class="line">558</div><div class="line">559</div><div class="line">560</div><div class="line">561</div><div class="line">562</div><div class="line">563</div><div class="line">564</div><div class="line">565</div><div class="line">566</div><div class="line">567</div><div class="line">568</div><div class="line">569</div><div class="line">570</div><div class="line">571</div><div class="line">572</div><div class="line">573</div><div class="line">574</div><div class="line">575</div><div class="line">576</div><div class="line">577</div><div class="line">578</div><div class="line">579</div><div class="line">580</div><div class="line">581</div><div class="line">582</div><div class="line">583</div><div class="line">584</div><div class="line">585</div><div class="line">586</div><div class="line">587</div><div class="line">588</div><div class="line">589</div><div class="line">590</div><div class="line">591</div><div class="line">592</div><div class="line">593</div><div class="line">594</div><div class="line">595</div><div class="line">596</div><div class="line">597</div><div class="line">598</div><div class="line">599</div><div class="line">600</div><div class="line">601</div><div class="line">602</div><div class="line">603</div><div class="line">604</div><div class="line">605</div><div class="line">606</div><div class="line">607</div><div class="line">608</div><div class="line">609</div><div class="line">610</div><div class="line">611</div><div class="line">612</div><div class="line">613</div><div class="line">614</div><div class="line">615</div><div class="line">616</div><div class="line">617</div><div class="line">618</div><div class="line">619</div><div class="line">620</div><div class="line">621</div><div class="line">622</div><div class="line">623</div><div class="line">624</div><div class="line">625</div><div class="line">626</div><div class="line">627</div><div class="line">628</div><div class="line">629</div><div class="line">630</div><div class="line">631</div><div class="line">632</div><div class="line">633</div><div class="line">634</div><div class="line">635</div><div class="line">636</div><div class="line">637</div><div class="line">638</div><div class="line">639</div><div class="line">640</div><div class="line">641</div><div class="line">642</div><div class="line">643</div><div class="line">644</div><div class="line">645</div><div class="line">646</div><div class="line">647</div><div class="line">648</div><div class="line">649</div><div class="line">650</div><div class="line">651</div><div class="line">652</div><div class="line">653</div><div class="line">654</div><div class="line">655</div><div class="line">656</div><div class="line">657</div><div class="line">658</div><div class="line">659</div><div class="line">660</div><div class="line">661</div><div class="line">662</div><div class="line">663</div><div class="line">664</div><div class="line">665</div><div class="line">666</div><div class="line">667</div><div class="line">668</div><div class="line">669</div><div class="line">670</div><div class="line">671</div><div class="line">672</div><div class="line">673</div><div class="line">674</div><div class="line">675</div><div class="line">676</div><div class="line">677</div><div class="line">678</div><div class="line">679</div><div class="line">680</div><div class="line">681</div><div class="line">682</div><div class="line">683</div><div class="line">684</div><div class="line">685</div><div class="line">686</div><div class="line">687</div><div class="line">688</div><div class="line">689</div><div class="line">690</div><div class="line">691</div><div class="line">692</div><div class="line">693</div><div class="line">694</div><div class="line">695</div><div class="line">696</div><div class="line">697</div><div class="line">698</div><div class="line">699</div><div class="line">700</div><div class="line">701</div><div class="line">702</div><div class="line">703</div><div class="line">704</div><div class="line">705</div><div class="line">706</div><div class="line">707</div><div class="line">708</div><div class="line">709</div><div class="line">710</div><div class="line">711</div><div class="line">712</div><div class="line">713</div><div class="line">714</div><div class="line">715</div><div class="line">716</div><div class="line">717</div><div class="line">718</div><div class="line">719</div><div class="line">720</div><div class="line">721</div><div class="line">722</div><div class="line">723</div><div class="line">724</div><div class="line">725</div><div class="line">726</div><div class="line">727</div><div class="line">728</div><div class="line">729</div><div class="line">730</div><div class="line">731</div><div class="line">732</div><div class="line">733</div><div class="line">734</div><div class="line">735</div><div class="line">736</div><div class="line">737</div><div class="line">738</div><div class="line">739</div><div class="line">740</div><div class="line">741</div><div class="line">742</div><div class="line">743</div><div class="line">744</div><div class="line">745</div><div class="line">746</div><div class="line">747</div><div class="line">748</div><div class="line">749</div><div class="line">750</div><div class="line">751</div><div class="line">752</div><div class="line">753</div><div class="line">754</div><div class="line">755</div><div class="line">756</div><div class="line">757</div><div class="line">758</div><div class="line">759</div><div class="line">760</div><div class="line">761</div><div class="line">762</div><div class="line">763</div><div class="line">764</div><div class="line">765</div><div class="line">766</div><div class="line">767</div><div class="line">768</div><div class="line">769</div><div class="line">770</div><div class="line">771</div><div class="line">772</div><div class="line">773</div><div class="line">774</div><div class="line">775</div><div class="line">776</div><div class="line">777</div><div class="line">778</div><div class="line">779</div><div class="line">780</div><div class="line">781</div><div class="line">782</div><div class="line">783</div><div class="line">784</div><div class="line">785</div><div class="line">786</div><div class="line">787</div><div class="line">788</div><div class="line">789</div><div class="line">790</div><div class="line">791</div><div class="line">792</div><div class="line">793</div><div class="line">794</div><div class="line">795</div><div class="line">796</div><div class="line">797</div><div class="line">798</div><div class="line">799</div><div class="line">800</div><div class="line">801</div><div class="line">802</div><div class="line">803</div><div class="line">804</div><div class="line">805</div><div class="line">806</div><div class="line">807</div><div class="line">808</div><div class="line">809</div><div class="line">810</div><div class="line">811</div><div class="line">812</div><div class="line">813</div><div class="line">814</div><div class="line">815</div><div class="line">816</div><div class="line">817</div><div class="line">818</div><div class="line">819</div><div class="line">820</div><div class="line">821</div><div class="line">822</div><div class="line">823</div><div class="line">824</div><div class="line">825</div><div class="line">826</div><div class="line">827</div><div class="line">828</div><div class="line">829</div><div class="line">830</div><div class="line">831</div><div class="line">832</div><div class="line">833</div><div class="line">834</div><div class="line">835</div><div class="line">836</div><div class="line">837</div><div class="line">838</div><div class="line">839</div><div class="line">840</div><div class="line">841</div><div class="line">842</div><div class="line">843</div><div class="line">844</div><div class="line">845</div><div class="line">846</div><div class="line">847</div><div class="line">848</div><div class="line">849</div><div class="line">850</div><div class="line">851</div><div class="line">852</div><div class="line">853</div><div class="line">854</div><div class="line">855</div><div class="line">856</div><div class="line">857</div><div class="line">858</div><div class="line">859</div><div class="line">860</div></pre></td><td class="code"><pre><div class="line"><span class="comment">-- 原始</span></div><div class="line"><span class="comment">-- 一、征信科室</span></div><div class="line"><span class="comment">-- (一)征信</span></div><div class="line"><span class="comment">-- 1.审核情况</span></div><div class="line"><span class="keyword">select</span> a.日期,处理量,过件率,<span class="string">`过件总额(W)`</span>,</div><div class="line"> <span class="string">`未成年培训%`</span>,<span class="string">`成年培训%`</span>,</div><div class="line">平均审核时效,时区一 <span class="keyword">as</span> <span class="string">'&lt;=5min%'</span>,时区二 <span class="keyword">as</span> <span class="string">'(5m,10m]%'</span>,时区三 <span class="keyword">as</span> <span class="string">'(10m,15m]%'</span>,时区四 <span class="keyword">as</span> <span class="string">'&gt;15min%'</span></div><div class="line"><span class="keyword">from</span></div><div class="line">    (</div><div class="line">     <span class="keyword">select</span> <span class="keyword">date_format</span>(a.audit_time,<span class="string">'%m-%d'</span>) 日期,</div><div class="line">          <span class="keyword">count</span>(<span class="keyword">distinct</span> a.order_id) 处理量,</div><div class="line">          <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> c.STATE=<span class="number">3</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)/<span class="keyword">count</span>(<span class="keyword">distinct</span> a.order_id) <span class="keyword">as</span> 过件率,  <span class="comment">-- 过件/（过件+拒件）</span></div><div class="line">          <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> c.STATE=<span class="number">2</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)/<span class="keyword">count</span>(<span class="keyword">distinct</span> a.order_id) <span class="keyword">as</span> 补件率,  <span class="comment">-- </span></div><div class="line">          <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> c.STATE=<span class="number">3</span> <span class="keyword">then</span> c.amount/<span class="number">100</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)/<span class="number">10000</span> <span class="string">'过件总额(W)'</span>,</div><div class="line">          <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> c.STATE=<span class="number">3</span> <span class="keyword">and</span> b.store_secondlabel=<span class="string">'未成年培训%'</span> <span class="keyword">then</span> c.amount <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)/<span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> c.STATE=<span class="number">3</span> <span class="keyword">then</span> c.amount <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="string">'未成年培训%'</span>,</div><div class="line">          <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> c.STATE=<span class="number">3</span> <span class="keyword">and</span> b.store_secondlabel=<span class="string">'成年培训%'</span> <span class="keyword">then</span> c.amount <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)/<span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> c.STATE=<span class="number">3</span> <span class="keyword">then</span> c.amount <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="string">'成年培训%'</span></div><div class="line">     <span class="keyword">from</span> haimi_department.v_cta_order_audit a </div><div class="line">     <span class="keyword">join</span> haimi_department.v_cta_order_merchantinfo b  <span class="comment">-- select distinct store_secondlabel from v_cta_order_merchantinfo</span></div><div class="line">       <span class="keyword">on</span> a.order_id=b.order_id</div><div class="line">   <span class="keyword">join</span> haimi_department.v_cta_order_applyinfo c </div><div class="line">       <span class="keyword">on</span> a.order_id=c.order_id</div><div class="line">     <span class="keyword">where</span> b.merchant_type=<span class="number">1</span></div><div class="line">     <span class="keyword">and</span> b.merchant_id != <span class="string">'105750'</span></div><div class="line">     <span class="keyword">and</span> <span class="built_in">date</span>(a.audit_time)=<span class="keyword">date_sub</span>(<span class="keyword">curdate</span>(),<span class="built_in">interval</span> <span class="number">1</span> <span class="keyword">day</span>)</div><div class="line">     <span class="keyword">and</span> APPLY_SOURCE = <span class="string">'APP_haimi'</span></div><div class="line">     )a</div><div class="line"><span class="keyword">join</span></div><div class="line">    (</div><div class="line">     <span class="keyword">select</span> <span class="keyword">date_format</span>(update_time,<span class="string">'%m-%d'</span>)日期,</div><div class="line">            <span class="keyword">avg</span>(cta_time) 平均审核时效,</div><div class="line">            <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> cta_time&lt;=<span class="number">5</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)/<span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> cta_time <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 时区一,</div><div class="line">            <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> cta_time&gt;<span class="number">5</span> <span class="keyword">and</span> cta_time&lt;=<span class="number">10</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)/<span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> cta_time <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 时区二,</div><div class="line">            <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> cta_time&gt;<span class="number">10</span> <span class="keyword">and</span> cta_time&lt;=<span class="number">15</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)/<span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> cta_time <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 时区三,</div><div class="line">            <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> cta_time&gt;<span class="number">15</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)/<span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> cta_time <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 时区四 </div><div class="line">     <span class="keyword">from</span>(</div><div class="line">          <span class="keyword">select</span> <span class="keyword">distinct</span></div><div class="line">                 a.order_id,</div><div class="line">                 a.update_time,</div><div class="line">                 <span class="keyword">timestampdiff</span>(<span class="keyword">second</span>,a.create_time,a.update_time)/<span class="number">60</span> <span class="keyword">as</span> cta_time </div><div class="line">        <span class="keyword">from</span> haimi_department.v_cta_order_applyinfo a </div><div class="line">          <span class="keyword">join</span> haimi_department.v_cta_order_merchantinfo b </div><div class="line">          <span class="keyword">on</span> a.order_id=b.order_id</div><div class="line">          <span class="keyword">where</span> <span class="built_in">date</span>(a.update_time)=<span class="keyword">date_sub</span>(<span class="keyword">curdate</span>(),<span class="built_in">interval</span> <span class="number">1</span> <span class="keyword">day</span>)</div><div class="line">          <span class="keyword">and</span> <span class="keyword">hour</span>(a.create_time)&lt;=<span class="number">20</span> </div><div class="line">          <span class="keyword">and</span> <span class="keyword">hour</span>(a.create_time)&gt;=<span class="number">9</span></div><div class="line">          <span class="keyword">and</span> a.order_id <span class="keyword">not</span> <span class="keyword">in</span> (<span class="keyword">select</span> <span class="keyword">distinct</span> order_id <span class="keyword">from</span> haimi_department.v_cta_patch_apply_item <span class="keyword">where</span> code <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span>) </div><div class="line">          <span class="keyword">and</span> a.order_id <span class="keyword">not</span> <span class="keyword">in</span> (<span class="keyword">select</span> <span class="keyword">distinct</span> base_order_no <span class="keyword">from</span> haimi_department.v_money_box_order <span class="keyword">where</span> <span class="keyword">status</span> =<span class="string">'1041'</span>)</div><div class="line">      <span class="keyword">and</span> APPLY_SOURCE = <span class="string">'APP_haimi'</span></div><div class="line">          <span class="keyword">and</span> a.state=<span class="string">'3'</span></div><div class="line">          <span class="keyword">and</span> b.merchant_id != <span class="string">'105750'</span></div><div class="line">          <span class="keyword">and</span> b.merchant_type=<span class="number">1</span></div><div class="line">        )a</div><div class="line">       )b</div><div class="line"><span class="keyword">on</span> a.日期=b.日期;</div><div class="line"></div><div class="line"><span class="comment">-- 2.拒件情况</span></div><div class="line"><span class="keyword">select</span> <span class="keyword">date_format</span>(a.audit_time,<span class="string">'%m-%d'</span>) 日期,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> a.cause_code <span class="keyword">in</span> (<span class="string">'D443'</span>,<span class="string">'D336'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 商户违规,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> a.cause_code <span class="keyword">in</span>(<span class="string">'D440'</span>,<span class="string">'D444'</span>,<span class="string">'D441'</span>,<span class="string">'D442'</span>,<span class="string">'D344'</span>,<span class="string">'D433'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 疑似虚假交易,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> a.cause_code=<span class="string">'D515'</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="string">'客户取消/增加金额/更改期限'</span>,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> a.cause_code <span class="keyword">in</span>(<span class="string">'D437'</span>,<span class="string">'D118'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 贷款资信不良,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> a.cause_code=<span class="string">'D335'</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 非开放项目,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> a.cause_code=<span class="string">'D201'</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 综合资格不符,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> a.cause_code=<span class="string">'D518'</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 测试,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> a.cause_code <span class="keyword">in</span>(<span class="string">'D517'</span>,<span class="string">'D331'</span>,<span class="string">'D339'</span>,<span class="string">'D499'</span>,<span class="string">'D519'</span>,<span class="string">'D337'</span>,<span class="string">'D523'</span>,<span class="string">'D516'</span>,<span class="string">'D513'</span>,<span class="string">'D436'</span>,<span class="string">'D338'</span>,<span class="string">'D343'</span>,<span class="string">'D333'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">END</span>) 其他,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> c.state=<span class="number">4</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 总量</div><div class="line"><span class="keyword">from</span> haimi_department.v_cta_order_audit a </div><div class="line"><span class="keyword">join</span> haimi_department.v_cta_order_merchantinfo b </div><div class="line"><span class="keyword">on</span> a.order_id=b.order_id</div><div class="line"><span class="keyword">inner</span> <span class="keyword">join</span> v_cta_order_applyinfo c</div><div class="line"><span class="keyword">on</span> a.order_id=c.order_id</div><div class="line"><span class="keyword">where</span> b.merchant_type=<span class="number">1</span></div><div class="line"><span class="keyword">and</span> APPLY_SOURCE = <span class="string">'APP_haimi'</span></div><div class="line"><span class="keyword">and</span> <span class="built_in">date</span>(a.audit_time)=<span class="keyword">date_sub</span>(<span class="keyword">curdate</span>(),<span class="built_in">interval</span> <span class="number">1</span> <span class="keyword">day</span>);</div><div class="line"></div><div class="line"><span class="comment">-- 3.库存</span></div><div class="line"><span class="keyword">select</span> a.截止日期,待处理量,待补件量</div><div class="line"><span class="keyword">from</span>(</div><div class="line">     <span class="keyword">select</span> <span class="keyword">date_format</span>(<span class="keyword">curdate</span>(),<span class="string">'%m-%d'</span>) 截止日期,</div><div class="line">            <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> a.state <span class="keyword">in</span> (<span class="number">0</span>,<span class="number">1</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 待处理量</div><div class="line">     <span class="keyword">from</span> haimi_department.v_cta_order_applyinfo a </div><div class="line">     <span class="keyword">join</span> haimi_department.v_cta_order_merchantinfo b </div><div class="line">     <span class="keyword">on</span> a.order_id=b.order_id </div><div class="line">     <span class="keyword">where</span> b.merchant_type=<span class="number">1</span></div><div class="line">     <span class="keyword">and</span> APPLY_SOURCE = <span class="string">'APP_haimi'</span></div><div class="line">     )a</div><div class="line"><span class="keyword">join</span> </div><div class="line">    (</div><div class="line">     <span class="keyword">select</span> <span class="keyword">date_format</span>(<span class="keyword">curdate</span>(),<span class="string">'%m-%d'</span>) 截止日期,</div><div class="line">            <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> a.state=<span class="number">2</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 待补件量</div><div class="line">     <span class="keyword">from</span> haimi_department.v_cta_order_applyinfo a</div><div class="line">     <span class="keyword">join</span> haimi_department.v_cta_order_merchantinfo b </div><div class="line">     <span class="keyword">on</span> a.order_id=b.order_id </div><div class="line">     <span class="keyword">where</span> b.merchant_type=<span class="number">1</span></div><div class="line">     <span class="keyword">and</span> APPLY_SOURCE = <span class="string">'APP_haimi'</span></div><div class="line">     <span class="keyword">and</span> a.order_id <span class="keyword">not</span> <span class="keyword">in</span> (<span class="keyword">select</span> <span class="keyword">distinct</span> base_order_no <span class="keyword">from</span> haimi_department.v_money_box_order <span class="keyword">where</span> <span class="keyword">status</span>=<span class="string">'1041'</span>)</div><div class="line">     )b</div><div class="line"><span class="keyword">on</span> a.截止日期=b.截止日期;</div><div class="line"></div><div class="line"><span class="comment">-- 4.补件情况</span></div><div class="line"><span class="comment">-- 4.1前一日补件情况表格</span></div><div class="line"></div><div class="line"><span class="keyword">select</span> <span class="keyword">date_format</span>(a.patch_time,<span class="string">'%m-%d'</span>) 日期,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">in</span> (<span class="string">'PI001'</span>,<span class="string">'PI002'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 身份证正反面,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">in</span> (<span class="string">'PI001'</span>,<span class="string">'PI002'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)/<span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 身份证正反面占比,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">in</span> (<span class="string">'PI003'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 自拍,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">in</span> (<span class="string">'PI003'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)/<span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 自拍占比,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">in</span> (<span class="string">'PC001'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 合同,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">in</span> (<span class="string">'PC001'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)/<span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 合同占比,</div><div class="line"><span class="comment">/* 新添加 */</span>  <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">in</span> (<span class="string">'PQ008'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="string">'LOGO/门牌合照'</span>,  </div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">in</span> (<span class="string">'PQ008'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)/<span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="string">'LOGO/门牌合照占比'</span>,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">in</span> (<span class="string">'MX001'</span>,<span class="string">'MX002'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 电话未接通,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">in</span> (<span class="string">'MX001'</span>,<span class="string">'MX002'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)/<span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 电话未接通占比,</div><div class="line">       <span class="comment">-- sum(case when code in ('PQ001','PQ002','PQ003') then 1 else 0 end) 学历相关,</span></div><div class="line">       <span class="comment">-- sum(case when code in ('PQ001','PQ002','PQ003') then 1 else 0 end)/sum(case when code is not null then 1 else 0 end) 学历相关占比,</span></div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">not</span> <span class="keyword">in</span> (<span class="string">'PI001'</span>,<span class="string">'PI002'</span>,<span class="string">'PI003'</span>,<span class="string">'PC001'</span>,<span class="string">'MX001'</span>,<span class="string">'MX002'</span>,<span class="string">'PQ001'</span>,<span class="string">'PQ002'</span>,<span class="string">'PQ003'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 其他,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">not</span> <span class="keyword">in</span> (<span class="string">'PI001'</span>,<span class="string">'PI002'</span>,<span class="string">'PI003'</span>,<span class="string">'PC001'</span>,<span class="string">'MX001'</span>,<span class="string">'MX002'</span>,<span class="string">'PQ001'</span>,<span class="string">'PQ002'</span>,<span class="string">'PQ003'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)/<span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 其他占比,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 总量</div><div class="line"><span class="keyword">from</span> haimi_department.v_cta_patch_apply_item a </div><div class="line"><span class="keyword">inner</span> <span class="keyword">join</span> haimi_department.v_cta_order_applyinfo b</div><div class="line"><span class="keyword">on</span> a.order_id=b.order_id </div><div class="line"><span class="keyword">where</span> <span class="built_in">date</span>(a.patch_time)=<span class="keyword">date_sub</span>(<span class="keyword">curdate</span>(),<span class="built_in">interval</span> <span class="number">1</span> <span class="keyword">day</span>)</div><div class="line"><span class="keyword">and</span> APPLY_SOURCE = <span class="string">'APP_haimi'</span>;</div><div class="line"></div><div class="line"><span class="comment">-- 4.1.2前15天补件情况累计图用</span></div><div class="line"><span class="keyword">select</span> <span class="keyword">date_format</span>(a.patch_time,<span class="string">'%m-%d'</span>) 日期,</div><div class="line">       <span class="comment">-- sum(case when code in ('PI001','PI002') then 1 else 0 end) 身份证正反面,</span></div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">in</span> (<span class="string">'PI001'</span>,<span class="string">'PI002'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)/<span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 身份证,</div><div class="line">       <span class="comment">-- sum(case when code in ('PI003') then 1 else 0 end) 自拍,</span></div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">in</span> (<span class="string">'PI003'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)/<span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 自拍,</div><div class="line">       <span class="comment">-- sum(case when code in ('PC001') then 1 else 0 end) 合同,</span></div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">in</span> (<span class="string">'PC001'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)/<span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 合同,</div><div class="line"><span class="comment">/* 新添加 */</span>  <span class="comment">-- sum(case when code in ('PQ008') then 1 else 0 end) 'LOGO/门牌合照',  </span></div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">in</span> (<span class="string">'PQ008'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)/<span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="string">'LOGO/门牌合照'</span>,</div><div class="line">       <span class="comment">-- sum(case when code in ('MX001','MX002') then 1 else 0 end) 电话未接通,</span></div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">in</span> (<span class="string">'MX001'</span>,<span class="string">'MX002'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)/<span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 电话未接通,</div><div class="line">       <span class="comment">-- sum(case when code in ('PQ001','PQ002','PQ003') then 1 else 0 end) 学历相关,</span></div><div class="line">       <span class="comment">-- sum(case when code in ('PQ001','PQ002','PQ003') then 1 else 0 end)/sum(case when code is not null then 1 else 0 end) 学历相关,</span></div><div class="line">       <span class="comment">-- sum(case when code not in ('PI001','PI002','PI003','PC001','MX001','MX002','PQ001','PQ002','PQ003') then 1 else 0 end) 其他,</span></div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">not</span> <span class="keyword">in</span> (<span class="string">'PI001'</span>,<span class="string">'PI002'</span>,<span class="string">'PI003'</span>,<span class="string">'PC001'</span>,<span class="string">'MX001'</span>,<span class="string">'MX002'</span>,<span class="string">'PQ001'</span>,<span class="string">'PQ002'</span>,<span class="string">'PQ003'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)/<span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 其他</div><div class="line">       <span class="comment">-- sum(case when code is not null then 1 else 0 end) 总量</span></div><div class="line"><span class="keyword">from</span> haimi_department.v_cta_patch_apply_item a </div><div class="line"><span class="keyword">inner</span> <span class="keyword">join</span> haimi_department.v_cta_order_applyinfo b</div><div class="line"><span class="keyword">on</span> a.order_id=b.order_id </div><div class="line"><span class="keyword">where</span> <span class="built_in">date</span>(a.patch_time) &gt; <span class="keyword">date_sub</span>(<span class="keyword">curdate</span>(),<span class="built_in">interval</span> <span class="number">15</span> <span class="keyword">day</span>)</div><div class="line"><span class="keyword">group</span> <span class="keyword">by</span> <span class="built_in">date</span>(a.patch_time)</div><div class="line"><span class="keyword">and</span> APPLY_SOURCE = <span class="string">'APP_haimi'</span>;</div><div class="line"><span class="comment">-- 4.2每月补件情况</span></div><div class="line"></div><div class="line"><span class="keyword">select</span> <span class="keyword">date_format</span>(a.patch_time,<span class="string">'%Y-%m'</span>) 日期,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">in</span> (<span class="string">'PI001'</span>,<span class="string">'PI002'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 身份证正反面,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">in</span> (<span class="string">'PI001'</span>,<span class="string">'PI002'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)/<span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 身份证正反面占比,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">in</span> (<span class="string">'PI003'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 自拍,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">in</span> (<span class="string">'PI003'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)/<span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 自拍占比,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">in</span> (<span class="string">'PC001'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 合同,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">in</span> (<span class="string">'PC001'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)/<span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 合同占比,</div><div class="line"><span class="comment">/* 新添加 */</span>  <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">in</span> (<span class="string">'PQ008'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="string">'LOGO/门牌合照'</span>,  </div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">in</span> (<span class="string">'PQ008'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)/<span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="string">'LOGO/门牌合照占比'</span>,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">in</span> (<span class="string">'MX001'</span>,<span class="string">'MX002'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 电话未接通,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">in</span> (<span class="string">'MX001'</span>,<span class="string">'MX002'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)/<span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 电话未接通占比,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">in</span> (<span class="string">'PQ001'</span>,<span class="string">'PQ002'</span>,<span class="string">'PQ003'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 学历相关,</div><div class="line">       <span class="comment">-- sum(case when code in ('PQ001','PQ002','PQ003') then 1 else 0 end)/sum(case when code is not null then 1 else 0 end) 学历相关占比,</span></div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">not</span> <span class="keyword">in</span> (<span class="string">'PI001'</span>,<span class="string">'PI002'</span>,<span class="string">'PI003'</span>,<span class="string">'PC001'</span>,<span class="string">'MX001'</span>,<span class="string">'MX002'</span>,<span class="string">'PQ001'</span>,<span class="string">'PQ002'</span>,<span class="string">'PQ003'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 其他,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">not</span> <span class="keyword">in</span> (<span class="string">'PI001'</span>,<span class="string">'PI002'</span>,<span class="string">'PI003'</span>,<span class="string">'PC001'</span>,<span class="string">'MX001'</span>,<span class="string">'MX002'</span>,<span class="string">'PQ001'</span>,<span class="string">'PQ002'</span>,<span class="string">'PQ003'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)/<span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 其他占比,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 总量</div><div class="line"><span class="keyword">from</span> haimi_department.v_cta_patch_apply_item a </div><div class="line"><span class="keyword">inner</span> <span class="keyword">join</span> haimi_department.v_cta_order_applyinfo b</div><div class="line"><span class="keyword">on</span> a.order_id=b.order_id </div><div class="line"><span class="keyword">where</span> <span class="keyword">date_format</span>(a.patch_time,<span class="string">'%Y-%m'</span>)=<span class="keyword">date_format</span>(<span class="keyword">date_sub</span>(<span class="keyword">curdate</span>(),<span class="built_in">interval</span> <span class="number">1</span> <span class="keyword">day</span>),<span class="string">'%Y-%m'</span>)</div><div class="line"><span class="keyword">and</span> APPLY_SOURCE = <span class="string">'APP_haimi'</span>; </div><div class="line"><span class="comment">-- 5.补件返回情况统计</span></div><div class="line"><span class="comment">-- 5.1影像类补回情况</span></div><div class="line"><span class="keyword">select</span> <span class="keyword">date_format</span>(a.create_time,<span class="string">'%m-%d'</span>) 日期,</div><div class="line">       <span class="keyword">count</span>(<span class="keyword">distinct</span> a.order_id) 影像类补件量,</div><div class="line">       <span class="number">1</span>-((<span class="keyword">select</span> <span class="keyword">count</span>(<span class="keyword">distinct</span> a.order_id) </div><div class="line">          <span class="keyword">from</span> haimi_department.v_cta_patch_apply_item </div><div class="line">          <span class="keyword">where</span> a.patch_status=<span class="number">1</span>)/<span class="keyword">count</span>(<span class="keyword">distinct</span> a.order_id)) 影像类补回率</div><div class="line"></div><div class="line"><span class="keyword">from</span> haimi_department.v_cta_patch_apply_item a </div><div class="line"><span class="keyword">inner</span> <span class="keyword">join</span> haimi_department.v_cta_order_applyinfo b</div><div class="line"><span class="keyword">on</span> a.order_id=b.order_id </div><div class="line"><span class="keyword">inner</span> <span class="keyword">join</span> haimi_department.v_cta_patch_code c</div><div class="line"><span class="keyword">on</span> a.code=c.code</div><div class="line"><span class="keyword">where</span> <span class="built_in">date</span>(a.create_time) &gt; <span class="keyword">date_sub</span>(<span class="keyword">curdate</span>(),<span class="built_in">interval</span> <span class="number">15</span> <span class="keyword">day</span>)</div><div class="line"><span class="keyword">and</span> c.enable=<span class="number">1</span></div><div class="line"><span class="keyword">and</span> c.code <span class="keyword">in</span> (<span class="string">'PI001'</span>,<span class="string">'PI002'</span>,<span class="string">'PI003'</span>,<span class="string">'PC001'</span>)</div><div class="line"><span class="keyword">and</span> APPLY_SOURCE = <span class="string">'APP_haimi'</span> </div><div class="line"><span class="keyword">group</span> <span class="keyword">by</span> <span class="built_in">date</span>(a.create_time);</div><div class="line"></div><div class="line"><span class="comment">-- 5.2总体补回情况</span></div><div class="line"><span class="comment">-- 补回情况有5种，1，下一次补件（1）2，下一次补件并补回（2）3.下多次补件最后一次没补回（2,1）4.下多次补件全补回（2,2,2）5.下一次补件后又下一次补件（1,1）统计口径以订单号为主第五种统计算补件一次</span></div><div class="line"><span class="comment">-- 方法1 通过计算未补回率间接计算补回率</span></div><div class="line"><span class="keyword">select</span> <span class="keyword">date_format</span>(a.create_time,<span class="string">'%m-%d'</span>) 日期,</div><div class="line">       <span class="keyword">count</span>(<span class="keyword">distinct</span> a.order_id) 总体补件量,</div><div class="line">       <span class="number">1</span>-((<span class="keyword">select</span> <span class="keyword">count</span>(<span class="keyword">distinct</span> a.order_id) </div><div class="line">          <span class="keyword">from</span> haimi_department.v_cta_patch_apply_item </div><div class="line">          <span class="keyword">where</span> a.patch_status=<span class="number">1</span>)/<span class="keyword">count</span>(<span class="keyword">distinct</span> a.order_id)) 总体补回率</div><div class="line"></div><div class="line"><span class="keyword">from</span> haimi_department.v_cta_patch_apply_item a </div><div class="line"><span class="keyword">inner</span> <span class="keyword">join</span> haimi_department.v_cta_order_applyinfo b</div><div class="line"><span class="keyword">on</span> a.order_id=b.order_id </div><div class="line"><span class="keyword">inner</span> <span class="keyword">join</span> haimi_department.v_cta_patch_code c</div><div class="line"><span class="keyword">on</span> a.code=c.code</div><div class="line"><span class="keyword">where</span> <span class="built_in">date</span>(a.create_time) &gt; <span class="keyword">date_sub</span>(<span class="keyword">curdate</span>(),<span class="built_in">interval</span> <span class="number">15</span> <span class="keyword">day</span>)</div><div class="line"><span class="keyword">and</span> c.enable=<span class="number">1</span></div><div class="line"><span class="keyword">and</span> APPLY_SOURCE = <span class="string">'APP_haimi'</span> </div><div class="line"><span class="keyword">group</span> <span class="keyword">by</span> <span class="built_in">date</span>(a.create_time);</div><div class="line"></div><div class="line"><span class="comment">-- 方法二分组后最新的</span></div><div class="line"></div><div class="line"><span class="comment">-----------------</span></div><div class="line"></div><div class="line"><span class="comment">-- (二)商户审核</span></div><div class="line"><span class="comment">-- 1.审核情况</span></div><div class="line"><span class="keyword">select</span> a.*,b.新进件量 </div><div class="line"><span class="keyword">from</span> </div><div class="line">     (</div><div class="line">      <span class="keyword">select</span> <span class="keyword">date_format</span>(a.oper_time,<span class="string">'%m-%d'</span>) 日期,</div><div class="line">             <span class="keyword">count</span>(<span class="keyword">distinct</span> a.merchantid) <span class="string">'总处理量'</span>,</div><div class="line">             <span class="keyword">count</span>(<span class="keyword">distinct</span> <span class="keyword">case</span> <span class="keyword">when</span> a.after_status =<span class="number">5</span> <span class="keyword">then</span> a.merchantid <span class="keyword">end</span>) <span class="string">'过件量'</span>,</div><div class="line"> <span class="keyword">count</span>(<span class="keyword">distinct</span> <span class="keyword">case</span> <span class="keyword">when</span> a.after_status =<span class="number">6</span> <span class="keyword">then</span> a.merchantid <span class="keyword">end</span>) <span class="string">'退件量'</span>,</div><div class="line">             <span class="keyword">count</span>(<span class="keyword">distinct</span> <span class="keyword">case</span> <span class="keyword">when</span> a.after_status =<span class="number">4</span> <span class="keyword">then</span> a.merchantid <span class="keyword">end</span>) <span class="string">'补件量'</span></div><div class="line">      <span class="keyword">from</span> haimi_department.v_ma_merchant_apply_oper_his a</div><div class="line">      <span class="keyword">join</span> haimi_department.v_ma_user b </div><div class="line">      <span class="keyword">on</span> a.oper_userid=b.uid</div><div class="line">      <span class="keyword">inner</span> <span class="keyword">join</span> haimi_department.v_ma_department c</div><div class="line">      <span class="keyword">on</span> b.depid=c.depid</div><div class="line">  <span class="keyword">where</span> <span class="built_in">date</span>(a.oper_time)=<span class="keyword">date_sub</span>(<span class="keyword">curdate</span>(),<span class="built_in">interval</span> <span class="number">1</span> <span class="keyword">day</span>)</div><div class="line">      <span class="keyword">and</span> b.depid=<span class="number">13</span>   <span class="comment">-- v_ma_department</span></div><div class="line">      <span class="keyword">and</span> b.is_opened=<span class="number">1</span></div><div class="line">      <span class="keyword">and</span> c.is_k12 = <span class="string">'1'</span></div><div class="line">      )a</div><div class="line"><span class="keyword">left</span> <span class="keyword">join</span> </div><div class="line">         (</div><div class="line">  <span class="keyword">select</span> <span class="keyword">date_format</span>(apply_time,<span class="string">'%m-%d'</span>) 日期,</div><div class="line">                 <span class="keyword">count</span>(<span class="keyword">distinct</span> merchantid) 新进件量 </div><div class="line">      <span class="keyword">from</span> haimi_department.v_ma_merchant_applyinfo</div><div class="line">          <span class="keyword">where</span> <span class="built_in">date</span>(apply_time)=<span class="keyword">date_sub</span>(<span class="keyword">curdate</span>(),<span class="built_in">interval</span> <span class="number">1</span> <span class="keyword">day</span>)</div><div class="line">          <span class="keyword">and</span> apply_departmentid = <span class="string">'196'</span>  <span class="comment">-- 196为K12分部</span></div><div class="line">          )b </div><div class="line"><span class="keyword">on</span> a.日期 =b.日期;</div><div class="line"></div><div class="line"><span class="comment">-- 3.本月上线商户情况</span></div><div class="line"><span class="keyword">select</span> <span class="keyword">date_format</span>(<span class="keyword">date_sub</span>(<span class="keyword">curdate</span>(),<span class="built_in">interval</span> <span class="number">1</span> <span class="keyword">day</span>),<span class="string">'%m-%d'</span>) 截止日期,</div><div class="line">       sec_template_type 行业类型,</div><div class="line">       <span class="keyword">count</span>(<span class="keyword">distinct</span> merchantid) 上线数量</div><div class="line"><span class="keyword">from</span></div><div class="line">     (</div><div class="line">      <span class="keyword">select</span> <span class="keyword">distinct</span></div><div class="line">             a.merchantid,</div><div class="line">             a.lastcheck_time,</div><div class="line">             a.lastcheck_person,</div><div class="line">             b.merchant_template_type,</div><div class="line">             b.sec_template_type  </div><div class="line">      <span class="keyword">from</span> haimi_department.v_ma_merchant_applyinfo a</div><div class="line">      <span class="keyword">join</span> haimi_department.v_ma_merchant_baseinfo b  </div><div class="line">  <span class="keyword">on</span> a.merchantid=b.merchantid</div><div class="line">      <span class="keyword">join</span> haimi_department.v_ma_user c</div><div class="line">      <span class="keyword">on</span> a.lastcheck_person=c.uid</div><div class="line">      <span class="keyword">where</span> <span class="keyword">date_format</span>(a.lastcheck_time,<span class="string">'%Y-%m'</span>)=<span class="keyword">date_format</span>(<span class="keyword">date_sub</span>(<span class="keyword">curdate</span>(),<span class="built_in">interval</span> <span class="number">1</span> <span class="keyword">day</span>),<span class="string">'%Y-%m'</span>)</div><div class="line">      <span class="keyword">and</span> a.status=<span class="string">'5'</span></div><div class="line">      <span class="keyword">and</span> c.depid=<span class="number">13</span></div><div class="line">      <span class="keyword">and</span> c.is_opened=<span class="number">1</span></div><div class="line">      )a</div><div class="line"><span class="keyword">group</span> <span class="keyword">by</span> sec_template_type;</div><div class="line"></div><div class="line"><span class="comment">-- 二、反欺诈科室</span></div><div class="line"><span class="comment">-- 1.定性情况</span></div><div class="line"><span class="keyword">select</span> <span class="keyword">date_format</span>(<span class="keyword">date_sub</span>(<span class="keyword">curdate</span>(),<span class="built_in">interval</span> <span class="number">1</span> <span class="keyword">day</span>),<span class="string">'%m-%d'</span>) 日期,</div><div class="line">   <span class="keyword">count</span>(<span class="keyword">distinct</span> <span class="keyword">case</span> <span class="keyword">when</span> dqcl&gt;gqcl <span class="keyword">and</span> dqcl!=<span class="number">7</span> <span class="keyword">and</span> dqcl!=<span class="number">8</span> <span class="keyword">then</span> a.storeid <span class="keyword">end</span>) 昨日定性风险商户数,</div><div class="line">       <span class="keyword">count</span>(<span class="keyword">distinct</span> <span class="keyword">case</span> <span class="keyword">when</span> dqcl&gt;gqcl <span class="keyword">and</span> dqcl=<span class="number">7</span> <span class="keyword">then</span> a.storeid <span class="keyword">end</span>) 昨日关停风险商户数</div><div class="line">       <span class="comment">-- count(distinct case when dqcl&gt;gqcl and dqcl=8 then a.storeid else 0 end) 昨日复开商户数</span></div><div class="line"><span class="keyword">from</span> </div><div class="line">     (</div><div class="line">  <span class="keyword">select</span> <span class="keyword">distinct</span> </div><div class="line">     a.storeid,</div><div class="line">             <span class="comment">-- a.policy_bracket,</span></div><div class="line">             b.policy_bracket,</div><div class="line">             <span class="keyword">case</span> <span class="keyword">when</span> a.policy_bracket=<span class="string">'S'</span><span class="keyword">then</span> <span class="number">1</span></div><div class="line">                  <span class="keyword">when</span> a.policy_bracket=<span class="string">'X3'</span><span class="keyword">then</span> <span class="number">2</span></div><div class="line">                  <span class="keyword">when</span> a.policy_bracket=<span class="string">'X2'</span><span class="keyword">then</span> <span class="number">3</span></div><div class="line">                  <span class="keyword">when</span> a.policy_bracket=<span class="string">'X1'</span><span class="keyword">then</span> <span class="number">4</span></div><div class="line">  <span class="keyword">when</span> a.policy_bracket=<span class="string">'T'</span><span class="keyword">then</span> <span class="number">5</span></div><div class="line">         <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span> gqcl, <span class="comment">-- 关前策略</span></div><div class="line">         <span class="keyword">case</span> <span class="keyword">when</span> b.policy_bracket=<span class="string">'S'</span><span class="keyword">then</span> <span class="number">1</span></div><div class="line">  <span class="keyword">when</span> b.policy_bracket=<span class="string">'X3'</span><span class="keyword">then</span> <span class="number">2</span></div><div class="line">          <span class="keyword">when</span> b.policy_bracket=<span class="string">'X2'</span><span class="keyword">then</span> <span class="number">3</span></div><div class="line">                  <span class="keyword">when</span> b.policy_bracket=<span class="string">'X1'</span><span class="keyword">then</span> <span class="number">4</span></div><div class="line">  <span class="keyword">when</span> b.policy_bracket=<span class="string">'T'</span><span class="keyword">then</span> <span class="number">5</span></div><div class="line">             <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span> dqcl <span class="comment">-- 当前策略</span></div><div class="line">      <span class="keyword">from</span> haimi_department.v_ma_execution_strategy_his a</div><div class="line">      <span class="keyword">join</span> haimi_department.v_ma_execution_strategy b</div><div class="line">        <span class="keyword">on</span> a.storeid=b.storeid </div><div class="line">      <span class="keyword">where</span> <span class="keyword">date_format</span>(a.invalid_time,<span class="string">'%m-%d'</span>)=<span class="keyword">date_format</span>(<span class="keyword">date_sub</span>(<span class="keyword">curdate</span>(),<span class="built_in">interval</span> <span class="number">1</span> <span class="keyword">day</span>),<span class="string">'%m-%d'</span>) </div><div class="line">    <span class="comment">-- and a.oper_source in ('mrc','qb.xiang@mi-me.com','chen.han@mi-me.com','jia.zheng@mi-me.com')</span></div><div class="line">      )a;</div><div class="line"></div><div class="line"><span class="comment">-- 2.本月商户管理情况</span></div><div class="line"></div><div class="line"><span class="keyword">select</span> <span class="keyword">date_format</span>(<span class="keyword">date_sub</span>(<span class="keyword">curdate</span>(),<span class="built_in">interval</span> <span class="number">1</span> <span class="keyword">day</span>),<span class="string">'%Y-%m'</span>) 月份,</div><div class="line">   <span class="keyword">count</span>(<span class="keyword">distinct</span> <span class="keyword">case</span> <span class="keyword">when</span> dqcl&gt;gqcl <span class="keyword">and</span> dqcl!=<span class="number">7</span> <span class="keyword">and</span> dqcl!=<span class="number">8</span> <span class="keyword">then</span> a.storeid <span class="keyword">end</span>) 当月定性风险商户数,</div><div class="line">       <span class="keyword">count</span>(<span class="keyword">distinct</span> <span class="keyword">case</span> <span class="keyword">when</span> dqcl&gt;gqcl <span class="keyword">and</span> dqcl=<span class="number">7</span> <span class="keyword">then</span> a.storeid <span class="keyword">end</span>) 当月关停风险商户数</div><div class="line">       <span class="comment">-- count(distinct case when dqcl&gt;gqcl and dqcl=8 then a.storeid end) 当月复开商户数</span></div><div class="line"><span class="keyword">from</span> </div><div class="line">     (</div><div class="line">      <span class="keyword">select</span> <span class="keyword">distinct</span> </div><div class="line">     a.storeid,</div><div class="line">             b.policy_bracket,</div><div class="line">             <span class="keyword">case</span> <span class="keyword">when</span> a.policy_bracket=<span class="string">'S'</span><span class="keyword">then</span> <span class="number">1</span></div><div class="line">                  <span class="keyword">when</span> a.policy_bracket=<span class="string">'X3'</span><span class="keyword">then</span> <span class="number">2</span></div><div class="line">                  <span class="keyword">when</span> a.policy_bracket=<span class="string">'X2'</span><span class="keyword">then</span> <span class="number">3</span></div><div class="line">                  <span class="keyword">when</span> a.policy_bracket=<span class="string">'X1'</span><span class="keyword">then</span> <span class="number">4</span></div><div class="line">  <span class="keyword">when</span> a.policy_bracket=<span class="string">'T'</span><span class="keyword">then</span> <span class="number">5</span></div><div class="line">         <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span> gqcl, <span class="comment">-- 关前策略</span></div><div class="line">         <span class="keyword">case</span> <span class="keyword">when</span> b.policy_bracket=<span class="string">'S'</span><span class="keyword">then</span> <span class="number">1</span></div><div class="line">  <span class="keyword">when</span> b.policy_bracket=<span class="string">'X3'</span><span class="keyword">then</span> <span class="number">2</span></div><div class="line">          <span class="keyword">when</span> b.policy_bracket=<span class="string">'X2'</span><span class="keyword">then</span> <span class="number">3</span></div><div class="line">                  <span class="keyword">when</span> b.policy_bracket=<span class="string">'X1'</span><span class="keyword">then</span> <span class="number">4</span></div><div class="line">  <span class="keyword">when</span> b.policy_bracket=<span class="string">'T'</span><span class="keyword">then</span> <span class="number">5</span></div><div class="line">             <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span> dqcl <span class="comment">-- 当前策略</span></div><div class="line">      <span class="keyword">from</span> haimi_department.v_ma_execution_strategy_his a</div><div class="line">      <span class="keyword">join</span> haimi_department.v_ma_execution_strategy b</div><div class="line">        <span class="keyword">on</span> a.storeid=b.storeid </div><div class="line">      <span class="keyword">where</span> <span class="keyword">date_format</span>(a.invalid_time,<span class="string">'%Y-%m'</span>)=<span class="keyword">date_format</span>(<span class="keyword">date_sub</span>(<span class="keyword">curdate</span>(),<span class="built_in">interval</span> <span class="number">1</span> <span class="keyword">day</span>),<span class="string">'%Y-%m'</span>) <span class="comment">-- T+1原因</span></div><div class="line">    <span class="comment">-- and a.oper_source in ('mrc','qb.xiang@mi-me.com','chen.han@mi-me.com','jia.zheng@mi-me.com')</span></div><div class="line">      )a; </div><div class="line"><span class="comment">-- 3.M1+前15</span></div><div class="line"><span class="comment">-- v_haimi_wallet_order loan</span></div><div class="line"></div><div class="line"><span class="keyword">select</span> store_id ,</div><div class="line">       store_name,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> loan_cre_status <span class="keyword">in</span>(<span class="string">'M2'</span>,<span class="string">'M3'</span>,<span class="string">'M4'</span>,<span class="string">'M5'</span>,<span class="string">'M6'</span>,<span class="string">'M6+'</span>) <span class="keyword">THEN</span> <span class="number">1</span> <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>) <span class="string">'M1+会员数'</span>,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> loan_cre_status <span class="keyword">in</span>(<span class="string">'M2'</span>,<span class="string">'M3'</span>,<span class="string">'M4'</span>,<span class="string">'M5'</span>,<span class="string">'M6'</span>,<span class="string">'M6+'</span>) <span class="keyword">THEN</span> principal_rest+interest_rest <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>) <span class="string">'M1+金额'</span></div><div class="line"></div><div class="line"><span class="keyword">from</span> haimi_department.v_haimi_wallet_order </div><div class="line"><span class="keyword">where</span> loan_cre_status <span class="keyword">in</span>(<span class="string">'M2'</span>,<span class="string">'M3'</span>,<span class="string">'M4'</span>,<span class="string">'M5'</span>,<span class="string">'M6'</span>,<span class="string">'M6+'</span>)</div><div class="line"><span class="keyword">group</span> <span class="keyword">by</span> store_id</div><div class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="string">'M1+会员数'</span></div><div class="line"><span class="keyword">limit</span> <span class="number">0</span>,<span class="number">15</span>;</div><div class="line"></div><div class="line"><span class="comment">--4.昨日风险定性明细</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">-- 原始</span></div><div class="line"><span class="comment">-- 一、征信科室</span></div><div class="line"><span class="comment">-- (一)征信</span></div><div class="line"><span class="comment">-- 1.审核情况</span></div><div class="line"><span class="keyword">select</span> a.日期,处理量,过件率,<span class="string">`过件总额(W)`</span>,</div><div class="line"> <span class="string">`培训%`</span>,</div><div class="line">平均审核时效,时区一 <span class="keyword">as</span> <span class="string">'&lt;=5min%'</span>,时区二 <span class="keyword">as</span> <span class="string">'(5m,10m]%'</span>,时区三 <span class="keyword">as</span> <span class="string">'(10m,15m]%'</span>,时区四 <span class="keyword">as</span> <span class="string">'&gt;15min%'</span></div><div class="line"><span class="keyword">from</span></div><div class="line">    (</div><div class="line">     <span class="keyword">select</span> <span class="keyword">date_format</span>(a.audit_time,<span class="string">'%m-%d'</span>) 日期,</div><div class="line">        <span class="keyword">count</span>(<span class="keyword">distinct</span> a.order_id) 处理量,</div><div class="line">        <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> c.STATE=<span class="number">3</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)/<span class="keyword">count</span>(<span class="keyword">distinct</span> a.order_id) <span class="keyword">as</span> 过件率, <span class="comment">-- 过件/（过件+拒件）</span></div><div class="line">            <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> c.STATE=<span class="number">3</span> <span class="keyword">then</span> c.amount/<span class="number">100</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)/<span class="number">10000</span> <span class="string">'过件总额(W)'</span></div><div class="line">             , <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> c.STATE=<span class="number">3</span> <span class="keyword">and</span> b.store_secondlabel=<span class="string">'%培训'</span> <span class="keyword">then</span> c.amount <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)/<span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> c.STATE=<span class="number">3</span> <span class="keyword">then</span> c.amount <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="string">'培训%'</span></div><div class="line">     <span class="keyword">from</span> haimi_department.v_cta_order_audit a </div><div class="line">     <span class="keyword">join</span> haimi_department.v_cta_order_merchantinfo b  <span class="comment">-- select distinct store_secondlabel from v_cta_order_merchantinfo</span></div><div class="line">       <span class="keyword">on</span> a.order_id=b.order_id</div><div class="line"> <span class="keyword">join</span> haimi_department.v_cta_order_applyinfo c </div><div class="line">       <span class="keyword">on</span> a.order_id=c.order_id</div><div class="line">     <span class="keyword">where</span> b.merchant_type=<span class="number">1</span></div><div class="line">     <span class="keyword">and</span> <span class="built_in">date</span>(a.audit_time)=<span class="keyword">date_sub</span>(<span class="keyword">curdate</span>(),<span class="built_in">interval</span> <span class="number">1</span> <span class="keyword">day</span>)</div><div class="line"> <span class="keyword">and</span> APPLY_SOURCE = <span class="string">'APP_haimi'</span></div><div class="line"> )a</div><div class="line"><span class="keyword">join</span></div><div class="line">    (</div><div class="line">     <span class="keyword">select</span> <span class="keyword">date_format</span>(update_time,<span class="string">'%m-%d'</span>)日期,</div><div class="line">            <span class="keyword">avg</span>(cta_time) 平均审核时效,</div><div class="line">            <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> cta_time&lt;=<span class="number">5</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)/<span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> cta_time <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 时区一,</div><div class="line">            <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> cta_time&gt;<span class="number">5</span> <span class="keyword">and</span> cta_time&lt;=<span class="number">10</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)/<span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> cta_time <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 时区二,</div><div class="line">            <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> cta_time&gt;<span class="number">10</span> <span class="keyword">and</span> cta_time&lt;=<span class="number">15</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)/<span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> cta_time <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 时区三,</div><div class="line">            <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> cta_time&gt;<span class="number">15</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)/<span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> cta_time <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 时区四 </div><div class="line">     <span class="keyword">from</span>(</div><div class="line">          <span class="keyword">select</span> <span class="keyword">distinct</span></div><div class="line">                 a.order_id,</div><div class="line">                 a.update_time,</div><div class="line">                 <span class="keyword">timestampdiff</span>(<span class="keyword">second</span>,a.create_time,a.update_time)/<span class="number">60</span> <span class="keyword">as</span> cta_time </div><div class="line">      <span class="keyword">from</span> haimi_department.v_cta_order_applyinfo a </div><div class="line">          <span class="keyword">join</span> haimi_department.v_cta_order_merchantinfo b </div><div class="line">          <span class="keyword">on</span> a.order_id=b.order_id</div><div class="line">          <span class="keyword">where</span> <span class="built_in">date</span>(a.update_time)=<span class="keyword">date_sub</span>(<span class="keyword">curdate</span>(),<span class="built_in">interval</span> <span class="number">1</span> <span class="keyword">day</span>)</div><div class="line">          <span class="keyword">and</span> <span class="keyword">hour</span>(a.create_time)&lt;=<span class="number">20</span> </div><div class="line">          <span class="keyword">and</span> <span class="keyword">hour</span>(a.create_time)&gt;=<span class="number">9</span></div><div class="line">          <span class="keyword">and</span> a.order_id <span class="keyword">not</span> <span class="keyword">in</span> (<span class="keyword">select</span> <span class="keyword">distinct</span> order_id <span class="keyword">from</span> haimi_department.v_cta_patch_apply_item <span class="keyword">where</span> code <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span>) </div><div class="line">          <span class="keyword">and</span> a.order_id <span class="keyword">not</span> <span class="keyword">in</span> (<span class="keyword">select</span> <span class="keyword">distinct</span> base_order_no <span class="keyword">from</span> haimi_department.v_money_box_order <span class="keyword">where</span> <span class="keyword">status</span> =<span class="string">'1041'</span>)</div><div class="line">  <span class="keyword">and</span> APPLY_SOURCE = <span class="string">'APP_haimi'</span></div><div class="line">          <span class="keyword">and</span> a.state=<span class="string">'3'</span></div><div class="line">          <span class="keyword">and</span> b.merchant_type=<span class="number">1</span></div><div class="line">      )a</div><div class="line">       )b</div><div class="line"><span class="keyword">on</span> a.日期=b.日期;</div><div class="line"></div><div class="line"><span class="comment">-- 2.拒件情况</span></div><div class="line"><span class="keyword">select</span> <span class="keyword">date_format</span>(a.audit_time,<span class="string">'%m-%d'</span>) 日期,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> a.cause_code <span class="keyword">in</span> (<span class="string">'D443'</span>,<span class="string">'D336'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 商户违规,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> a.cause_code <span class="keyword">in</span>(<span class="string">'D440'</span>,<span class="string">'D444'</span>,<span class="string">'D441'</span>,<span class="string">'D442'</span>,<span class="string">'D344'</span>,<span class="string">'D433'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 疑似虚假交易,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> a.cause_code=<span class="string">'D515'</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="string">'客户取消/增加金额/更改期限'</span>,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> a.cause_code <span class="keyword">in</span>(<span class="string">'D437'</span>,<span class="string">'D118'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 贷款资信不良,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> a.cause_code=<span class="string">'D335'</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 非开放项目,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> a.cause_code=<span class="string">'D201'</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 综合资格不符,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> a.cause_code=<span class="string">'D518'</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 测试,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> a.cause_code <span class="keyword">in</span>(<span class="string">'D517'</span>,<span class="string">'D331'</span>,<span class="string">'D339'</span>,<span class="string">'D499'</span>,<span class="string">'D519'</span>,<span class="string">'D337'</span>,<span class="string">'D523'</span>,<span class="string">'D516'</span>,<span class="string">'D513'</span>,<span class="string">'D436'</span>,<span class="string">'D338'</span>,<span class="string">'D343'</span>,<span class="string">'D333'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">END</span>) 其他,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> c.state=<span class="number">4</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 总量</div><div class="line"><span class="keyword">from</span> haimi_department.v_cta_order_audit a </div><div class="line"><span class="keyword">join</span> haimi_department.v_cta_order_merchantinfo b </div><div class="line"><span class="keyword">on</span> a.order_id=b.order_id</div><div class="line"><span class="keyword">inner</span> <span class="keyword">join</span> v_cta_order_applyinfo c</div><div class="line"><span class="keyword">on</span> a.order_id=c.order_id</div><div class="line"><span class="keyword">where</span> b.merchant_type=<span class="number">1</span></div><div class="line"><span class="keyword">and</span> APPLY_SOURCE = <span class="string">'APP_haimi'</span></div><div class="line"><span class="keyword">and</span> <span class="built_in">date</span>(a.audit_time)=<span class="keyword">date_sub</span>(<span class="keyword">curdate</span>(),<span class="built_in">interval</span> <span class="number">1</span> <span class="keyword">day</span>);</div><div class="line"></div><div class="line"><span class="comment">-- 3.库存</span></div><div class="line"><span class="keyword">select</span> a.截止日期,待处理量,待补件量</div><div class="line"><span class="keyword">from</span>(</div><div class="line">     <span class="keyword">select</span> <span class="keyword">date_format</span>(<span class="keyword">curdate</span>(),<span class="string">'%m-%d'</span>) 截止日期,</div><div class="line">            <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> a.state <span class="keyword">in</span> (<span class="number">0</span>,<span class="number">1</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 待处理量</div><div class="line">     <span class="keyword">from</span> haimi_department.v_cta_order_applyinfo a </div><div class="line">     <span class="keyword">join</span> haimi_department.v_cta_order_merchantinfo b </div><div class="line">     <span class="keyword">on</span> a.order_id=b.order_id </div><div class="line">     <span class="keyword">where</span> b.merchant_type=<span class="number">1</span></div><div class="line">     <span class="keyword">and</span> APPLY_SOURCE = <span class="string">'APP_haimi'</span></div><div class="line">     )a</div><div class="line"><span class="keyword">join</span> </div><div class="line">    (</div><div class="line">     <span class="keyword">select</span> <span class="keyword">date_format</span>(<span class="keyword">curdate</span>(),<span class="string">'%m-%d'</span>) 截止日期,</div><div class="line">            <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> a.state=<span class="number">2</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 待补件量</div><div class="line">     <span class="keyword">from</span> haimi_department.v_cta_order_applyinfo a</div><div class="line">     <span class="keyword">join</span> haimi_department.v_cta_order_merchantinfo b </div><div class="line">     <span class="keyword">on</span> a.order_id=b.order_id </div><div class="line">     <span class="keyword">where</span> b.merchant_type=<span class="number">1</span></div><div class="line">     <span class="keyword">and</span> APPLY_SOURCE = <span class="string">'APP_haimi'</span></div><div class="line">     <span class="keyword">and</span> a.order_id <span class="keyword">not</span> <span class="keyword">in</span> (<span class="keyword">select</span> <span class="keyword">distinct</span> base_order_no <span class="keyword">from</span> haimi_department.v_money_box_order <span class="keyword">where</span> <span class="keyword">status</span>=<span class="string">'1041'</span>)</div><div class="line">     )b</div><div class="line"><span class="keyword">on</span> a.截止日期=b.截止日期;</div><div class="line"></div><div class="line"><span class="comment">-- 4.补件情况</span></div><div class="line"></div><div class="line"><span class="keyword">select</span> <span class="keyword">date_format</span>(a.patch_time,<span class="string">'%m-%d'</span>) 日期,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 总量,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">in</span> (<span class="string">'PI001'</span>,<span class="string">'PI002'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 身份证,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">in</span> (<span class="string">'PI003'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 自拍,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">in</span> (<span class="string">'PC001'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 合同,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">in</span> (<span class="string">'MX001'</span>,<span class="string">'MX002'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 电话未接通,</div><div class="line">       <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">in</span> (<span class="string">'PQ001'</span>,<span class="string">'PQ002'</span>,<span class="string">'PQ003'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 学历相关,</div><div class="line">   <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> code <span class="keyword">not</span> <span class="keyword">in</span> (<span class="string">'PI001'</span>,<span class="string">'PI002'</span>,<span class="string">'PI003'</span>,<span class="string">'PC001'</span>,<span class="string">'MX001'</span>,<span class="string">'MX002'</span>,<span class="string">'PQ001'</span>,<span class="string">'PQ002'</span>,<span class="string">'PQ003'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 其他</div><div class="line"><span class="keyword">from</span> haimi_department.v_cta_patch_apply_item a </div><div class="line"><span class="keyword">inner</span> <span class="keyword">join</span> haimi_department.v_cta_order_applyinfo b</div><div class="line"><span class="keyword">on</span> a.order_id=b.order_id </div><div class="line"><span class="keyword">where</span> <span class="built_in">date</span>(a.patch_time)=<span class="keyword">date_sub</span>(<span class="keyword">curdate</span>(),<span class="built_in">interval</span> <span class="number">1</span> <span class="keyword">day</span>)</div><div class="line"><span class="keyword">and</span> APPLY_SOURCE = <span class="string">'APP_haimi'</span>;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">-- 5.线下分期商户CA过件率</span></div><div class="line"><span class="keyword">select</span> <span class="keyword">date_format</span>(appl_time,<span class="string">'%m-%d'</span>) <span class="keyword">as</span> 日期,</div><div class="line">       <span class="keyword">count</span>(<span class="keyword">distinct</span> member_id) <span class="keyword">as</span> 处理量,</div><div class="line">       <span class="keyword">count</span>(<span class="keyword">distinct</span> <span class="keyword">case</span> <span class="keyword">when</span> pass=<span class="number">1</span> <span class="keyword">then</span> member_id <span class="keyword">end</span>)/<span class="keyword">count</span>(<span class="keyword">distinct</span> member_id) <span class="keyword">as</span> 过件率</div><div class="line"><span class="keyword">from</span> </div><div class="line">    (</div><div class="line"> <span class="keyword">select</span> <span class="keyword">distinct</span> </div><div class="line">a.appl_no,</div><div class="line">            a.appl_time,</div><div class="line">            b.member_id,</div><div class="line">            d.pass</div><div class="line">     <span class="keyword">from</span> haimi_department.v_ca_appl a </div><div class="line">     <span class="keyword">join</span> haimi_department.v_ca_appl_member_identity b </div><div class="line">   <span class="keyword">on</span> a.appl_no=b.appl_no</div><div class="line"> <span class="keyword">join</span> haimi_department.v_ca_appl_merchant c </div><div class="line">       <span class="keyword">on</span> a.appl_no=c.appl_no</div><div class="line">     <span class="keyword">join</span> haimi_department.v_ca_str_result d </div><div class="line">       <span class="keyword">on</span> haimi_department.a.appl_no=d.appl_no</div><div class="line"> <span class="keyword">where</span> <span class="built_in">date</span>(a.appl_time)&gt;<span class="keyword">date_sub</span>(<span class="keyword">curdate</span>(),<span class="built_in">interval</span> <span class="number">15</span> <span class="keyword">day</span>)</div><div class="line">       <span class="keyword">and</span> <span class="built_in">date</span>(a.appl_time)&lt;&gt;<span class="keyword">curdate</span>()</div><div class="line">       <span class="keyword">and</span> c.merchant_type=<span class="number">1</span></div><div class="line">       <span class="keyword">and</span> a.APPL_SOURCE = <span class="string">'APP_haimi'</span></div><div class="line">   <span class="keyword">and</span> c.merchant_id !=<span class="string">'105750'</span></div><div class="line"> ) a</div><div class="line"><span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">date_format</span>(appl_time,<span class="string">'%m-%d'</span>)</div><div class="line"></div><div class="line"><span class="comment">-- 6.CTA过件率走势</span></div><div class="line"></div><div class="line"><span class="keyword">select</span> <span class="keyword">date_format</span>(update_time,<span class="string">'%m-%d'</span>) 日期,</div><div class="line">       <span class="keyword">count</span>(<span class="keyword">distinct</span> order_id) <span class="keyword">as</span> 处理量,</div><div class="line">       <span class="keyword">count</span>(<span class="keyword">distinct</span> <span class="keyword">case</span> <span class="keyword">when</span> state=<span class="number">3</span> <span class="keyword">then</span> order_id <span class="keyword">end</span>) <span class="keyword">as</span> 过件量,</div><div class="line">       <span class="keyword">count</span>(<span class="keyword">distinct</span> <span class="keyword">case</span> <span class="keyword">when</span> state=<span class="number">3</span> <span class="keyword">then</span> order_id <span class="keyword">end</span>)/<span class="keyword">count</span>(<span class="keyword">distinct</span> order_id) <span class="keyword">as</span> 过件率</div><div class="line"><span class="keyword">from</span></div><div class="line">    (</div><div class="line">     <span class="keyword">select</span> <span class="keyword">distinct</span></div><div class="line">            a.order_id,</div><div class="line">            a.update_time,</div><div class="line">            a.member_id,</div><div class="line">            a.state</div><div class="line">     <span class="keyword">from</span> haimi_department.v_cta_order_applyinfo a</div><div class="line">     <span class="keyword">join</span> haimi_department.v_cta_order_merchantinfo b</div><div class="line">     <span class="keyword">on</span> a.order_id=b.order_id</div><div class="line">     <span class="keyword">where</span> <span class="built_in">date</span>(a.update_time)&gt;<span class="keyword">date_sub</span>(<span class="keyword">curdate</span>(),<span class="built_in">interval</span> <span class="number">15</span> <span class="keyword">day</span>) </div><div class="line">     <span class="keyword">and</span> <span class="built_in">date</span>(a.update_time)&lt;&gt;<span class="keyword">curdate</span>()</div><div class="line">     <span class="keyword">and</span> b.merchant_type=<span class="number">1</span></div><div class="line">     <span class="keyword">and</span> a.state <span class="keyword">in</span> (<span class="number">3</span>,<span class="number">4</span>)</div><div class="line">     <span class="keyword">and</span> a.APPLY_SOURCE = <span class="string">'APP_haimi'</span></div><div class="line">     )a</div><div class="line"><span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">date_format</span>(update_time,<span class="string">'%m-%d'</span>)</div><div class="line"></div><div class="line"><span class="comment">-- 7.处理量走势及非补件审核时效分布</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">select</span> a.日期,</div><div class="line">       处理量,</div><div class="line">   时区一 <span class="keyword">as</span> <span class="string">'&lt;=5min%'</span>,</div><div class="line">       时区二 <span class="keyword">as</span> <span class="string">'(5m,10m]%'</span>,</div><div class="line">       时区三 <span class="keyword">as</span> <span class="string">'(10m,15m]%'</span>,</div><div class="line">       时区四 <span class="keyword">as</span> <span class="string">'&gt;15min%'</span></div><div class="line"><span class="keyword">from</span></div><div class="line">    (</div><div class="line">     <span class="keyword">select</span> <span class="keyword">date_format</span>(a.audit_time,<span class="string">'%m-%d'</span>) 日期,</div><div class="line">        <span class="keyword">count</span>(<span class="keyword">distinct</span> a.order_id) 处理量</div><div class="line">     <span class="keyword">from</span> haimi_department.v_cta_order_audit a</div><div class="line">     <span class="keyword">join</span> haimi_department.v_cta_order_merchantinfo b </div><div class="line">     <span class="keyword">on</span> a.order_id=b.order_id</div><div class="line">     <span class="keyword">where</span> b.merchant_type=<span class="number">1</span></div><div class="line">     <span class="keyword">and</span> APPLY_SOURCE = <span class="string">'APP_haimi'</span></div><div class="line">     <span class="keyword">and</span> <span class="built_in">date</span>(a.audit_time)&gt;<span class="keyword">date_sub</span>(<span class="keyword">curdate</span>(),<span class="built_in">interval</span> <span class="number">15</span> <span class="keyword">day</span>)</div><div class="line">     <span class="keyword">and</span> <span class="built_in">date</span>(a.audit_time)&lt;&gt;<span class="keyword">curdate</span>()</div><div class="line">     <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">date_format</span>(a.audit_time,<span class="string">'%m-%d'</span>)</div><div class="line">     )a </div><div class="line"><span class="keyword">join</span></div><div class="line">    (</div><div class="line"> <span class="keyword">select</span> <span class="keyword">date_format</span>(audit_time,<span class="string">'%m-%d'</span>)日期,</div><div class="line">            <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> cta_time&lt;=<span class="number">5</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)/<span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> cta_time <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 时区一,</div><div class="line">            <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> cta_time&gt;<span class="number">5</span> <span class="keyword">and</span> cta_time&lt;=<span class="number">10</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)/<span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> cta_time <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 时区二,</div><div class="line">            <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> cta_time&gt;<span class="number">10</span> <span class="keyword">and</span> cta_time&lt;=<span class="number">15</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)/<span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> cta_time <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 时区三,</div><div class="line">            <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> cta_time&gt;<span class="number">15</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)/<span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> cta_time <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) 时区四</div><div class="line">     <span class="keyword">from</span></div><div class="line">         (</div><div class="line">          <span class="keyword">select</span> <span class="keyword">distinct</span></div><div class="line">                 a.order_id,</div><div class="line">     a.update_time,</div><div class="line">                 c.audit_time,</div><div class="line">                 time_to_sec(<span class="keyword">timediff</span>(a.update_time,a.create_time))/<span class="number">60</span> <span class="keyword">as</span> cta_time_ck,</div><div class="line">                 <span class="keyword">timestampdiff</span>(<span class="keyword">second</span>,a.create_time,a.update_time)/<span class="number">60</span> <span class="keyword">as</span> cta_time</div><div class="line">      <span class="keyword">from</span> haimi_department.v_cta_order_applyinfo a</div><div class="line">      <span class="keyword">join</span> haimi_department.v_cta_order_merchantinfo b </div><div class="line">          <span class="keyword">on</span> a.order_id=b.order_id</div><div class="line">          <span class="keyword">join</span> haimi_department.v_cta_order_audit c </div><div class="line">  <span class="keyword">on</span> a.order_id=c.order_id</div><div class="line">          <span class="keyword">where</span> <span class="built_in">date</span>(a.create_time)&gt;<span class="keyword">date_sub</span>(<span class="keyword">curdate</span>(),<span class="built_in">interval</span> <span class="number">15</span> <span class="keyword">day</span>) </div><div class="line">          <span class="keyword">and</span> <span class="built_in">date</span>(a.create_time)&lt;&gt;<span class="keyword">curdate</span>()</div><div class="line">          <span class="keyword">and</span> b.merchant_type=<span class="number">1</span></div><div class="line">          <span class="keyword">and</span> <span class="keyword">hour</span>(a.create_time)&gt;=<span class="number">9</span> </div><div class="line">          <span class="keyword">and</span> <span class="keyword">hour</span>(a.create_time)&lt;=<span class="number">20</span> </div><div class="line">          <span class="comment">-- and c.result=3</span></div><div class="line">          <span class="keyword">and</span> a.order_id <span class="keyword">not</span> <span class="keyword">in</span> (<span class="keyword">select</span> <span class="keyword">distinct</span> order_id <span class="keyword">from</span> haimi_department.v_cta_patch_apply_item <span class="keyword">where</span> code <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span>) </div><div class="line">          <span class="keyword">and</span> a.order_id <span class="keyword">not</span> <span class="keyword">in</span> (<span class="keyword">select</span> <span class="keyword">distinct</span> base_order_no <span class="keyword">from</span> haimi_department.v_money_box_order <span class="keyword">where</span> <span class="keyword">status</span> =<span class="string">'1041'</span>)</div><div class="line">      ) a </div><div class="line"><span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">date_format</span>(audit_time,<span class="string">'%m-%d'</span>)</div><div class="line">    )b</div><div class="line"><span class="keyword">on</span> a.日期=b.日期</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">-- (二)商户审核</span></div><div class="line"><span class="comment">-- 1.审核情况</span></div><div class="line"><span class="keyword">select</span> a.*,b.新进件量 </div><div class="line"><span class="keyword">from</span> </div><div class="line">     (</div><div class="line">      <span class="keyword">select</span> <span class="keyword">date_format</span>(a.oper_time,<span class="string">'%m-%d'</span>) 日期,</div><div class="line">             <span class="keyword">count</span>(<span class="keyword">distinct</span> a.merchantid) <span class="string">'总处理量'</span>,</div><div class="line">             <span class="keyword">count</span>(<span class="keyword">distinct</span> <span class="keyword">case</span> <span class="keyword">when</span> a.after_status =<span class="number">5</span> <span class="keyword">then</span> a.merchantid <span class="keyword">end</span>) <span class="string">'过件量'</span>,</div><div class="line"> <span class="keyword">count</span>(<span class="keyword">distinct</span> <span class="keyword">case</span> <span class="keyword">when</span> a.after_status =<span class="number">6</span> <span class="keyword">then</span> a.merchantid <span class="keyword">end</span>) <span class="string">'退件量'</span>,</div><div class="line">             <span class="keyword">count</span>(<span class="keyword">distinct</span> <span class="keyword">case</span> <span class="keyword">when</span> a.after_status =<span class="number">4</span> <span class="keyword">then</span> a.merchantid <span class="keyword">end</span>) <span class="string">'补件量'</span></div><div class="line">      <span class="keyword">from</span> haimi_department.v_ma_merchant_apply_oper_his a</div><div class="line">      <span class="keyword">join</span> haimi_department.v_ma_user b </div><div class="line">      <span class="keyword">on</span> a.oper_userid=b.uid</div><div class="line">      <span class="keyword">inner</span> <span class="keyword">join</span> haimi_department.v_ma_department c</div><div class="line">      <span class="keyword">on</span> b.depid=c.depid</div><div class="line">  <span class="keyword">where</span> <span class="built_in">date</span>(a.oper_time)=<span class="keyword">date_sub</span>(<span class="keyword">curdate</span>(),<span class="built_in">interval</span> <span class="number">1</span> <span class="keyword">day</span>)</div><div class="line">      <span class="comment">-- and b.depid=13   -- v_ma_department</span></div><div class="line">      <span class="keyword">and</span> b.is_opened=<span class="number">1</span></div><div class="line">      <span class="keyword">and</span> c.is_k12 = <span class="string">'1'</span></div><div class="line">      )a</div><div class="line"><span class="keyword">left</span> <span class="keyword">join</span> </div><div class="line">         (</div><div class="line">  <span class="keyword">select</span> <span class="keyword">date_format</span>(apply_time,<span class="string">'%m-%d'</span>) 日期,</div><div class="line">                 <span class="keyword">count</span>(<span class="keyword">distinct</span> merchantid) 新进件量 </div><div class="line">      <span class="keyword">from</span> haimi_department.v_ma_merchant_applyinfo</div><div class="line">          <span class="keyword">where</span> <span class="built_in">date</span>(apply_time)=<span class="keyword">date_sub</span>(<span class="keyword">curdate</span>(),<span class="built_in">interval</span> <span class="number">1</span> <span class="keyword">day</span>)</div><div class="line">          <span class="keyword">and</span> apply_departmentid = <span class="string">'196'</span>  <span class="comment">-- 196为K12分部</span></div><div class="line">          )b </div><div class="line"><span class="keyword">on</span> a.日期 =b.日期;</div><div class="line"><span class="comment">-- 2.处理量及过件量走势</span></div><div class="line"></div><div class="line"><span class="keyword">select</span> <span class="keyword">date_format</span>(a.oper_time,<span class="string">'%m-%d'</span>) 日期,</div><div class="line">       <span class="keyword">count</span>(<span class="keyword">distinct</span> a.merchantid) <span class="string">'处理量'</span>,</div><div class="line">       <span class="keyword">count</span>(<span class="keyword">distinct</span> <span class="keyword">case</span> <span class="keyword">when</span> a.after_status =<span class="number">5</span> <span class="keyword">then</span> a.merchantid <span class="keyword">end</span>) <span class="string">'过件量'</span></div><div class="line"><span class="keyword">from</span> haimi_department.v_ma_merchant_apply_oper_his a</div><div class="line"><span class="keyword">join</span> haimi_department.v_ma_user b </div><div class="line"><span class="keyword">on</span> a.oper_userid=b.uid</div><div class="line"><span class="keyword">inner</span> <span class="keyword">join</span> haimi_department.v_ma_department c</div><div class="line"><span class="keyword">on</span> b.depid=c.depid</div><div class="line"><span class="keyword">where</span> <span class="built_in">date</span>(a.oper_time)&gt;<span class="keyword">date_sub</span>(<span class="keyword">curdate</span>(),<span class="built_in">interval</span> <span class="number">15</span> <span class="keyword">day</span>)</div><div class="line"><span class="keyword">and</span> <span class="built_in">date</span>(a.oper_time)&lt;&gt;<span class="keyword">curdate</span>()</div><div class="line"><span class="comment">-- and b.depid=13</span></div><div class="line"><span class="keyword">and</span> b.is_opened=<span class="number">1</span></div><div class="line"><span class="keyword">and</span> c.is_k12 = <span class="string">'1'</span></div><div class="line"><span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">date_format</span>(a.oper_time,<span class="string">'%m-%d'</span>)</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">-- 3.本月上线商户情况</span></div><div class="line"><span class="keyword">select</span> <span class="keyword">date_format</span>(<span class="keyword">date_sub</span>(<span class="keyword">curdate</span>(),<span class="built_in">interval</span> <span class="number">1</span> <span class="keyword">day</span>),<span class="string">'%m-%d'</span>) 截止日期,</div><div class="line">       sec_template_type 行业类型,</div><div class="line">       <span class="keyword">count</span>(<span class="keyword">distinct</span> merchantid) 上线数量</div><div class="line"><span class="keyword">from</span></div><div class="line">     (</div><div class="line">      <span class="keyword">select</span> <span class="keyword">distinct</span></div><div class="line">             a.merchantid,</div><div class="line">             a.lastcheck_time,</div><div class="line">             a.lastcheck_person,</div><div class="line">             b.merchant_template_type,</div><div class="line">             b.sec_template_type  </div><div class="line">      <span class="keyword">from</span> haimi_department.v_ma_merchant_applyinfo a</div><div class="line">      <span class="keyword">join</span> haimi_department.v_ma_merchant_baseinfo b  </div><div class="line">  <span class="keyword">on</span> a.merchantid=b.merchantid</div><div class="line">      <span class="keyword">join</span> haimi_department.v_ma_user c</div><div class="line">      <span class="keyword">on</span> a.lastcheck_person=c.uid</div><div class="line">      <span class="keyword">where</span> <span class="keyword">date_format</span>(a.lastcheck_time,<span class="string">'%Y-%m'</span>)=<span class="keyword">date_format</span>(<span class="keyword">date_sub</span>(<span class="keyword">curdate</span>(),<span class="built_in">interval</span> <span class="number">1</span> <span class="keyword">day</span>),<span class="string">'%Y-%m'</span>)</div><div class="line">      <span class="keyword">and</span> a.status=<span class="string">'5'</span></div><div class="line">     <span class="comment">-- and c.depid=13</span></div><div class="line">      <span class="keyword">and</span> c.is_opened=<span class="number">1</span></div><div class="line">      )a</div><div class="line"><span class="keyword">group</span> <span class="keyword">by</span> sec_template_type;</div><div class="line"></div><div class="line"><span class="comment">-- 二、反欺诈科室</span></div><div class="line"><span class="comment">-- 1.定性情况</span></div><div class="line"><span class="keyword">select</span> <span class="keyword">date_format</span>(<span class="keyword">date_sub</span>(<span class="keyword">curdate</span>(),<span class="built_in">interval</span> <span class="number">1</span> <span class="keyword">day</span>),<span class="string">'%m-%d'</span>) 日期,</div><div class="line">   <span class="keyword">count</span>(<span class="keyword">distinct</span> <span class="keyword">case</span> <span class="keyword">when</span> dqcl&gt;gqcl <span class="keyword">and</span> dqcl!=<span class="number">7</span> <span class="keyword">and</span> dqcl!=<span class="number">8</span> <span class="keyword">then</span> a.storeid <span class="keyword">end</span>) 昨日定性风险商户数,</div><div class="line">       <span class="keyword">count</span>(<span class="keyword">distinct</span> <span class="keyword">case</span> <span class="keyword">when</span> dqcl&gt;gqcl <span class="keyword">and</span> dqcl=<span class="number">7</span> <span class="keyword">then</span> a.storeid <span class="keyword">end</span>) 昨日关停风险商户数</div><div class="line">       <span class="comment">-- count(distinct case when dqcl&gt;gqcl and dqcl=8 then a.storeid else 0 end) 昨日复开商户数</span></div><div class="line"><span class="keyword">from</span> </div><div class="line">     (</div><div class="line">  <span class="keyword">select</span> <span class="keyword">distinct</span> </div><div class="line">     a.storeid,</div><div class="line">             <span class="comment">-- a.policy_bracket,</span></div><div class="line">             b.policy_bracket,</div><div class="line">             <span class="keyword">case</span> <span class="keyword">when</span> a.policy_bracket=<span class="string">'S'</span><span class="keyword">then</span> <span class="number">1</span></div><div class="line">                  <span class="keyword">when</span> a.policy_bracket=<span class="string">'X3'</span><span class="keyword">then</span> <span class="number">2</span></div><div class="line">                  <span class="keyword">when</span> a.policy_bracket=<span class="string">'X2'</span><span class="keyword">then</span> <span class="number">3</span></div><div class="line">                  <span class="keyword">when</span> a.policy_bracket=<span class="string">'X1'</span><span class="keyword">then</span> <span class="number">4</span></div><div class="line">  <span class="keyword">when</span> a.policy_bracket=<span class="string">'T'</span><span class="keyword">then</span> <span class="number">5</span></div><div class="line">         <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span> gqcl, <span class="comment">-- 关前策略</span></div><div class="line">         <span class="keyword">case</span> <span class="keyword">when</span> b.policy_bracket=<span class="string">'S'</span><span class="keyword">then</span> <span class="number">1</span></div><div class="line">  <span class="keyword">when</span> b.policy_bracket=<span class="string">'X3'</span><span class="keyword">then</span> <span class="number">2</span></div><div class="line">          <span class="keyword">when</span> b.policy_bracket=<span class="string">'X2'</span><span class="keyword">then</span> <span class="number">3</span></div><div class="line">                  <span class="keyword">when</span> b.policy_bracket=<span class="string">'X1'</span><span class="keyword">then</span> <span class="number">4</span></div><div class="line">  <span class="keyword">when</span> b.policy_bracket=<span class="string">'T'</span><span class="keyword">then</span> <span class="number">5</span></div><div class="line">             <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span> dqcl <span class="comment">-- 当前策略</span></div><div class="line">      <span class="keyword">from</span> haimi_department.v_ma_execution_strategy_his a</div><div class="line">      <span class="keyword">join</span> haimi_department.v_ma_execution_strategy b</div><div class="line">        <span class="keyword">on</span> a.storeid=b.storeid </div><div class="line">      <span class="keyword">where</span> <span class="keyword">date_format</span>(a.invalid_time,<span class="string">'%m-%d'</span>)=<span class="keyword">date_format</span>(<span class="keyword">date_sub</span>(<span class="keyword">curdate</span>(),<span class="built_in">interval</span> <span class="number">1</span> <span class="keyword">day</span>),<span class="string">'%m-%d'</span>) </div><div class="line">    <span class="comment">-- and a.oper_source in ('mrc','qb.xiang@mi-me.com','chen.han@mi-me.com','jia.zheng@mi-me.com')</span></div><div class="line">      )a;</div><div class="line"></div><div class="line"><span class="comment">-- 2.本月商户管理情况</span></div><div class="line"></div><div class="line"><span class="keyword">select</span> <span class="keyword">date_format</span>(<span class="keyword">date_sub</span>(<span class="keyword">curdate</span>(),<span class="built_in">interval</span> <span class="number">1</span> <span class="keyword">day</span>),<span class="string">'%Y-%m'</span>) 月份,</div><div class="line">   <span class="keyword">count</span>(<span class="keyword">distinct</span> <span class="keyword">case</span> <span class="keyword">when</span> dqcl&gt;gqcl <span class="keyword">and</span> dqcl!=<span class="number">7</span> <span class="keyword">and</span> dqcl!=<span class="number">8</span> <span class="keyword">then</span> a.storeid <span class="keyword">end</span>) 当月定性风险商户数,</div><div class="line">       <span class="keyword">count</span>(<span class="keyword">distinct</span> <span class="keyword">case</span> <span class="keyword">when</span> dqcl&gt;gqcl <span class="keyword">and</span> dqcl=<span class="number">7</span> <span class="keyword">then</span> a.storeid <span class="keyword">end</span>) 当月关停风险商户数</div><div class="line">       <span class="comment">-- count(distinct case when dqcl&gt;gqcl and dqcl=8 then a.storeid end) 当月复开商户数</span></div><div class="line"><span class="keyword">from</span> </div><div class="line">     (</div><div class="line">      <span class="keyword">select</span> <span class="keyword">distinct</span> </div><div class="line">     a.storeid,</div><div class="line">             b.policy_bracket,</div><div class="line">             <span class="keyword">case</span> <span class="keyword">when</span> a.policy_bracket=<span class="string">'S'</span><span class="keyword">then</span> <span class="number">1</span></div><div class="line">                  <span class="keyword">when</span> a.policy_bracket=<span class="string">'X3'</span><span class="keyword">then</span> <span class="number">2</span></div><div class="line">                  <span class="keyword">when</span> a.policy_bracket=<span class="string">'X2'</span><span class="keyword">then</span> <span class="number">3</span></div><div class="line">                  <span class="keyword">when</span> a.policy_bracket=<span class="string">'X1'</span><span class="keyword">then</span> <span class="number">4</span></div><div class="line">  <span class="keyword">when</span> a.policy_bracket=<span class="string">'T'</span><span class="keyword">then</span> <span class="number">5</span></div><div class="line">         <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span> gqcl, <span class="comment">-- 关前策略</span></div><div class="line">         <span class="keyword">case</span> <span class="keyword">when</span> b.policy_bracket=<span class="string">'S'</span><span class="keyword">then</span> <span class="number">1</span></div><div class="line">  <span class="keyword">when</span> b.policy_bracket=<span class="string">'X3'</span><span class="keyword">then</span> <span class="number">2</span></div><div class="line">          <span class="keyword">when</span> b.policy_bracket=<span class="string">'X2'</span><span class="keyword">then</span> <span class="number">3</span></div><div class="line">                  <span class="keyword">when</span> b.policy_bracket=<span class="string">'X1'</span><span class="keyword">then</span> <span class="number">4</span></div><div class="line">  <span class="keyword">when</span> b.policy_bracket=<span class="string">'T'</span><span class="keyword">then</span> <span class="number">5</span></div><div class="line">             <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span> dqcl <span class="comment">-- 当前策略</span></div><div class="line">      <span class="keyword">from</span> haimi_department.v_ma_execution_strategy_his a</div><div class="line">      <span class="keyword">join</span> haimi_department.v_ma_execution_strategy b</div><div class="line">        <span class="keyword">on</span> a.storeid=b.storeid </div><div class="line">      <span class="keyword">where</span> <span class="keyword">date_format</span>(a.invalid_time,<span class="string">'%Y-%m'</span>)=<span class="keyword">date_format</span>(<span class="keyword">date_sub</span>(<span class="keyword">curdate</span>(),<span class="built_in">interval</span> <span class="number">1</span> <span class="keyword">day</span>),<span class="string">'%Y-%m'</span>)</div><div class="line">    <span class="comment">-- and a.oper_source in ('mrc','qb.xiang@mi-me.com','chen.han@mi-me.com','jia.zheng@mi-me.com')</span></div><div class="line">      )a;</div><div class="line"></div><div class="line"><span class="comment">-- 3.定性量走势</span></div><div class="line"></div><div class="line"><span class="keyword">select</span> a.rq <span class="keyword">as</span> 日期,</div><div class="line">       a.phone_num <span class="keyword">as</span> 电话拨打量, </div><div class="line">       a.work_num <span class="keyword">as</span> 电话排查会员数, </div><div class="line">       a.phone_num_eff <span class="keyword">as</span> 有效沟通量,</div><div class="line">       a.phone_eff_per <span class="keyword">as</span> 人均有效沟通量,</div><div class="line">       b.qualitive_num <span class="keyword">as</span> 定性案件量,</div><div class="line">       b.qualitive_per <span class="keyword">as</span> 人均定性案件量,</div><div class="line">       b.qualitive_normal_num <span class="keyword">as</span> 正常案件量,</div><div class="line">       b.qualitive_tradedisputet_num <span class="keyword">as</span> 纠纷案件量,</div><div class="line">       b.qualitive_merchantillegal_num <span class="keyword">as</span> 违规案件量,</div><div class="line">       b.qualitive_cashout_num <span class="keyword">as</span> 套现案件量</div><div class="line"><span class="keyword">from</span></div><div class="line">(</div><div class="line">     <span class="keyword">select</span> <span class="keyword">date_format</span>(createtime,<span class="string">'%m-%d'</span>) <span class="keyword">as</span> rq,</div><div class="line">            <span class="keyword">count</span>(<span class="keyword">distinct</span> mobile_number) <span class="keyword">as</span> work_num, </div><div class="line">            <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">status</span>&lt;&gt;<span class="string">'notneed'</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="keyword">as</span> phone_num, </div><div class="line">            <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">status</span> <span class="keyword">in</span> (<span class="string">'normal'</span>,<span class="string">'unself'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="keyword">as</span> phone_num_eff, </div><div class="line">            <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">status</span> <span class="keyword">in</span> (<span class="string">'normal'</span>,<span class="string">'unself'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)/<span class="keyword">count</span>(<span class="keyword">distinct</span> work_number) <span class="keyword">as</span> phone_eff_per</div><div class="line">     <span class="keyword">from</span> haimi_department.v_af_mobile_record    <span class="comment">-- 反欺诈数字字典101</span></div><div class="line">     <span class="keyword">where</span> <span class="built_in">date</span>(createtime)&gt;<span class="keyword">date_sub</span>(<span class="keyword">curdate</span>(),<span class="built_in">interval</span> <span class="number">20</span> <span class="keyword">day</span>)</div><div class="line">     <span class="keyword">and</span> <span class="built_in">date</span>(createtime)&lt;&gt;<span class="keyword">curdate</span>()</div><div class="line">     <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">date_format</span>(createtime,<span class="string">'%m-%d'</span>)</div><div class="line">     ) a </div><div class="line"><span class="keyword">left</span> <span class="keyword">join</span> </div><div class="line">     (</div><div class="line">      <span class="keyword">select</span> <span class="keyword">date_format</span>(qualivite_time,<span class="string">'%m-%d'</span>) <span class="keyword">as</span> rq,</div><div class="line">               <span class="keyword">count</span>(<span class="keyword">distinct</span> <span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">result</span> <span class="keyword">not</span> <span class="keyword">in</span> (<span class="string">'待确认'</span>,<span class="string">'waitconfirm'</span>,<span class="string">'cannotjudge'</span>,<span class="string">'lostcontact'</span>) <span class="keyword">then</span> mobile_number <span class="keyword">end</span>) <span class="keyword">as</span> qualitive_num,</div><div class="line">               <span class="keyword">count</span>(<span class="keyword">distinct</span> <span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">result</span> <span class="keyword">not</span> <span class="keyword">in</span> (<span class="string">'待确认'</span>,<span class="string">'waitconfirm'</span>,<span class="string">'cannotjudge'</span>,<span class="string">'lostcontact'</span>) <span class="keyword">then</span> mobile_number <span class="keyword">end</span>)</div><div class="line">               /<span class="keyword">count</span>(<span class="keyword">distinct</span> work_number) <span class="keyword">as</span> qualitive_per,</div><div class="line">               <span class="keyword">count</span>(<span class="keyword">distinct</span> <span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">result</span> <span class="keyword">in</span> (<span class="string">'normal'</span>,<span class="string">'正常'</span>,<span class="string">''</span>,<span class="string">'exception'</span>) <span class="keyword">then</span> mobile_number <span class="keyword">end</span>) <span class="keyword">as</span> qualitive_normal_num,</div><div class="line">               <span class="keyword">count</span>(<span class="keyword">distinct</span> <span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">result</span> <span class="keyword">in</span> (<span class="string">'tradedisputet'</span>,<span class="string">'交易纠纷'</span>) <span class="keyword">then</span> mobile_number <span class="keyword">end</span>) <span class="keyword">as</span> qualitive_tradedisputet_num,</div><div class="line">               <span class="keyword">count</span>(<span class="keyword">distinct</span> <span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">result</span> <span class="keyword">in</span> (<span class="string">'merchantillegal'</span>,<span class="string">'商户违规'</span>) <span class="keyword">then</span> mobile_number <span class="keyword">end</span>) <span class="keyword">as</span> qualitive_merchantillegal_num,</div><div class="line">               <span class="keyword">count</span>(<span class="keyword">distinct</span> <span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">result</span> <span class="keyword">in</span> (<span class="string">'sumcashout'</span>,<span class="string">'partcashout'</span>,<span class="string">'全额套现'</span>,<span class="string">'部分套现'</span>,<span class="string">'unrealdeal'</span>) <span class="keyword">then</span> mobile_number <span class="keyword">end</span>) <span class="keyword">as</span> qualitive_cashout_num</div><div class="line">        <span class="keyword">from</span></div><div class="line">            (           </div><div class="line">             <span class="keyword">select</span> <span class="keyword">distinct</span> </div><div class="line">                    a.mobile_number,</div><div class="line">                    a.status,</div><div class="line">                    a.work_number,</div><div class="line">                <span class="keyword">case</span> <span class="keyword">when</span> a.rank=<span class="number">1</span> <span class="keyword">and</span> a.general_result <span class="keyword">is</span> <span class="literal">null</span> <span class="keyword">then</span> b.qualivite_time</div><div class="line">                         <span class="keyword">when</span> a.rank=<span class="number">1</span> <span class="keyword">and</span> a.general_result <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">and</span> b.qualivite_time <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">then</span> b.qualivite_time </div><div class="line">                         <span class="keyword">when</span> a.rank=<span class="number">1</span> <span class="keyword">and</span> a.general_result <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">and</span> b.qualivite_time <span class="keyword">is</span> <span class="literal">null</span> <span class="keyword">then</span> a.customer_qualitative</div><div class="line">                         <span class="keyword">else</span> a.customer_qualitative </div><div class="line">                         <span class="keyword">end</span> <span class="keyword">as</span> qualivite_time,</div><div class="line">                    <span class="keyword">case</span> <span class="keyword">when</span> a.rank=<span class="number">1</span> <span class="keyword">and</span> b.customer_qualitive <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">then</span> b.customer_qualitive </div><div class="line">                         <span class="keyword">else</span> a.general_result <span class="keyword">end</span> <span class="keyword">as</span> <span class="keyword">result</span></div><div class="line">   <span class="keyword">from</span></div><div class="line">   (</div><div class="line"><span class="keyword">select</span> @row_num := <span class="keyword">if</span>(@zdy=mobile_number,@row_num+<span class="number">1</span>,<span class="number">1</span>) <span class="keyword">as</span> <span class="keyword">rank</span></div><div class="line">  ,a.*</div><div class="line">  ,@zdy := mobile_number <span class="keyword">as</span> mobile_number_ck</div><div class="line"><span class="keyword">from</span> haimi_department.v_af_mobile_record a,</div><div class="line"> (<span class="keyword">select</span> @row_num := <span class="number">1</span>) b,</div><div class="line">                     (<span class="keyword">select</span> @zdy := <span class="string">''</span>) c</div><div class="line"><span class="keyword">order</span> <span class="keyword">by</span> mobile_number,createtime <span class="keyword">desc</span>    <span class="comment">-- 分组排名赋予序号</span></div><div class="line">                    ) a</div><div class="line">   <span class="keyword">left</span> <span class="keyword">join</span> </div><div class="line">                    (</div><div class="line">                     <span class="keyword">select</span> @row_num := <span class="keyword">if</span>(@zdy=telphone,@row_num+<span class="number">1</span>,<span class="number">1</span>) <span class="keyword">as</span> <span class="keyword">rank</span></div><div class="line">                       ,a.*</div><div class="line">                       ,@zdy := telphone <span class="keyword">as</span> telphone_ck</div><div class="line">                     <span class="keyword">from</span> haimi_department.v_af_customer_qualitive_result a,</div><div class="line">                      (<span class="keyword">select</span> @row_num := <span class="number">1</span>) b,</div><div class="line">                      (<span class="keyword">select</span> @zdy := <span class="string">''</span>) c</div><div class="line">                     <span class="keyword">order</span> <span class="keyword">by</span> telphone,qualivite_time <span class="keyword">desc</span></div><div class="line">                    ) b </div><div class="line">   <span class="keyword">on</span> a.mobile_number=b.telphone </div><div class="line">               <span class="keyword">and</span> a.rank=b.rank </div><div class="line">               <span class="keyword">and</span> b.rank=<span class="number">1</span>                                   <span class="comment">-- 定性取第一次</span></div><div class="line">   <span class="keyword">inner</span> <span class="keyword">join</span> haimi_department.v_haimi_allies c   <span class="comment">-- 此处链接门店层表 门店号为主键</span></div><div class="line">               <span class="keyword">on</span> c.allies_code = a.merchant_no</div><div class="line">            ) a </div><div class="line">           <span class="keyword">where</span> <span class="built_in">date</span>(qualivite_time)&gt;<span class="keyword">date_sub</span>(<span class="keyword">curdate</span>(),<span class="built_in">interval</span> <span class="number">20</span> <span class="keyword">day</span>)</div><div class="line">           <span class="keyword">and</span> <span class="built_in">date</span>(qualivite_time)&lt;&gt;<span class="keyword">curdate</span>()</div><div class="line">           <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">date_format</span>(qualivite_time,<span class="string">'%m-%d'</span>)</div><div class="line">     ) b </div><div class="line"> <span class="keyword">on</span> a.rq=b.rq;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">-- 4.案件性质分布</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">select</span> a.rq <span class="keyword">as</span> 日期,</div><div class="line">       a.phone_num <span class="keyword">as</span> 电话拨打量, </div><div class="line">       a.work_num <span class="keyword">as</span> 电话排查会员数, </div><div class="line">       a.phone_num_eff <span class="keyword">as</span> 有效沟通量,</div><div class="line">       a.phone_eff_per <span class="keyword">as</span> 人均有效沟通量,</div><div class="line">       b.qualitive_num <span class="keyword">as</span> 定性案件量,</div><div class="line">       b.qualitive_per <span class="keyword">as</span> 人均定性案件量,</div><div class="line">       b.qualitive_normal_num <span class="keyword">as</span> 正常案件量,</div><div class="line">       b.qualitive_tradedisputet_num <span class="keyword">as</span> 纠纷案件量,</div><div class="line">       b.qualitive_merchantillegal_num <span class="keyword">as</span> 违规案件量,</div><div class="line">       b.qualitive_cashout_num <span class="keyword">as</span> 套现案件量</div><div class="line"><span class="keyword">from</span></div><div class="line">(</div><div class="line">     <span class="keyword">select</span> <span class="keyword">date_format</span>(createtime,<span class="string">'%m-%d'</span>) <span class="keyword">as</span> rq,</div><div class="line">            <span class="keyword">count</span>(<span class="keyword">distinct</span> mobile_number) <span class="keyword">as</span> work_num, </div><div class="line">            <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">status</span>&lt;&gt;<span class="string">'notneed'</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="keyword">as</span> phone_num, </div><div class="line">            <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">status</span> <span class="keyword">in</span> (<span class="string">'normal'</span>,<span class="string">'unself'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="keyword">as</span> phone_num_eff, </div><div class="line">            <span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">status</span> <span class="keyword">in</span> (<span class="string">'normal'</span>,<span class="string">'unself'</span>) <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)/<span class="keyword">count</span>(<span class="keyword">distinct</span> work_number) <span class="keyword">as</span> phone_eff_per</div><div class="line">     <span class="keyword">from</span> haimi_department.v_af_mobile_record</div><div class="line">     <span class="keyword">where</span> <span class="built_in">date</span>(createtime)&gt;<span class="keyword">date_sub</span>(<span class="keyword">curdate</span>(),<span class="built_in">interval</span> <span class="number">20</span> <span class="keyword">day</span>)</div><div class="line">     <span class="keyword">and</span> <span class="built_in">date</span>(createtime)&lt;&gt;<span class="keyword">curdate</span>()</div><div class="line">     <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">date_format</span>(createtime,<span class="string">'%m-%d'</span>)</div><div class="line">     ) a </div><div class="line"><span class="keyword">left</span> <span class="keyword">join</span> </div><div class="line">         (</div><div class="line">          <span class="keyword">select</span> <span class="keyword">date_format</span>(qualivite_time,<span class="string">'%m-%d'</span>) <span class="keyword">as</span> rq,</div><div class="line">                 <span class="keyword">count</span>(<span class="keyword">distinct</span> <span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">result</span> <span class="keyword">not</span> <span class="keyword">in</span> (<span class="string">'待确认'</span>,<span class="string">'waitconfirm'</span>,<span class="string">'cannotjudge'</span>,<span class="string">'lostcontact'</span>) <span class="keyword">then</span> mobile_number <span class="keyword">end</span>) <span class="keyword">as</span> qualitive_num,</div><div class="line">                 <span class="keyword">count</span>(<span class="keyword">distinct</span> <span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">result</span> <span class="keyword">not</span> <span class="keyword">in</span> (<span class="string">'待确认'</span>,<span class="string">'waitconfirm'</span>,<span class="string">'cannotjudge'</span>,<span class="string">'lostcontact'</span>) <span class="keyword">then</span> mobile_number <span class="keyword">end</span>)</div><div class="line">                 /<span class="keyword">count</span>(<span class="keyword">distinct</span> work_number) <span class="keyword">as</span> qualitive_per,</div><div class="line">                 <span class="keyword">count</span>(<span class="keyword">distinct</span> <span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">result</span> <span class="keyword">in</span> (<span class="string">'normal'</span>,<span class="string">'正常'</span>,<span class="string">''</span>,<span class="string">'exception'</span>) <span class="keyword">then</span> mobile_number <span class="keyword">end</span>) <span class="keyword">as</span> qualitive_normal_num,</div><div class="line">                 <span class="keyword">count</span>(<span class="keyword">distinct</span> <span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">result</span> <span class="keyword">in</span> (<span class="string">'tradedisputet'</span>,<span class="string">'交易纠纷'</span>) <span class="keyword">then</span> mobile_number <span class="keyword">end</span>) <span class="keyword">as</span> qualitive_tradedisputet_num,</div><div class="line">                 <span class="keyword">count</span>(<span class="keyword">distinct</span> <span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">result</span> <span class="keyword">in</span> (<span class="string">'merchantillegal'</span>,<span class="string">'商户违规'</span>) <span class="keyword">then</span> mobile_number <span class="keyword">end</span>) <span class="keyword">as</span> qualitive_merchantillegal_num,</div><div class="line">                 <span class="keyword">count</span>(<span class="keyword">distinct</span> <span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">result</span> <span class="keyword">in</span> (<span class="string">'sumcashout'</span>,<span class="string">'partcashout'</span>,<span class="string">'全额套现'</span>,<span class="string">'部分套现'</span>,<span class="string">'unrealdeal'</span>) <span class="keyword">then</span> mobile_number <span class="keyword">end</span>) <span class="keyword">as</span> qualitive_cashout_num</div><div class="line">          <span class="keyword">from</span></div><div class="line">              (</div><div class="line">               <span class="keyword">select</span> <span class="keyword">distinct</span> </div><div class="line">                      a.mobile_number,</div><div class="line">                      a.status,</div><div class="line">                      a.work_number,</div><div class="line">                  <span class="keyword">case</span> <span class="keyword">when</span> a.rank=<span class="number">1</span> <span class="keyword">and</span> a.general_result <span class="keyword">is</span> <span class="literal">null</span> <span class="keyword">then</span> b.qualivite_time</div><div class="line">                           <span class="keyword">when</span> a.rank=<span class="number">1</span> <span class="keyword">and</span> a.general_result <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">and</span> b.qualivite_time <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">then</span> b.qualivite_time </div><div class="line">                           <span class="keyword">when</span> a.rank=<span class="number">1</span> <span class="keyword">and</span> a.general_result <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">and</span> b.qualivite_time <span class="keyword">is</span> <span class="literal">null</span> <span class="keyword">then</span> a.customer_qualitative</div><div class="line">                           <span class="keyword">else</span> a.customer_qualitative </div><div class="line">                           <span class="keyword">end</span> <span class="keyword">as</span> qualivite_time,</div><div class="line">                      <span class="keyword">case</span> <span class="keyword">when</span> a.rank=<span class="number">1</span> <span class="keyword">and</span> b.customer_qualitive <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">then</span> b.customer_qualitive </div><div class="line">                           <span class="keyword">else</span> a.general_result <span class="keyword">end</span> <span class="keyword">as</span> <span class="keyword">result</span></div><div class="line">   <span class="keyword">from</span></div><div class="line">   (</div><div class="line"><span class="keyword">select</span> @row_num := <span class="keyword">if</span>(@zdy=mobile_number,@row_num+<span class="number">1</span>,<span class="number">1</span>) <span class="keyword">as</span> <span class="keyword">rank</span></div><div class="line">  ,a.*</div><div class="line">  ,@zdy := mobile_number <span class="keyword">as</span> mobile_number_ck</div><div class="line"><span class="keyword">from</span> haimi_department.v_af_mobile_record a,</div><div class="line"> (<span class="keyword">select</span> @row_num := <span class="number">1</span>) b,</div><div class="line">                     (<span class="keyword">select</span> @zdy := <span class="string">''</span>) c</div><div class="line"><span class="keyword">order</span> <span class="keyword">by</span> mobile_number,createtime <span class="keyword">desc</span></div><div class="line">                    ) a</div><div class="line">   <span class="keyword">left</span> <span class="keyword">join</span> </div><div class="line">                        (</div><div class="line">                         <span class="keyword">select</span> @row_num := <span class="keyword">if</span>(@zdy=telphone,@row_num+<span class="number">1</span>,<span class="number">1</span>) <span class="keyword">as</span> <span class="keyword">rank</span></div><div class="line">                           ,a.*</div><div class="line">                           ,@zdy := telphone <span class="keyword">as</span> telphone_ck</div><div class="line">                         <span class="keyword">from</span> haimi_department.v_af_customer_qualitive_result a,</div><div class="line">                          (<span class="keyword">select</span> @row_num := <span class="number">1</span>) b,</div><div class="line">                          (<span class="keyword">select</span> @zdy := <span class="string">''</span>) c</div><div class="line">                         <span class="keyword">order</span> <span class="keyword">by</span> telphone,qualivite_time <span class="keyword">desc</span></div><div class="line">                         ) b </div><div class="line">   <span class="keyword">on</span> a.mobile_number=b.telphone </div><div class="line">               <span class="keyword">and</span> a.rank=b.rank </div><div class="line">               <span class="keyword">and</span> b.rank=<span class="number">1</span>    <span class="comment">-- 定性取第一次</span></div><div class="line">   <span class="keyword">inner</span> <span class="keyword">join</span> haimi_department.v_haimi_allies c   <span class="comment">-- 此处链接门店层表 门店号为主键</span></div><div class="line">               <span class="keyword">on</span> c.allies_code = a.merchant_no</div><div class="line">               ) a </div><div class="line">           <span class="keyword">where</span> <span class="built_in">date</span>(qualivite_time)&gt;<span class="keyword">date_sub</span>(<span class="keyword">curdate</span>(),<span class="built_in">interval</span> <span class="number">20</span> <span class="keyword">day</span>)</div><div class="line">           <span class="keyword">and</span> <span class="built_in">date</span>(qualivite_time)&lt;&gt;<span class="keyword">curdate</span>()</div><div class="line">           <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">date_format</span>(qualivite_time,<span class="string">'%m-%d'</span>)</div><div class="line">          ) b </div><div class="line"> <span class="keyword">on</span> a.rq=b.rq;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>python数据分析师面试题选</title>
    <link href="https://chumingke.github.io//blog/2017/10/Interview-of-Python-Data-Analyst.html"/>
    <id>https://chumingke.github.io//blog/2017/10/Interview-of-Python-Data-Analyst.html</id>
    <published>2017-10-30T02:54:49.000Z</published>
    <updated>2017-10-30T02:55:56.000Z</updated>
    
    <content type="html"><![CDATA[<p>转自<a href="http://www.cnblogs.com/arkenstone/p/5467034.html" target="_blank" rel="external">http://www.cnblogs.com/arkenstone/p/5467034.html</a></p><h1 id="python数据分析部分"><a href="#python数据分析部分" class="headerlink" title="python数据分析部分"></a>python数据分析部分</h1><h3 id="1-如何利用SciKit包训练一个简单的线性回归模型"><a href="#1-如何利用SciKit包训练一个简单的线性回归模型" class="headerlink" title="1. 如何利用SciKit包训练一个简单的线性回归模型"></a>1. 如何利用SciKit包训练一个简单的线性回归模型</h3><p>利用linear_model.LinearRegression()函数<br><figure class="highlight makefile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Create linear regression object</span></div><div class="line">regr = linear_model.LinearRegression()</div><div class="line"><span class="comment"># Train the model using the training sets</span></div><div class="line">regr.fit(data_X_train, data_y_train)</div></pre></td></tr></table></figure></p><h3 id="2-例举几个常用的python分析数据包及其作用"><a href="#2-例举几个常用的python分析数据包及其作用" class="headerlink" title="2. 例举几个常用的python分析数据包及其作用"></a>2. 例举几个常用的python分析数据包及其作用</h3><p>数据处理和分析：NumPy, SciPy, Pandas<br>机器学习：SciKit<br>可视化： Matplotlib, Seaborn</p><h3 id="3-如何利用Numpy对数列的前n项进行排序"><a href="#3-如何利用Numpy对数列的前n项进行排序" class="headerlink" title="3. 如何利用Numpy对数列的前n项进行排序"></a>3. 如何利用Numpy对数列的前n项进行排序</h3><p>使用argsort()函数：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">x</span><span class="selector-attr">[x [: n-1]</span><span class="selector-class">.argsort</span> ()]</div></pre></td></tr></table></figure></p><h3 id="4-如何检验一个数据集或者时间序列是随机分布的"><a href="#4-如何检验一个数据集或者时间序列是随机分布的" class="headerlink" title="4. 如何检验一个数据集或者时间序列是随机分布的"></a>4. 如何检验一个数据集或者时间序列是随机分布的</h3><p>画lag plot（Correlogram：相关图），如果图上的点呈散乱分布，则为随机</p><h3 id="5-在python中如何创建包含不同类型数据的dataframe"><a href="#5-在python中如何创建包含不同类型数据的dataframe" class="headerlink" title="5. 在python中如何创建包含不同类型数据的dataframe"></a>5. 在python中如何创建包含不同类型数据的dataframe</h3><p>利用pandas包的DataFrame函数的serias创建列然后用dtype定义类型：<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">df = pd.DataFrame(&#123;<span class="string">'x'</span>: pd.Series([<span class="string">'1.0'</span>, <span class="string">'2.0'</span>, <span class="string">'3.0'</span>], dtype=<span class="keyword">float</span>), <span class="string">'y'</span>: pd.Series([<span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>], dtype=<span class="keyword">int</span>)&#125;)</div></pre></td></tr></table></figure></p><h3 id="6-Pandas中使用的标准数据缺失标志是什么"><a href="#6-Pandas中使用的标准数据缺失标志是什么" class="headerlink" title="6. Pandas中使用的标准数据缺失标志是什么"></a>6. Pandas中使用的标准数据缺失标志是什么</h3><p>NaN</p><h3 id="7-描述numpy-array比python-list的优势"><a href="#7-描述numpy-array比python-list的优势" class="headerlink" title="7. 描述numpy array比python list的优势"></a>7. 描述numpy array比python list的优势</h3><p>a. numpy array比python list更紧凑，存储数据占的空间小，读写速度快。(这是由于python list储存的是指向对象（至少需要16个字节）的指针（至少4个字节）；而array中储存的是单一变量（比如单精度浮点数为4个字节，双精度为8）) </p><p>b. array可以直接使用vector和matrix类型的处理函数，非常方便。</p><h3 id="8-如何检验numpy的array为空"><a href="#8-如何检验numpy的array为空" class="headerlink" title="8. 如何检验numpy的array为空"></a>8. 如何检验numpy的array为空</h3><p>使用size函数， 比如:<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">a = np.<span class="keyword">array</span>([])</div><div class="line"><span class="built_in">print</span> a.<span class="built_in">size</span> # <span class="number">0</span></div></pre></td></tr></table></figure></p><h3 id="9-如何检验pandas-dataframe为空？"><a href="#9-如何检验pandas-dataframe为空？" class="headerlink" title="9. 如何检验pandas dataframe为空？"></a>9. 如何检验pandas dataframe为空？</h3><p>使用empty函数</p><h1 id="python-基础操作部分"><a href="#python-基础操作部分" class="headerlink" title="python 基础操作部分"></a>python 基础操作部分</h1><h3 id="1-如何在python中复制对象"><a href="#1-如何在python中复制对象" class="headerlink" title="1. 如何在python中复制对象"></a>1. 如何在python中复制对象</h3><p>使用copy包的copy和deepcopy函数。其中，copy 仅拷贝对象本身，而不拷贝对象中引用的其它对象；deepcopy 除拷贝对象本身，而且拷贝对象中引用的其它对象。</p><h3 id="2-PEP8是什么"><a href="#2-PEP8是什么" class="headerlink" title="2. PEP8是什么?"></a>2. PEP8是什么?</h3><p>python语言的编程规范，提高代码可读性</p><h3 id="init-py是什么"><a href="#init-py是什么" class="headerlink" title="init.py是什么"></a>init.py是什么</h3><p>一个空文件，用于将导入目录中的模块。比如有一个模块是maindir/subdir/module.py，init.py 可以使之可以通过以下形式导入。<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">import maindir<span class="selector-class">.subdir</span><span class="selector-class">.module</span></div></pre></td></tr></table></figure></p><h3 id="4-range-和xrange-函数的差异"><a href="#4-range-和xrange-函数的差异" class="headerlink" title="4. range()和xrange()函数的差异"></a>4. range()和xrange()函数的差异</h3><p>range()生成的是list，而xrange（）生成的是迭代器（iterator）。例如：<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">range(<span class="number">5</span>) #  [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</div><div class="line">xrange(<span class="number">5</span>)</div><div class="line"><span class="type">list</span>(xrange(<span class="number">1</span>,<span class="number">5</span>)) # [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</div></pre></td></tr></table></figure></p><h3 id="5-如何对list中的item进行随机重排"><a href="#5-如何对list中的item进行随机重排" class="headerlink" title="5. 如何对list中的item进行随机重排"></a>5. 如何对list中的item进行随机重排</h3><p>使用shuffle()函数</p><h3 id="6-python中用于发现bug的工具"><a href="#6-python中用于发现bug的工具" class="headerlink" title="6. python中用于发现bug的工具"></a>6. python中用于发现bug的工具</h3><p>Pylint和Pychecker.<br>Pylint可以检验模块是否满足所有的编程标准；Pychecker则是静态分析工具。</p><h3 id="7-装饰器的作用"><a href="#7-装饰器的作用" class="headerlink" title="7. 装饰器的作用"></a>7. 装饰器的作用</h3><p>装饰器可用于修饰函数或类。通过装饰器可以包裹函数或类使之执行之前或之后调用装饰器函数，从而达到抽离出大量函数中与函数功能本身无关的雷同代码并继续重用的目的。比较经典的厨力场景有检验权限，追踪参数，日志登陆等。<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">makebold</span><span class="params">(fn)</span></span><span class="symbol">:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapped</span><span class="params">()</span></span><span class="symbol">:</span></div><div class="line">        <span class="keyword">return</span> <span class="string">"&lt;b&gt;"</span> + fn() + <span class="string">"&lt;/b&gt;"</span></div><div class="line">    <span class="keyword">return</span> wrapped</div><div class="line"> </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">makeitalic</span><span class="params">(fn)</span></span><span class="symbol">:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapped</span><span class="params">()</span></span><span class="symbol">:</span></div><div class="line">        <span class="keyword">return</span> <span class="string">"&lt;i&gt;"</span> + fn() + <span class="string">"&lt;/i&gt;"</span></div><div class="line">    <span class="keyword">return</span> wrapped</div><div class="line"> </div><div class="line">@makebold</div><div class="line">@makeitalic</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">()</span></span><span class="symbol">:</span></div><div class="line">    <span class="keyword">return</span> <span class="string">"hello world"</span></div></pre></td></tr></table></figure></p><h1 id="python程序解析部分"><a href="#python程序解析部分" class="headerlink" title="python程序解析部分"></a>python程序解析部分</h1><h3 id="以下代码的输出？"><a href="#以下代码的输出？" class="headerlink" title="以下代码的输出？"></a>以下代码的输出？</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">multipliers</span><span class="params">()</span>:</span></div><div class="line"><span class="keyword">return</span> [<span class="keyword">lambda</span> x: i * x <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>)]</div><div class="line"><span class="keyword">print</span> [m(<span class="number">2</span>) <span class="keyword">for</span> m <span class="keyword">in</span> multipliers()]</div></pre></td></tr></table></figure><p>输出为[6,6,6,6]。 这个的原因是 Python 的闭包的后期绑定导致的 late binding，这意味着在闭包中的变量是在内部函数被调用的时候被查找。所以结果是，当任何 multipliers() 返回的函数被调用，在那时，i 的值是在它被调用时的周围作用域中查找，到那时，无论哪个返回的函数被调用，for 循环都已经完成了，i 最后的值是 3，因此，每个返回的函数 multiplies 的值都是 3。因此一个等于 2 的值被传递进以上代码，它们将返回一个值 6 （比如： 3 x 2）。</p><h3 id="以下代码是否报错"><a href="#以下代码是否报错" class="headerlink" title="以下代码是否报错"></a>以下代码是否报错</h3><figure class="highlight golo"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">list</span>= [‘a’,’e’,’i’,’o’,’u’]</div><div class="line"><span class="keyword">print</span> <span class="keyword">list</span> [<span class="number">8</span>:]</div></pre></td></tr></table></figure><p>输出为[]。 访问一个列表的以超出列表成员数作为开始索引的切片将不会导致 IndexError，并且将仅仅返回一个空列表。</p><h3 id="以下代码的输出"><a href="#以下代码的输出" class="headerlink" title="以下代码的输出"></a>以下代码的输出</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span> <span class="params">(i= [])</span></span><span class="symbol">:</span></div><div class="line">i.append (<span class="number">1</span>)</div><div class="line"><span class="keyword">return</span> i</div><div class="line">foo ()</div><div class="line">foo ()</div></pre></td></tr></table></figure><p>输出为[1],[1,1]。 新的默认列表仅仅只在函数被定义时创建一次。当foo没有被指定的列表参数调用的时候，其使用的是同一个列表。</p><h1 id="数学统计学部分"><a href="#数学统计学部分" class="headerlink" title="数学统计学部分"></a>数学统计学部分</h1><h3 id="1-什么是逻辑斯蒂回归（logistic-regression）"><a href="#1-什么是逻辑斯蒂回归（logistic-regression）" class="headerlink" title="1. 什么是逻辑斯蒂回归（logistic regression）"></a>1. 什么是逻辑斯蒂回归（logistic regression）</h3><p>逻辑斯蒂回归常指逻辑回归模型，用于预测参数之间组合可能输出的二分结果。</p><h3 id="2-推荐系统、协同过滤"><a href="#2-推荐系统、协同过滤" class="headerlink" title="2. 推荐系统、协同过滤"></a>2. 推荐系统、协同过滤</h3><h3 id="3-P值的意义"><a href="#3-P值的意义" class="headerlink" title="3. P值的意义"></a>3. P值的意义</h3><p>决定假设检验的的结果是否显著</p><h3 id="4-监督学习和非监督学习，机器学习算法"><a href="#4-监督学习和非监督学习，机器学习算法" class="headerlink" title="4. 监督学习和非监督学习，机器学习算法"></a>4. 监督学习和非监督学习，机器学习算法</h3><h3 id="5-A-B测试"><a href="#5-A-B测试" class="headerlink" title="5. A/B测试"></a>5. A/B测试</h3><figure class="highlight dns"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">对有两个变量<span class="keyword">A</span>，B的随机试验进行的统计结果测试，目的是识别改动对网页点击率的影响从而获得实现最大化的改动。</div></pre></td></tr></table></figure><h3 id="6-特征值和特征向量"><a href="#6-特征值和特征向量" class="headerlink" title="6. 特征值和特征向量"></a>6. 特征值和特征向量</h3><p>在数据分析是通过计算相关和协方差矩阵的特征向量可以用于确定之后的线性转换的方向。特征值表示特征向量方向转化或者压缩的强度。</p><h3 id="7-如何评价一个逻辑斯蒂模型"><a href="#7-如何评价一个逻辑斯蒂模型" class="headerlink" title="7. 如何评价一个逻辑斯蒂模型"></a>7. 如何评价一个逻辑斯蒂模型</h3><ul><li>用分类矩阵查看真阴性和假阳性</li><li>一致性分析： 查看逻辑斯蒂模型区分事件是否发生的能力</li><li>与随机选择模型进行对比<h3 id="8-项目分析的步骤"><a href="#8-项目分析的步骤" class="headerlink" title="8. 项目分析的步骤"></a>8. 项目分析的步骤</h3></li><li>理解问题</li><li>探索数据</li><li>准备数据用于建模</li><li>建模</li><li>测试</li><li><p>上线执行并追踪</p><h3 id="9-如何处理缺失数据？-如果缺失的数据不可得，将采用何种手段收集？"><a href="#9-如何处理缺失数据？-如果缺失的数据不可得，将采用何种手段收集？" class="headerlink" title="9. 如何处理缺失数据？(如果缺失的数据不可得，将采用何种手段收集？)"></a>9. 如何处理缺失数据？(如果缺失的数据不可得，将采用何种手段收集？)</h3><p>首先判断缺失数据是否有意义，如果没有意义或者缺失数据的比例超过80%直接去掉。如果缺失数据有规律，则需根据其变化规律来推测次缺失值；如果数据没有规律，则用其他值代替：</p></li><li><p>如果数据符合正态分布，缺失值用期望值代替</p></li><li><p>如果数据是类型变量，则用默认类型值代替缺失值</p><h3 id="10-描述K-Means-Clustering算法"><a href="#10-描述K-Means-Clustering算法" class="headerlink" title="10. 描述K-Means Clustering算法"></a>10. 描述K-Means Clustering算法</h3><h3 id="11-逻辑斯蒂回归和线性回归的区别"><a href="#11-逻辑斯蒂回归和线性回归的区别" class="headerlink" title="11. 逻辑斯蒂回归和线性回归的区别"></a>11. 逻辑斯蒂回归和线性回归的区别</h3><p>逻辑斯蒂回归的预测值是两元的，0或1；而线性回归的预测值是连续的。</p><h3 id="12-如何证明根号2是无理数"><a href="#12-如何证明根号2是无理数" class="headerlink" title="12. 如何证明根号2是无理数"></a>12. 如何证明根号2是无理数</h3><h3 id="13-统计中国有多少树"><a href="#13-统计中国有多少树" class="headerlink" title="13. 统计中国有多少树"></a>13. 统计中国有多少树</h3></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;转自&lt;a href=&quot;http://www.cnblogs.com/arkenstone/p/5467034.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cnblogs.com/arkenstone/p/5467034.h
      
    
    </summary>
    
      <category term="python" scheme="https://chumingke.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https://chumingke.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>MySQL索引相关</title>
    <link href="https://chumingke.github.io//blog/2017/10/MySQL-index-correlation.html"/>
    <id>https://chumingke.github.io//blog/2017/10/MySQL-index-correlation.html</id>
    <published>2017-10-29T13:31:59.000Z</published>
    <updated>2017-10-29T13:58:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>转自<a href="http://blog.csdn.net/xluren/article/details/32746183" target="_blank" rel="external">http://blog.csdn.net/xluren/article/details/32746183</a><br><a href="http://www.cnblogs.com/chenshishuo/p/5030029.html" target="_blank" rel="external">http://www.cnblogs.com/chenshishuo/p/5030029.html</a><br>推荐再去看看<a href="http://www.cnblogs.com/hustcat/archive/2009/10/28/1591648.html" target="_blank" rel="external">http://www.cnblogs.com/hustcat/archive/2009/10/28/1591648.html</a></p><p>关于MySQL索引的好处，如果正确合理设计并且使用索引的MySQL是一辆兰博基尼的话，那么没有设计和使用索引的MySQL就是一个人力三轮车。对于没有索引的表，单表查询可能几十万数据就是瓶颈，而通常大型网站单日就可能会产生几十万甚至几百万的数据，没有索引查询会变的非常缓慢。还是以WordPress来说，其多个数据表都会对经常被查询的字段添加索引，比如wp_comments表中针对5个字段设计了BTREE索引。</p><h1 id="一个简单的对比测试"><a href="#一个简单的对比测试" class="headerlink" title="一个简单的对比测试"></a>一个简单的对比测试</h1><p>以我去年测试的数据作为一个简单示例，20多条数据源随机生成200万条数据，平均每条数据源都重复大概10万次，表结构比较简单，仅包含一个自增ID，一个char类型，一个text类型和一个int类型，单表2G大小，使用MyIASM引擎。开始测试未添加任何索引。</p><p>执行下面的SQL语句：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT id,FROM_UNIXTIME(time) FROM <span class="selector-tag">article</span> WHERE <span class="selector-tag">a</span>.title=<span class="string">'测试标题'</span></div></pre></td></tr></table></figure></p><p>查询需要的时间非常恐怖的，如果加上联合查询和其他一些约束条件，数据库会疯狂的消耗内存，并且会影响前端程序的执行。这时给title字段添加一个BTREE索引：<br><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql&gt; ALTER TABLE article ADD <span class="keyword">INDEX</span> index_article_title <span class="keyword">ON</span> <span class="built_in">title</span>(<span class="number">200</span>);</div></pre></td></tr></table></figure></p><p>再次执行上述查询语句，其对比非常明显。</p><h1 id="MySQL索引的概念"><a href="#MySQL索引的概念" class="headerlink" title="MySQL索引的概念"></a>MySQL索引的概念</h1><p>索引是一种特殊的文件(InnoDB数据表上的索引是表空间的一个组成部分)，它们包含着对数据表里所有记录的引用指针。</p><p>更通俗的说，数据库索引好比是一本书前面的目录，能加快数据库的查询速度。</p><p>上述SQL语句，在没有索引的情况下，数据库会遍历全部200条数据后选择符合条件的；而有了相应的索引之后，数据库会直接在索引中查找符合条件的选项。</p><p>如果我们把SQL语句换成“SELECT * FROM article WHERE id=2000000”，那么你是希望数据库按照顺序读取完200万行数据以后给你结果还是直接在索引中定位呢？上面的两个图片鲜明的用时对比已经给出了答案（注：一般数据库默认都会为主键生成索引）。</p><p>索引分为聚簇索引和非聚簇索引两种，聚簇索引是按照数据存放的物理位置为顺序的，而非聚簇索引就不一样了；聚簇索引能提高多行检索的速度，而非聚簇索引对于单行的检索很快。</p><h1 id="MySQL索引的类型"><a href="#MySQL索引的类型" class="headerlink" title="MySQL索引的类型"></a>MySQL索引的类型</h1><h2 id="普通索引"><a href="#普通索引" class="headerlink" title="普通索引"></a>普通索引</h2><p>这是最基本的索引，它没有任何限制，比如上文中为title字段创建的索引就是一个普通索引，MyIASM中默认的BTREE类型的索引，也是我们大多数情况下用到的索引。<br><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">##直接创建索引</div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span> index_name <span class="keyword">ON</span> table(column(<span class="built_in">length</span>))</div><div class="line">##修改表结构的方式添加索引</div><div class="line"><span class="keyword">ALTER</span> TABLE table_name ADD <span class="keyword">INDEX</span> index_name <span class="keyword">ON</span> (column(<span class="built_in">length</span>))</div><div class="line">##创建表的时候同时创建索引</div><div class="line"><span class="keyword">CREATE</span> TABLE <span class="symbol">`table`</span> (</div><div class="line"><span class="symbol">`id`</span> int(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT ,</div><div class="line"><span class="symbol">`title`</span> char(<span class="number">255</span>) CHARACTER <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NOT</span> <span class="literal">NULL</span> ,</div><div class="line"><span class="symbol">`content`</span> text CHARACTER <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="literal">NULL</span> ,</div><div class="line"><span class="symbol">`time`</span> int(<span class="number">10</span>) <span class="literal">NULL</span> DEFAULT <span class="literal">NULL</span> ,</div><div class="line"><span class="keyword">PRIMARY</span> <span class="keyword">KEY</span> (<span class="symbol">`id`</span>),</div><div class="line"><span class="keyword">INDEX</span> index_name (<span class="built_in">title</span>(<span class="built_in">length</span>))</div><div class="line">)</div><div class="line">##删除索引</div><div class="line"><span class="keyword">DROP</span> <span class="keyword">INDEX</span> index_name <span class="keyword">ON</span> table</div></pre></td></tr></table></figure></p><h2 id="唯一索引"><a href="#唯一索引" class="headerlink" title="唯一索引"></a>唯一索引</h2><p>与普通索引类似，不同的就是：索引列的值必须唯一，但允许有空值（注意和主键不同）。如果是组合索引，则列值的组合必须唯一，创建方法和普通索引类似。<br><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">##创建唯一索引</div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">UNIQUE</span> <span class="keyword">INDEX</span> indexName <span class="keyword">ON</span> table(column(<span class="built_in">length</span>))</div><div class="line">##修改表结构</div><div class="line"><span class="keyword">ALTER</span> TABLE table_name ADD <span class="keyword">UNIQUE</span> indexName <span class="keyword">ON</span> (column(<span class="built_in">length</span>))</div><div class="line">##创建表的时候直接指定</div><div class="line"><span class="keyword">CREATE</span> TABLE <span class="symbol">`table`</span> (</div><div class="line"><span class="symbol">`id`</span> int(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT ,</div><div class="line"><span class="symbol">`title`</span> char(<span class="number">255</span>) CHARACTER <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NOT</span> <span class="literal">NULL</span> ,</div><div class="line"><span class="symbol">`content`</span> text CHARACTER <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="literal">NULL</span> ,</div><div class="line"><span class="symbol">`time`</span> int(<span class="number">10</span>) <span class="literal">NULL</span> DEFAULT <span class="literal">NULL</span> ,</div><div class="line"><span class="keyword">PRIMARY</span> <span class="keyword">KEY</span> (<span class="symbol">`id`</span>),</div><div class="line"><span class="keyword">UNIQUE</span> indexName (<span class="built_in">title</span>(<span class="built_in">length</span>))</div><div class="line">);</div></pre></td></tr></table></figure></p><h2 id="全文索引（FULLTEXT）"><a href="#全文索引（FULLTEXT）" class="headerlink" title="全文索引（FULLTEXT）"></a>全文索引（FULLTEXT）</h2><p>MySQL从3.23.23版开始支持全文索引和全文检索，FULLTEXT索引仅可用于 MyISAM 表；他们可以从CHAR、VARCHAR或TEXT列中作为CREATE TABLE语句的一部分被创建，或是随后使用ALTER TABLE 或CREATE INDEX被添加。////对于较大的数据集，将你的资料输入一个没有FULLTEXT索引的表中，然后创建索引，其速度比把资料输入现有FULLTEXT索引的速度更为快。不过切记对于大容量的数据表，生成全文索引是一个非常消耗时间非常消耗硬盘空间的做法。<br><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">##创建表的适合添加全文索引</div><div class="line"><span class="keyword">CREATE</span> TABLE <span class="symbol">`table`</span> (</div><div class="line"><span class="symbol">`id`</span> int(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT ,</div><div class="line"><span class="symbol">`title`</span> char(<span class="number">255</span>) CHARACTER <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NOT</span> <span class="literal">NULL</span> ,</div><div class="line"><span class="symbol">`content`</span> text CHARACTER <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="literal">NULL</span> ,</div><div class="line"><span class="symbol">`time`</span> int(<span class="number">10</span>) <span class="literal">NULL</span> DEFAULT <span class="literal">NULL</span> ,</div><div class="line"><span class="keyword">PRIMARY</span> <span class="keyword">KEY</span> (<span class="symbol">`id`</span>),</div><div class="line">FULLTEXT (content)</div><div class="line">);</div><div class="line">##修改表结构添加全文索引</div><div class="line">ALTER TABLE article ADD FULLTEXT index_content(content)</div><div class="line">##直接创建索引</div><div class="line"><span class="keyword">CREATE</span> FULLTEXT <span class="keyword">INDEX</span> index_content <span class="keyword">ON</span> article(content)</div></pre></td></tr></table></figure></p><h2 id="单列索引、多列索引"><a href="#单列索引、多列索引" class="headerlink" title="单列索引、多列索引"></a>单列索引、多列索引</h2><p>多个单列索引与单个多列索引的查询效果不同，因为执行查询时，MySQL只能使用一个索引，会从多个索引中选择一个限制最为严格的索引。</p><h2 id="组合索引（最左前缀）"><a href="#组合索引（最左前缀）" class="headerlink" title="组合索引（最左前缀）"></a>组合索引（最左前缀）</h2><p>平时用的SQL查询语句一般都有比较多的限制条件，所以为了进一步榨取MySQL的效率，就要考虑建立组合索引。例如上表中针对title和time建立一个组合索引：ALTER TABLE article ADD INDEX index_titme_time (title(50),time(10))。建立这样的组合索引，其实是相当于分别建立了下面两组组合索引：<br><figure class="highlight dos"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">–<span class="built_in">title</span>,<span class="built_in">time</span></div><div class="line">–<span class="built_in">title</span></div></pre></td></tr></table></figure></p><p>为什么没有time这样的组合索引呢？这是因为MySQL组合索引“最左前缀”的结果。简单的理解就是只从最左面的开始组合。并不是只要包含这两列的查询都会用到该组合索引，如下面的几个SQL所示：<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">##使用到上面的索引</span></div><div class="line">SELECT * <span class="keyword">FROM</span> article WHREE <span class="attribute">title</span>=<span class="string">'测试'</span> <span class="keyword">AND</span> <span class="attribute">time</span>=1234567890;</div><div class="line">SELECT * <span class="keyword">FROM</span> article WHREE <span class="attribute">utitle</span>=<span class="string">'测试'</span>;</div><div class="line"><span class="comment">##不使用上面的索引</span></div><div class="line">SELECT * <span class="keyword">FROM</span> article WHREE <span class="attribute">time</span>=1234567890;</div></pre></td></tr></table></figure></p><h1 id="MySQL索引的优化"><a href="#MySQL索引的优化" class="headerlink" title="MySQL索引的优化"></a>MySQL索引的优化</h1><p>上面都在说使用索引的好处，但过多的使用索引将会造成滥用。</p><p>因此索引也会有它的缺点：虽然索引大大提高了查询速度，同时却会降低更新表的速度，如对表进行INSERT、UPDATE和DELETE。因为更新表时，MySQL不仅要保存数据，还要保存一下索引文件。建立索引会占用磁盘空间的索引文件。</p><p>一般情况这个问题不太严重，但如果你在一个大表上创建了多种组合索引，索引文件的会膨胀很快。</p><p>索引只是提高效率的一个因素，如果你的MySQL有大数据量的表，就需要花时间研究建立最优秀的索引，或优化查询语句。</p><p>下面是一些总结以及收藏的MySQL索引的注意事项和优化方法。</p><h2 id="何时使用聚集索引或非聚集索引？"><a href="#何时使用聚集索引或非聚集索引？" class="headerlink" title="何时使用聚集索引或非聚集索引？"></a>何时使用聚集索引或非聚集索引？</h2><table><thead><tr><th style="text-align:center">动作描述</th><th style="text-align:center">使用聚集索引</th><th style="text-align:center">使用非聚集索引</th></tr></thead><tbody><tr><td style="text-align:center">列经常被分组排序</td><td style="text-align:center">使用</td><td style="text-align:center">使用</td></tr><tr><td style="text-align:center">返回某范围内的数据</td><td style="text-align:center">使用</td><td style="text-align:center">不使用</td></tr><tr><td style="text-align:center">一个或极少不同值</td><td style="text-align:center">不使用</td><td style="text-align:center">不使用</td></tr><tr><td style="text-align:center">小数目的不同值</td><td style="text-align:center">使用</td><td style="text-align:center">不使用</td></tr><tr><td style="text-align:center">大数目的不同值</td><td style="text-align:center">不使用</td><td style="text-align:center">使用</td></tr><tr><td style="text-align:center">频繁更新的列</td><td style="text-align:center">不使用</td><td style="text-align:center">使用</td></tr><tr><td style="text-align:center">外键列</td><td style="text-align:center">使用</td><td style="text-align:center">使用</td></tr><tr><td style="text-align:center">主键列</td><td style="text-align:center">使用</td><td style="text-align:center">使用</td></tr><tr><td style="text-align:center">频繁修改索引列</td><td style="text-align:center">不使用</td><td style="text-align:center">使用</td></tr></tbody></table><p>事实上，我们可以通过前面聚集索引和非聚集索引的定义的例子来理解上表。<br>如：返回某范围内的数据一项。比如您的某个表有一个时间列，恰好您把聚合索引建立在了该列，这时您查询2004年1月1日至2004年10月1日之间的全部数据时，这个速度就将是很快的，因为您的这本字典正文是按日期进行排序的，聚类索引只需要找到要检索的所有数据中的开头和结尾数据即可；而不像非聚集索引，必须先查到目录中查到每一项数据对应的页码，然后再根据页码查到具体内容。其实这个具体用法我还不是很理解，只能等待后期的项目开发中慢慢学学了。</p><h2 id="索引不会包含有NULL值的列"><a href="#索引不会包含有NULL值的列" class="headerlink" title="索引不会包含有NULL值的列"></a>索引不会包含有NULL值的列</h2><p>只要列中包含有NULL值都将不会被包含在索引中，复合索引中只要有一列含有NULL值，那么这一列对于此复合索引就是无效的。所以我们在数据库设计时不要让字段的默认值为NULL。</p><h2 id="使用短索引"><a href="#使用短索引" class="headerlink" title="使用短索引"></a>使用短索引</h2><p>对串列进行索引，如果可能应该指定一个前缀长度。例如，如果有一个CHAR(255)的列，如果在前10个或20个字符内，多数值是惟一的，那么就不要对整个列进行索引。短索引不仅可以提高查询速度而且可以节省磁盘空间和I/O操作。</p><h2 id="索引列排序"><a href="#索引列排序" class="headerlink" title="索引列排序"></a>索引列排序</h2><p>MySQL查询只使用一个索引，因此如果where子句中已经使用了索引的话，那么order by中的列是不会使用索引的。因此数据库默认排序可以符合要求的情况下不要使用排序操作；尽量不要包含多个列的排序，如果需要最好给这些列创建复合索引。</p><h2 id="like语句操作"><a href="#like语句操作" class="headerlink" title="like语句操作"></a>like语句操作</h2><p>一般情况下不鼓励使用like操作，如果非使用不可，如何使用也是一个问题。like “%aaa%” 不会使用索引而like “aaa%”可以使用索引。</p><h2 id="不要在列上进行运算"><a href="#不要在列上进行运算" class="headerlink" title="不要在列上进行运算"></a>不要在列上进行运算</h2><p>例如：select <em> from users where YEAR(adddate)&lt;2007，将在每个行上进行运算，这将导致索引失效而进行全表扫描，因此我们可以改成：select </em> from users where adddate&lt;’2007-01-01′。关于这一点可以围观：<a href="http://www.zendstudio.net/archives/single-quotes-or-no-single-quotes-in-sql-query/" target="_blank" rel="external">http://www.zendstudio.net/archives/single-quotes-or-no-single-quotes-in-sql-query/</a></p><p>最后总结一下，MySQL只对以下操作符才使用索引：&lt;,&lt;=,=,&gt;,&gt;=,between,in,以及某些时候的like(不以通配符%或_开头的情形)。而理论上每张表里面最多可创建16个索引，不过除非是数据量真的很多，否则过多的使用索引也不是那么好玩的，比如我刚才针对text类型的字段创建索引的时候，系统差点就卡死了。</p><h1 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h1><p>本文使用的案例的表:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`award`</span> (</div><div class="line">   <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT <span class="keyword">COMMENT</span> <span class="string">'用户id'</span>,</div><div class="line">   <span class="string">`aty_id`</span> <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'活动场景id'</span>,</div><div class="line">   <span class="string">`nickname`</span> <span class="built_in">varchar</span>(<span class="number">12</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'用户昵称'</span>,</div><div class="line">   <span class="string">`is_awarded`</span> tinyint(<span class="number">1</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">0</span> <span class="keyword">COMMENT</span> <span class="string">'用户是否领奖'</span>,</div><div class="line">   <span class="string">`award_time`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">0</span> <span class="keyword">COMMENT</span> <span class="string">'领奖时间'</span>,</div><div class="line">   <span class="string">`account`</span> <span class="built_in">varchar</span>(<span class="number">12</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'帐号'</span>,</div><div class="line">   <span class="string">`password`</span> <span class="built_in">char</span>(<span class="number">32</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'密码'</span>,</div><div class="line">   <span class="string">`message`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'获奖信息'</span>,</div><div class="line">   <span class="string">`created_time`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">0</span> <span class="keyword">COMMENT</span> <span class="string">'创建时间'</span>,</div><div class="line">   <span class="string">`updated_time`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">0</span> <span class="keyword">COMMENT</span> <span class="string">'更新时间'</span>,</div><div class="line">   PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</div><div class="line"> ) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">1</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 <span class="keyword">COMMENT</span>=<span class="string">'获奖信息表'</span>;</div></pre></td></tr></table></figure></p><h2 id="一-索引的创建"><a href="#一-索引的创建" class="headerlink" title="(一)索引的创建"></a>(一)索引的创建</h2><h3 id="1-单列索引"><a href="#1-单列索引" class="headerlink" title="1.单列索引"></a>1.单列索引</h3><h4 id="1-1-普通索引"><a href="#1-1-普通索引" class="headerlink" title="1-1)    普通索引"></a>1-1)    普通索引</h4><p>这个是最基本的索引,<br>其sql格式是<br><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span> IndexName <span class="keyword">ON</span> <span class="symbol">`TableName`</span>(<span class="symbol">`字段名`</span>(<span class="built_in">length</span>))</div></pre></td></tr></table></figure></p><p> 或者<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> TableName <span class="keyword">ADD</span> <span class="keyword">INDEX</span> IndexName(<span class="string">`字段名`</span>(<span class="keyword">length</span>))</div></pre></td></tr></table></figure></p><p>第一种方式 :<br><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span> account_Index <span class="keyword">ON</span> <span class="symbol">`award`</span>(<span class="symbol">`account`</span>);</div></pre></td></tr></table></figure></p><p>第二种方式:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> award <span class="keyword">ADD</span> <span class="keyword">INDEX</span> account_Index(<span class="string">`account`</span>)</div></pre></td></tr></table></figure></p><p>如果是CHAR,VARCHAR,类型,length可以小于字段的实际长度,如果是BLOB和TEXT类型就必须指定长度,</p><h4 id="1-2-唯一索引"><a href="#1-2-唯一索引" class="headerlink" title="1-2)    唯一索引"></a>1-2)    唯一索引</h4><p>与普通索引类似,但是不同的是唯一索引要求所有的类的值是唯一的,这一点和主键索引一样.但是他允许有空值,</p><p>其sql格式是<br><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">UNIQUE</span> <span class="keyword">INDEX</span> IndexName <span class="keyword">ON</span> <span class="symbol">`TableName`</span>(<span class="symbol">`字段名`</span>(<span class="built_in">length</span>));</div></pre></td></tr></table></figure></p><p>或者<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> TableName <span class="keyword">ADD</span> <span class="keyword">UNIQUE</span> (column_list)</div></pre></td></tr></table></figure></p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">UNIQUE</span> <span class="keyword">INDEX</span> account_UNIQUE_Index <span class="keyword">ON</span> <span class="symbol">`award`</span>(<span class="symbol">`account`</span>);</div></pre></td></tr></table></figure><h4 id="1-3-主键索引"><a href="#1-3-主键索引" class="headerlink" title="1-3)    主键索引"></a>1-3)    主键索引</h4><p>不允许有空值,(在B+TREE中的InnoDB引擎中,主键索引起到了至关重要的地位)。<br>主键索引建立的规则是 int优于varchar,一般在建表的时候创建,最好是与表的其他字段不相关的列或者是业务不相关的列.一般会设为 int 而且是 AUTO_INCREMENT自增类型的。</p><h3 id="2-组合索引"><a href="#2-组合索引" class="headerlink" title="2.组合索引"></a>2.组合索引</h3><p>一个表中含有多个单列索引不代表是组合索引,通俗一点讲 组合索引是:包含多个字段但是只有索引名称</p><p>其sql格式是<br><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span> IndexName <span class="keyword">On</span> <span class="symbol">`TableName`</span>(<span class="symbol">`字段名`</span>(<span class="built_in">length</span>),<span class="symbol">`字段名`</span>(<span class="built_in">length</span>),...);</div></pre></td></tr></table></figure></p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span> nickname_account_createdTime_Index <span class="keyword">ON</span> <span class="symbol">`award`</span>(<span class="symbol">`nickname`</span>, <span class="symbol">`account`</span>, <span class="symbol">`created_time`</span>);</div></pre></td></tr></table></figure><p>如果你建立了 组合索引(nickname_account_createdTime_Index) 那么他实际包含的是3个索引 (nickname) (nickname,account)(nickname,account,created_time)</p><p>在使用查询的时候遵循mysql组合索引的”最左前缀”,下面我们来分析一下 什么是最左前缀:及索引where时的条件要按照建立索引的时候字段的排序方式</p><p>1、不按索引最左列开始查询（多列索引） 例如index(‘c1’, ‘c2’, ‘c3’) where ‘c2’ = ‘aaa’ 不使用索引,where <code>c2</code> = <code>aaa</code> and <code>c3</code>=<code>sss</code> 不能使用索引</p><p>2、查询中某个列有范围查询，则其右边的所有列都无法使用查询（多列查询）</p><p>Where c1= ‘xxx’ and c2 like = ‘aa%’ and c3=’sss’ 改查询只会使用索引中的前两列,因为like是范围查询</p><p>3、不能跳过某个字段来进行查询,这样利用不到索引,比如我的sql 是 </p><p>explain select * from <code>award</code> where nickname &gt; ‘rSUQFzpkDz3R’ and account = ‘DYxJoqZq2rd7’ and created_time = 1449567822; 那么这时候他使用不到其组合索引.</p><p>因为我的索引是 (nickname, account, created_time),如果第一个字段出现 范围符号的查找,那么将不会用到索引,如果我是第二个或者第三个字段使用范围符号的查找,那么他会利用索引,利用的索引是(nickname),</p><p>因为上面说了建立组合索引(nickname, account, created_time), 会出现三个索引。</p><h3 id="3-全文索引"><a href="#3-全文索引" class="headerlink" title="3.全文索引"></a>3.全文索引</h3><p>文本字段上(text)如果建立的是普通索引,那么只有对文本的字段内容前面的字符进行索引,其字符大小根据索引建立索引时申明的大小来规定.</p><p>如果文本中出现多个一样的字符,而且需要查找的话,那么其条件只能是 where column lick ‘%xxxx%’ 这样做会让索引失效</p><p>.这个时候全文索引就祈祷了作用了。<br><figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ALTER <span class="keyword">TABLE</span> tablename <span class="comment">ADD FULLTEXT(column1, column2)</span></div></pre></td></tr></table></figure></p><p>有了全文索引，就可以用SELECT查询命令去检索那些包含着一个或多个给定单词的数据记录了。<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ELECT * FROM tablename</div><div class="line">WHERE MATCH(<span class="name">column1</span>, column2) AGAINST(‘xxx′, ‘sss′, ‘ddd′)</div></pre></td></tr></table></figure></p><p>这条命令将把column1和column2字段里有xxx、sss和ddd的数据记录全部查询出来。</p><h2 id="二-索引的删除"><a href="#二-索引的删除" class="headerlink" title="(二)索引的删除"></a>(二)索引的删除</h2><p>删除索引的mysql格式 :<br><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">DORP <span class="keyword">INDEX</span> IndexName <span class="keyword">ON</span> <span class="symbol">`TableName`</span></div></pre></td></tr></table></figure></p><h2 id="三-使用索引的优点"><a href="#三-使用索引的优点" class="headerlink" title="(三)使用索引的优点"></a>(三)使用索引的优点</h2><p>1.可以通过建立唯一索引或者主键索引,保证数据库表中每一行数据的唯一性.<br>2.建立索引可以大大提高检索的数据,以及减少表的检索行数<br>3.在表连接的连接条件 可以加速表与表直接的相连<br>4.在分组和排序字句进行数据检索,可以减少查询时间中 分组 和 排序时所消耗的时间(数据库的记录会重新排序)<br>5.建立索引,在查询中使用索引 可以提高性能</p><h2 id="四-使用索引的缺点"><a href="#四-使用索引的缺点" class="headerlink" title="(四)使用索引的缺点"></a>(四)使用索引的缺点</h2><p>1.在创建索引和维护索引 会耗费时间,随着数据量的增加而增加<br>2.索引文件会占用物理空间,除了数据表需要占用物理空间之外,每一个索引还会占用一定的物理空间<br>3.当对表的数据进行 INSERT,UPDATE,DELETE 的时候,索引也要动态的维护,这样就会降低数据的维护速度,(建立索引会占用磁盘空间的索引文件。一般情况这个问题不太严重，但如果你在一个大表上创建了多种组合索引，索引文件的会膨胀很快)。</p><h2 id="五-使用索引需要注意的地方"><a href="#五-使用索引需要注意的地方" class="headerlink" title="(五)使用索引需要注意的地方"></a>(五)使用索引需要注意的地方</h2><p>在建立索引的时候应该考虑索引应该建立在数据库表中的某些列上面 哪一些索引需要建立,哪一些所以是多余的.<br>一般来说,<br>1.在经常需要搜索的列上,可以加快索引的速度<br>2.主键列上可以确保列的唯一性<br>3.在表与表的而连接条件上加上索引,可以加快连接查询的速度<br>4.在经常需要排序(order by),分组(group by)和的distinct 列上加索引 可以加快排序查询的时间,  (单独order by 用不了索引，索引考虑加where 或加limit)<br>5.在一些where 之后的 &lt; &lt;= &gt; &gt;= BETWEEN IN 以及某个情况下的like 建立字段的索引(B-TREE)</p><p>6.like语句的 如果你对nickname字段建立了一个索引.当查询的时候的语句是 nickname lick ‘%ABC%’ 那么这个索引讲不会起到作用.而nickname lick ‘ABC%’ 那么将可以用到索引</p><p>7.索引不会包含NULL列,如果列中包含NULL值都将不会被包含在索引中,复合索引中如果有一列含有NULL值那么这个组合索引都将失效,一般需要给默认值0或者 ‘ ‘字符串</p><p>8.使用短索引,如果你的一个字段是Char(32)或者int(32),在创建索引的时候指定前缀长度 比如前10个字符 (前提是多数值是唯一的..)那么短索引可以提高查询速度,并且可以减少磁盘的空间,也可以减少I/0操作.</p><p>9.不要在列上进行运算,这样会使得mysql索引失效,也会进行全表扫描</p><p>10.选择越小的数据类型越好,因为通常越小的数据类型通常在磁盘,内存,cpu,缓存中 占用的空间很少,处理起来更快</p><h2 id="六-什么情况下不创建索引"><a href="#六-什么情况下不创建索引" class="headerlink" title="(六)什么情况下不创建索引"></a>(六)什么情况下不创建索引</h2><p>1.查询中很少使用到的列 不应该创建索引,如果建立了索引然而还会降低mysql的性能和增大了空间需求.<br>2.很少数据的列也不应该建立索引,比如 一个性别字段 0或者1,在查询中,结果集的数据占了表中数据行的比例比较大,mysql需要扫描的行数很多,增加索引,并不能提高效率<br>3.定义为text和image和bit数据类型的列不应该增加索引,<br>4.当表的修改(UPDATE,INSERT,DELETE)操作远远大于检索(SELECT)操作时不应该创建索引,这两个操作是互斥的关系</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;转自&lt;a href=&quot;http://blog.csdn.net/xluren/article/details/32746183&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/xluren/article/detai
      
    
    </summary>
    
      <category term="mysql" scheme="https://chumingke.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://chumingke.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>用SQL实现 excel常用操作</title>
    <link href="https://chumingke.github.io//blog/2017/10/Using-SQL-to-realize-common-operation-of-Excel.html"/>
    <id>https://chumingke.github.io//blog/2017/10/Using-SQL-to-realize-common-operation-of-Excel.html</id>
    <published>2017-10-29T03:05:32.000Z</published>
    <updated>2017-10-29T03:06:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>转自<a href="https://zhuanlan.zhihu.com/p/30212389" target="_blank" rel="external">https://zhuanlan.zhihu.com/p/30212389</a></p><p>数据是网上找到的销售数据，命名为sale。</p><h1 id="一、关联公式-Vlookup"><a href="#一、关联公式-Vlookup" class="headerlink" title="一、关联公式:Vlookup"></a>一、关联公式:Vlookup</h1><p>vlookup是excel几乎最常用的公式，一般用于两个表的关联查询等。所以我先创建一个新表：复制sale表并筛选出地区仅为广州的，命名为sale_guang。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">create</span> <span class="keyword">table</span> sale_guang <span class="keyword">SELECT</span> * <span class="keyword">from</span> sale <span class="keyword">where</span> city=<span class="string">"广州"</span>;</div></pre></td></tr></table></figure></p><p>需求：根据订单明细号关联两表，并且sale_guang只有订单明细号与利润两列<br><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> * <span class="keyword">from</span> sale a</div><div class="line"><span class="keyword">inner</span> <span class="keyword">JOIN</span></div><div class="line">(<span class="keyword">SELECT</span> ordernum,profit <span class="keyword">from</span> sale_guang) b</div><div class="line"><span class="keyword">on</span> a.<span class="symbol">`ordernum`</span>=b.<span class="symbol">`ordernum`</span>;</div></pre></td></tr></table></figure></p><h1 id="二、对比两列差异"><a href="#二、对比两列差异" class="headerlink" title="二、对比两列差异"></a>二、对比两列差异</h1><p>需求：对比sale的订单明细号与sale_guang订单明细号的差异；<br><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> * <span class="keyword">from</span> sale a</div><div class="line"><span class="keyword">WHERE</span> a.ordernum <span class="keyword">not</span> <span class="keyword">in</span> </div><div class="line">(<span class="keyword">SELECT</span> b.ordernum <span class="keyword">from</span> sale_guang b);</div></pre></td></tr></table></figure></p><h1 id="三、去除重复值"><a href="#三、去除重复值" class="headerlink" title="三、去除重复值"></a>三、去除重复值</h1><p>需求：去除业务员编码的重复值<br><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> * <span class="keyword">from</span> sale </div><div class="line"><span class="keyword">WHERE</span> salesnum <span class="keyword">in</span></div><div class="line">(<span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> salesnum <span class="keyword">from</span> sale);</div></pre></td></tr></table></figure></p><h1 id="四、缺失值处理"><a href="#四、缺失值处理" class="headerlink" title="四、缺失值处理"></a>四、缺失值处理</h1><p>需求：用0填充缺失值或则删除有地区名称缺失值的行。<br><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#用0填充：</div><div class="line"><span class="keyword">update</span> sale <span class="keyword">set</span> city = <span class="number">0</span> <span class="keyword">where</span> city = <span class="literal">NULL</span></div><div class="line">#删除有缺失值的行：</div><div class="line"><span class="keyword">delete</span> <span class="keyword">from</span> sale <span class="keyword">where</span> city = <span class="literal">NULL</span>;</div></pre></td></tr></table></figure></p><h1 id="五、多条件筛选"><a href="#五、多条件筛选" class="headerlink" title="五、多条件筛选"></a>五、多条件筛选</h1><p>需求：想知道业务员张爱，在北京区域卖的商品订单金额大于等于6000的信息。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> * <span class="keyword">from</span> sale </div><div class="line"><span class="keyword">where</span> salesman = <span class="string">"张爱"</span> </div><div class="line"><span class="keyword">and</span> city = <span class="string">"北京"</span></div><div class="line"><span class="keyword">and</span> orderaccount &gt;=<span class="number">6000</span>;</div></pre></td></tr></table></figure></p><h1 id="六、-模糊筛选数据"><a href="#六、-模糊筛选数据" class="headerlink" title="六、 模糊筛选数据"></a>六、 模糊筛选数据</h1><p>需求:筛选存货名称含有”三星”或则含有”索尼”的信息。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> * <span class="keyword">from</span> sale </div><div class="line"><span class="keyword">where</span> inventoryname <span class="keyword">like</span> <span class="string">"%三星%"</span> <span class="keyword">or</span> 存货名称 <span class="keyword">like</span> <span class="string">"%索尼%"</span>;</div></pre></td></tr></table></figure></p><h1 id="七、分类汇总"><a href="#七、分类汇总" class="headerlink" title="七、分类汇总"></a>七、分类汇总</h1><p>需求:北京区域各业务员的利润总额。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">SELECT city,sum(`profit`) <span class="keyword">from</span> sale</div><div class="line">WHERE city = <span class="string">"北京"</span></div><div class="line">GROUP BY `city`;</div></pre></td></tr></table></figure></p><h1 id="八、条件计算"><a href="#八、条件计算" class="headerlink" title="八、条件计算"></a>八、条件计算</h1><p>需求：存货名称含“三星字眼”并且税费高于1000的订单有几个？这些订单的利润总和和平均利润是多少？<br><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">#有多少个？</div><div class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(*) <span class="keyword">from</span> sale </div><div class="line"><span class="keyword">where</span> inventoryname <span class="keyword">like</span> <span class="string">"%三星%"</span></div><div class="line"><span class="keyword">and</span> <span class="symbol">`tax`</span> &gt; <span class="number">1000</span> ;</div><div class="line"></div><div class="line">#这些订单的利润总和和平均利润是多少？</div><div class="line"><span class="keyword">SELECT</span> <span class="symbol">`ordernum`</span>,<span class="built_in">SUM</span>(profit),<span class="built_in">AVG</span>(<span class="symbol">`profit`</span>) <span class="keyword">from</span> sale </div><div class="line"><span class="keyword">where</span> inventoryname <span class="keyword">like</span> <span class="string">"%三星%"</span></div><div class="line"><span class="keyword">and</span> <span class="symbol">`tax`</span> &gt; <span class="number">1000</span> </div><div class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="symbol">`ordernum`</span>;</div></pre></td></tr></table></figure></p><h1 id="九、删除数据间的空格"><a href="#九、删除数据间的空格" class="headerlink" title="九、删除数据间的空格"></a>九、删除数据间的空格</h1><p>需求：删除存货名称两边的空格。<br><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> <span class="built_in">trim</span>(inventoryname) <span class="keyword">from</span> sale;</div></pre></td></tr></table></figure></p><h1 id="十、合并与排序列"><a href="#十、合并与排序列" class="headerlink" title="十、合并与排序列"></a>十、合并与排序列</h1><p>需求：计算每个订单号的成本并从高到低排序（成本 = 不含税金额 - 利润）<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> city,ordernum,(Nontaxamount - profit) <span class="keyword">as</span> <span class="keyword">cost</span> <span class="keyword">from</span> sale</div><div class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">cost</span> <span class="keyword">DESC</span>;</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;转自&lt;a href=&quot;https://zhuanlan.zhihu.com/p/30212389&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://zhuanlan.zhihu.com/p/30212389&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;数据是网上找到
      
    
    </summary>
    
      <category term="mysql" scheme="https://chumingke.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://chumingke.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>SQL语句常用优化技巧(一)</title>
    <link href="https://chumingke.github.io//blog/2017/10/Mysql-MYSQL-optimization-technique-1.html"/>
    <id>https://chumingke.github.io//blog/2017/10/Mysql-MYSQL-optimization-technique-1.html</id>
    <published>2017-10-25T08:25:07.000Z</published>
    <updated>2017-10-25T08:26:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>转载自<a href="http://blog.csdn.net/jayzai/article/details/45074529" target="_blank" rel="external">http://blog.csdn.net/jayzai/article/details/45074529</a></p><p>要提高SQL语句的执行效率，最常见的方法就是建立索引，以及尽量避免全表扫描。给大家整理一些常见的SQL优化技巧，避免全表扫描。一个简单的优化，也许能让你的SQL执行效率提高几倍，甚至几十倍。</p><h2 id="1、避免在where子句中使用-is-null-或-is-not-null-对字段进行判断。"><a href="#1、避免在where子句中使用-is-null-或-is-not-null-对字段进行判断。" class="headerlink" title="1、避免在where子句中使用 is null 或 is not null 对字段进行判断。"></a>1、避免在where子句中使用 is null 或 is not null 对字段进行判断。</h2><p> 如：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> <span class="keyword">table</span> <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">is</span> <span class="literal">null</span></div></pre></td></tr></table></figure></p><p>在这个查询中，就算我们为 name 字段设置了索引，查询分析器也不会使用，因此查询效率底下。为了避免这样的查询，在数据库设计的时候，尽量将可能会出现 null 值的字段设置默认值，这里如果我们将 name 字段的默认值设置为’’，那么我们就可以这样查询：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> <span class="keyword">table</span> <span class="keyword">where</span> <span class="keyword">name</span> = <span class="string">''</span></div></pre></td></tr></table></figure></p><p>2、避免在 where 子句中使用 != 或 &lt;&gt; 操作符。<br> 如：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">name</span> <span class="keyword">from</span> <span class="keyword">table</span> <span class="keyword">where</span> <span class="keyword">id</span> &lt;&gt; <span class="number">0</span></div></pre></td></tr></table></figure></p><p>数据库在查询时，对 != 或 &lt;&gt; 操作符不会使用索引，而对于 &lt; 、 &lt;= 、 = 、 &gt; 、 &gt;= 、 BETWEEN AND，数据库才会使用索引。因此对于上面的查询，正确写法应该是：<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> name from table where id &lt; <span class="number">0</span></div><div class="line"><span class="class"><span class="keyword">union</span> <span class="title">all</span></span></div><div class="line"><span class="keyword">select</span> name from table where id &gt; <span class="number">0</span></div></pre></td></tr></table></figure></p><p>这里我们为什么没有使用 or 来链接 where 后的两个条件呢？这就是我们下面要说的第3个优化技巧。<br>3、避免在 where 子句中使用 or来链接条件。<br>如：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> <span class="keyword">table</span> <span class="keyword">where</span> <span class="keyword">name</span> = <span class="string">'C++'</span> <span class="keyword">or</span> <span class="keyword">name</span> = <span class="string">'C#'</span></div></pre></td></tr></table></figure></p><p>这种情况，我们可以这样写：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> <span class="keyword">table</span> <span class="keyword">where</span> <span class="keyword">name</span> = <span class="string">'C++'</span> </div><div class="line"><span class="keyword">union</span> all  </div><div class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> <span class="keyword">table</span> <span class="keyword">where</span> <span class="keyword">name</span> = <span class="string">'C#'</span></div></pre></td></tr></table></figure></p><p>4、少用 in 或 not  in<br>虽然对于 in 的条件会使用索引，不会全表扫描，但是在某些特定的情况，使用其他方法也许效果更好。如：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">name</span> <span class="keyword">from</span> <span class="keyword">table</span> <span class="keyword">where</span> <span class="keyword">id</span> <span class="keyword">in</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>)</div></pre></td></tr></table></figure></p><p>像这种连续的数值，我们可以使用 BETWEEN AND，如：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">name</span> <span class="keyword">from</span> <span class="keyword">table</span> <span class="keyword">where</span> <span class="keyword">id</span> <span class="keyword">between</span> <span class="number">1</span> <span class="keyword">and</span> <span class="number">5</span></div></pre></td></tr></table></figure></p><p>5、注意 like 中通配符的使用。<br>下面的语句会导致全表扫描，尽量少用。如：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> <span class="keyword">table</span> <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">like</span> <span class="string">'%jayzai%'</span></div></pre></td></tr></table></figure></p><p>或者<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> <span class="keyword">table</span> <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">like</span> <span class="string">'%jayzai'</span></div></pre></td></tr></table></figure></p><p>而下面的语句执行效率要快的多，因为它使用了索引：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> <span class="keyword">table</span> <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">like</span> <span class="string">'jayzai%'</span></div></pre></td></tr></table></figure></p><p>6、避免在 where 子句中对字段进行表达式操作。<br>如：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">name</span> <span class="keyword">from</span> <span class="keyword">table</span> <span class="keyword">where</span> <span class="keyword">id</span>/<span class="number">2</span> = <span class="number">100</span></div></pre></td></tr></table></figure></p><p>正确的写法应该是：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">name</span> <span class="keyword">from</span> <span class="keyword">table</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">100</span>*<span class="number">2</span></div></pre></td></tr></table></figure></p><p>7、避免在 where 子句中对字段进行函数操作。<br>如：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> <span class="keyword">table</span> <span class="keyword">where</span> <span class="keyword">substring</span>(<span class="keyword">name</span>,<span class="number">1</span>,<span class="number">8</span>) = <span class="string">'jayzai'</span></div></pre></td></tr></table></figure></p><p>或<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> <span class="keyword">table</span> <span class="keyword">where</span> <span class="keyword">datediff</span>(<span class="keyword">day</span>,datefield,<span class="string">'2014-07-17'</span>) &gt;= <span class="number">0</span></div></pre></td></tr></table></figure></p><p>这两条语句中都对字段进行了函数处理，这样就是的查询分析器放弃了索引的使用。正确的写法是这样的：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> <span class="keyword">table</span> <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">like</span> <span class="string">'jayzai%'</span></div></pre></td></tr></table></figure></p><p>或<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> <span class="keyword">table</span> <span class="keyword">where</span> datefield &lt;= <span class="string">'2014-07-17'</span></div></pre></td></tr></table></figure></p><p>也就是说，不要在 where 子句中的 = 左边进行函数、算术运算或其他表达式运算。<br>8、在子查询中，用 exists 代替 in 是一个好的选择。<br>如：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">name</span> <span class="keyword">from</span> <span class="keyword">table</span> <span class="keyword">where</span> <span class="keyword">id</span> <span class="keyword">in</span> (<span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> b)</div></pre></td></tr></table></figure></p><p>如果我们将这条语句换成下面的写法：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">name</span> <span class="keyword">from</span> <span class="keyword">table</span> a <span class="keyword">where</span> <span class="keyword">exists</span> (<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> b <span class="keyword">where</span> <span class="keyword">id</span> = a.id)</div></pre></td></tr></table></figure></p><p>这样，查询出来的结果一样，但是下面这条语句查询的速度要快的多。 </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;转载自&lt;a href=&quot;http://blog.csdn.net/jayzai/article/details/45074529&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/jayzai/article/deta
      
    
    </summary>
    
      <category term="mysql" scheme="https://chumingke.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://chumingke.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>程序员老鸟写sql语句的经验之谈、百万数据查询优化技巧三十则</title>
    <link href="https://chumingke.github.io//blog/2017/10/MYSQL-optimization-techniques.html"/>
    <id>https://chumingke.github.io//blog/2017/10/MYSQL-optimization-techniques.html</id>
    <published>2017-10-25T08:08:31.000Z</published>
    <updated>2017-10-25T08:29:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>转载自<a href="http://blog.csdn.net/chenleixing/article/details/42610529" target="_blank" rel="external">http://blog.csdn.net/chenleixing/article/details/42610529</a></p><h1 id="一、程序员老鸟写sql语句的经验之谈"><a href="#一、程序员老鸟写sql语句的经验之谈" class="headerlink" title="一、程序员老鸟写sql语句的经验之谈"></a>一、程序员老鸟写sql语句的经验之谈</h1><p>做管理系统的，无论是bs结构的还是cs结构的，都不可避免的涉及到数据库表结构的设计，sql语句的编写等。因此在开发系统的时候，表结构设计是否合理，sql语句是否标准，写出的sql性能是否优化往往会成为公司衡量程序员技术水平的标准。<br>我们程序员不是dba，不需要时刻关注sql运行时间，想方设法优化表结构，存储空间，优化表读取速度等等，但是在开发系统时，时刻保持优良的写sql语句的作风是很有必要的，这关乎到个人在公司的声誉，嘿嘿，你懂的。。。<br>新来的程序员老鸟，在一个开发团队中，需要表现一下自己的水平，奠定在公司的地位，需要努力表现一把，最简单的从写的sql语句就很容易表现出来，曾经就有一次，一个老程序员，上面定位是要做团队领导的，先历练一下做个制单的模块，列表sql中有一列这位老鸟直接写了个select语句从别的表中取之，而不是用表之间关联得到，一下破坏自己程序员老鸟光辉形象。<br>做技术的还是要注重自己的内涵，提升内功，哈哈。<br>闲话少说，总结一点程序员老鸟写sql顺手拈来的功夫吧：</p><p>1.不论一个sql中涉及到多个表，每次都用两个表（结果集）操作，得到新的结果后，再和下一个表（结果集）操作。<br>2.避免在select f1,(select f2 from tableB )…. from tableA 这样得到字段列。直接用tableA和tableB关联得到A.f1,B.f2就可以了。<br>3.避免隐含的类型转换<br> 如<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> employee <span class="keyword">where</span> emp_id=<span class="string">'8'</span>  （错）</div><div class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> employee <span class="keyword">where</span> emp_id=<span class="number">8</span>    （对）</div><div class="line">##emp_id是整数型，用<span class="string">'8'</span>会默认启动类型转换，增加查询的开销</div></pre></td></tr></table></figure></p><p>4.尽量减少使用正则表达式，尽量不使用通配符。<br>5.使用关键字代替函数<br>   如：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> employee <span class="keyword">where</span> <span class="keyword">UPPER</span>(dept) <span class="keyword">like</span> <span class="string">'TECH_DB'</span>  （错）</div><div class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> employee <span class="keyword">where</span> <span class="keyword">SUBSTR</span>(dept,<span class="number">1</span>,<span class="number">4</span>)=<span class="string">'TECH'</span>    （错）</div><div class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> employee <span class="keyword">where</span> dept <span class="keyword">like</span> <span class="string">'TECH%'</span>         （对）</div></pre></td></tr></table></figure></p><p>6.不要在字段上用转换函数，尽量在常量上用<br>  如：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> employee <span class="keyword">where</span> to_char(create_date,<span class="string">'yyyy-mm-dd'</span>)=<span class="string">'2012-10-31'</span>  （错）</div><div class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> employee <span class="keyword">where</span> create_date=<span class="keyword">to_date</span>(<span class="string">'2012-10-31'</span>,<span class="string">'yyyy-mm-dd'</span>)   （对）</div></pre></td></tr></table></figure></p><p>7.不使用联接做查询<br> 如：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> employee <span class="keyword">where</span> first_name || last_name <span class="keyword">like</span> <span class="string">'Jo%'</span>  （错）</div></pre></td></tr></table></figure></p><p>8.尽量避免前后都用通配符<br>  如：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> employee <span class="keyword">where</span> dept <span class="keyword">like</span> <span class="string">'%TECH%'</span> (错）</div><div class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> employee <span class="keyword">where</span> dept <span class="keyword">like</span> <span class="string">'TECH%'</span> （对）</div></pre></td></tr></table></figure></p><p>9.判断条件顺序<br>  如：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> employee <span class="keyword">where</span> creat_date<span class="number">-30</span>&gt;<span class="keyword">to_date</span>(<span class="string">'2012-10-31'</span>,<span class="string">'yyyy-mm-dd'</span>)   （错）</div><div class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> employee <span class="keyword">where</span> creat_date &gt;<span class="keyword">to_date</span>(<span class="string">'2012-10-31'</span>,<span class="string">'yyyy-mm-dd'</span>)+<span class="number">30</span>   （对）</div></pre></td></tr></table></figure></p><p>10.尽量使用exists而非in<br> 当然这个也要根据记录的情况来定用exists还是用in, 通常的情况是用exists<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> employee <span class="keyword">where</span> salary <span class="keyword">in</span> (<span class="keyword">select</span> salary <span class="keyword">from</span> emp_level where....)   （错）   </div><div class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> employee <span class="keyword">where</span> salary <span class="keyword">exists</span>(<span class="keyword">select</span> <span class="string">'X'</span> <span class="keyword">from</span> emp_level <span class="keyword">where</span> ....)   （对）</div></pre></td></tr></table></figure></p><p>11.使用not exists 而非not in<br>    和上面的类似</p><p>12.减少查询表的记录数范围</p><p>13.正确使用索引<br>  索引可以提高速度，一般来说，选择度越高，索引的效率越高。</p><p>14.索引类型<br>  唯一索引，对于查询用到的字段，尽可能使用唯一索引。<br>  还有一些其他类型，如位图索引，在性别字段，只有男女的字段上用。<br>15.在经常进行连接，但是没有指定为外键的列上建立索引<br>16.在频繁进行排序会分组的列上建立索引，如经常做group by 或 order by 操作的字段。<br>17.在条件表达式中经常用到的不同值较多的列上建立检索，在不同值少的列上不建立索引。如性别列上只有男，女两个不同的值，就没必要建立索引（或建立位图索引）。如果建立索引不但不会提高查询效率，反而会严重降低更新速度。<br>18.在值比较少的字段做order by时，翻页会出现记录紊乱问题，要带上id字段一起做order by.<br>19.不要使用空字符串进行查询<br>    如：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> employee <span class="keyword">where</span> emp_name <span class="keyword">like</span> <span class="string">'%%'</span> （错）</div></pre></td></tr></table></figure></p><p>20.尽量对经常用作group by的关键字段做索引。</p><p>21.正确使用表关联<br>    利用外连接替换效率十分低下的not in运算，大大提高运行速度。<br>    如：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">select <span class="selector-tag">a</span><span class="selector-class">.id</span> from employee <span class="selector-tag">a</span> where <span class="selector-tag">a</span><span class="selector-class">.emp_no</span> not <span class="keyword">in</span> (select emp_no from employee1 where job =<span class="string">'SALE'</span>)  （错）</div></pre></td></tr></table></figure></p><p>22.使用临时表<br>   在必要的情况下，为减少读取次数，可以使用经过索引的临时表加快速度。<br>   如：<br><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="built_in">e</span>.id <span class="keyword">from</span> employee <span class="built_in">e</span> ,dept d <span class="keyword">where</span> <span class="built_in">e</span>.dept_id=d.id <span class="keyword">and</span> <span class="built_in">e</span>.empno&gt;<span class="number">1000</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="built_in">e</span>.id   （错）</div><div class="line">   </div><div class="line"><span class="keyword">select</span> id,empno <span class="keyword">from</span> employee <span class="keyword">into</span> temp_empl <span class="keyword">where</span> empno&gt;<span class="number">1000</span> <span class="keyword">order</span> <span class="keyword">by</span> id</div><div class="line"><span class="keyword">select</span> m.id <span class="keyword">from</span> temp_emp1 m,dept d <span class="keyword">where</span> m.empno=d.id      （对）</div></pre></td></tr></table></figure></p><p>对于大数据量sql语句性能优化更多的工作就交给dba去实践，我们程序员做好这些基本功就好了。<br>以上文章来着博客园web报表的博客。</p><h1 id="二、百万数据查询优化技巧三十则"><a href="#二、百万数据查询优化技巧三十则" class="headerlink" title="二、百万数据查询优化技巧三十则"></a>二、百万数据查询优化技巧三十则</h1><p>1.对查询进行优化，应尽量避免全表扫描，首先应考虑在 where 及 order by 涉及的列上建立索引。 </p><p>2.应尽量避免在 where 子句中对字段进行 null 值判断，否则将导致引擎放弃使用索引而进行全表扫描，如：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> t <span class="keyword">where</span> <span class="keyword">num</span> <span class="keyword">is</span> <span class="literal">null</span></div><div class="line">##可以在<span class="keyword">num</span>上设置默认值<span class="number">0</span>，确保表中<span class="keyword">num</span>列没有<span class="literal">null</span>值，然后这样查询：</div><div class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> t <span class="keyword">where</span> <span class="keyword">num</span>=<span class="number">0</span></div></pre></td></tr></table></figure></p><p>3.应尽量避免在 where 子句中使用!=或&lt;&gt;操作符，否则将引擎放弃使用索引而进行全表扫描。</p><p>4.应尽量避免在 where 子句中使用 or 来连接条件，否则将导致引擎放弃使用索引而进行全表扫描，如：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> t <span class="keyword">where</span> <span class="keyword">num</span>=<span class="number">10</span> <span class="keyword">or</span> <span class="keyword">num</span>=<span class="number">20</span></div><div class="line">##可以这样查询：</div><div class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> t <span class="keyword">where</span> <span class="keyword">num</span>=<span class="number">10</span></div><div class="line"><span class="keyword">union</span> all</div><div class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> t <span class="keyword">where</span> <span class="keyword">num</span>=<span class="number">20</span></div></pre></td></tr></table></figure></p><p>5.in 和 not in 也要慎用，否则会导致全表扫描，如：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> t <span class="keyword">where</span> <span class="keyword">num</span> <span class="keyword">in</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</div><div class="line">##对于连续的数值，能用 <span class="keyword">between</span> 就不要用 <span class="keyword">in</span> 了：</div><div class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> t <span class="keyword">where</span> <span class="keyword">num</span> <span class="keyword">between</span> <span class="number">1</span> <span class="keyword">and</span> <span class="number">3</span></div></pre></td></tr></table></figure></p><p>6.下面的查询也将导致全表扫描：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> t <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">like</span> <span class="string">'%abc%'</span></div><div class="line">##若要提高效率，可以考虑全文检索。</div></pre></td></tr></table></figure></p><p>7.如果在 where 子句中使用参数，也会导致全表扫描。因为SQL只有在运行时才会解析局部变量，但优化程序不能将访问计划的选择推迟到运行时；它必须在编译时进行选择。然而，如果在编译时建立访问计划，变量的值还是未知的，因而无法作为索引选择的输入项。如下面语句将进行全表扫描：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> t <span class="keyword">where</span> <span class="keyword">num</span>=@<span class="keyword">num</span> &lt;mailto:<span class="keyword">num</span>=@<span class="keyword">num</span>&gt;</div><div class="line">##可以改为强制查询使用索引：</div><div class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> t <span class="keyword">with</span>(<span class="keyword">index</span>(索引名)) <span class="keyword">where</span> <span class="keyword">num</span>=@<span class="keyword">num</span> &lt;mailto:<span class="keyword">num</span>=@<span class="keyword">num</span>&gt;</div></pre></td></tr></table></figure></p><p>8.应尽量避免在 where 子句中对字段进行表达式操作，这将导致引擎放弃使用索引而进行全表扫描。如：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> t <span class="keyword">where</span> <span class="keyword">num</span>/<span class="number">2</span>=<span class="number">100</span></div><div class="line">##应改为:</div><div class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> t <span class="keyword">where</span> <span class="keyword">num</span>=<span class="number">100</span>*<span class="number">2</span></div></pre></td></tr></table></figure></p><p>9.应尽量避免在where子句中对字段进行函数操作，这将导致引擎放弃使用索引而进行全表扫描。如：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> t <span class="keyword">where</span> <span class="keyword">substring</span>(<span class="keyword">name</span>,<span class="number">1</span>,<span class="number">3</span>)=<span class="string">'abc'</span><span class="comment">--name以abc开头的id</span></div><div class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> t <span class="keyword">where</span> <span class="keyword">datediff</span>(<span class="keyword">day</span>,createdate,<span class="string">'2005-11-30'</span>)=<span class="number">0</span><span class="comment">--‘2005-11-30’生成的id</span></div><div class="line">##应改为:</div><div class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> t <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">like</span> <span class="string">'abc%'</span></div><div class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> t <span class="keyword">where</span> createdate&gt;=<span class="string">'2005-11-30'</span> <span class="keyword">and</span> createdate&lt;<span class="string">'2005-12-1'</span></div></pre></td></tr></table></figure></p><p>10.不要在 where 子句中的“=”左边进行函数、算术运算或其他表达式运算，否则系统将可能无法正确使用索引。</p><p>11.在使用索引字段作为条件时，如果该索引是复合索引，那么必须使用到该索引中的第一个字段作为条件时才能保证系统使用该索引，否则该索引将不会被使用，并且应尽可能的让字段顺序与索引顺序相一致。<br>12.不要写一些没有意义的查询，如需要生成一个空表结构：<br><figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">select col1,col2 into #t <span class="keyword">from</span> t <span class="keyword">where</span> <span class="number">1</span>=<span class="number">0</span></div><div class="line">##这类代码不会返回任何结果集，但是会消耗系统资源的，应改成这样：</div><div class="line">create table #t(...)</div></pre></td></tr></table></figure></p><p>13.很多时候用 exists 代替 in 是一个好的选择：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">num</span> <span class="keyword">from</span> a <span class="keyword">where</span> <span class="keyword">num</span> <span class="keyword">in</span>(<span class="keyword">select</span> <span class="keyword">num</span> <span class="keyword">from</span> b)</div><div class="line">##用下面的语句替换：</div><div class="line"><span class="keyword">select</span> <span class="keyword">num</span> <span class="keyword">from</span> a <span class="keyword">where</span> <span class="keyword">exists</span>(<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> b <span class="keyword">where</span> <span class="keyword">num</span>=a.num)</div></pre></td></tr></table></figure></p><p>14.并不是所有索引对查询都有效，SQL是根据表中数据来进行查询优化的，当索引列有大量数据重复时，SQL查询可能不会去利用索引，如一表中有字段sex，male、female几乎各一半，那么即使在sex上建了索引也对查询效率起不了作用。</p><p>15.索引并不是越多越好，索引固然可以提高相应的 select 的效率，但同时也降低了 insert 及 update 的效率，因为 insert 或 update 时有可能会重建索引，所以怎样建索引需要慎重考虑，视具体情况而定。一个表的索引数最好不要超过6个，若太多则应考虑一些不常使用到的列上建的索引是否有必要。</p><p>16.应尽可能的避免更新 clustered 索引数据列，因为 clustered 索引数据列的顺序就是表记录的物理存储顺序，一旦该列值改变将导致整个表记录的顺序的调整，会耗费相当大的资源。若应用系统需要频繁更新 clustered 索引数据列，那么需要考虑是否应将该索引建为 clustered 索引。</p><p>17.尽量使用数字型字段，若只含数值信息的字段尽量不要设计为字符型，这会降低查询和连接的性能，并会增加存储开销。这是因为引擎在处理查询和连接时会逐个比较字符串中每一个字符，而对于数字型而言只需要比较一次就够了。</p><p>18.尽可能的使用 varchar/nvarchar 代替 char/nchar ，因为首先变长字段存储空间小，可以节省存储空间，其次对于查询来说，在一个相对较小的字段内搜索效率显然要高些。</p><p>19.任何地方都不要使用 select <em> from t ，用具体的字段列表代替“</em>”，不要返回用不到的任何字段。</p><p>20.尽量使用表变量来代替临时表。如果表变量包含大量数据，请注意索引非常有限（只有主键索引）。</p><p>21.避免频繁创建和删除临时表，以减少系统表资源的消耗。</p><p>22.临时表并不是不可使用，适当地使用它们可以使某些例程更有效，例如，当需要重复引用大型表或常用表中的某个数据集时。但是，对于一次性事件，最好使用导出表。</p><p>23.在新建临时表时，如果一次性插入数据量很大，那么可以使用 select into 代替 create table，避免造成大量 log ，以提高速度；如果数据量不大，为了缓和系统表的资源，应先create table，然后insert。</p><p>24.如果使用到了临时表，在存储过程的最后务必将所有的临时表显式删除，先 truncate table ，然后 drop table ，这样可以避免系统表的较长时间锁定。</p><p>25.尽量避免使用游标，因为游标的效率较差，如果游标操作的数据超过1万行，那么就应该考虑改写。</p><p>26.使用基于游标的方法或临时表方法之前，应先寻找基于集的解决方案来解决问题，基于集的方法通常更有效。</p><p>27.与临时表一样，游标并不是不可使用。对小型数据集使用 FAST_FORWARD 游标通常要优于其他逐行处理方法，尤其是在必须引用几个表才能获得所需的数据时。在结果集中包括“合计”的例程通常要比使用游标执行的速度快。如果开发时间允许，基于游标的方法和基于集的方法都可以尝试一下，看哪一种方法的效果更好。</p><p>28.在所有的存储过程和触发器的开始处设置 SET NOCOUNT ON ，在结束时设置 SET NOCOUNT OFF 。无需在执行存储过程和触发器的每个语句后向客户端发送 DONE_IN_PROC 消息。</p><p>29.尽量避免大事务操作，提高系统并发能力。</p><p>30.尽量避免向客户端返回大数据量，若数据量过大，应该考虑相应需求是否合理。</p><p>第二部分的文章来着自己大学时从网上下载的一篇文档，2部分的内容都是来着很久以前下载的文档里，今天看到相关博文又有新收获的同时想起了这2篇文档，特意找出来回顾并供大家一起学习分享！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;转载自&lt;a href=&quot;http://blog.csdn.net/chenleixing/article/details/42610529&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/chenleixing/ar
      
    
    </summary>
    
      <category term="mysql" scheme="https://chumingke.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://chumingke.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>tableau应用实战</title>
    <link href="https://chumingke.github.io//blog/2017/10/Tableau-practical-combat-notes.html"/>
    <id>https://chumingke.github.io//blog/2017/10/Tableau-practical-combat-notes.html</id>
    <published>2017-10-10T15:35:34.000Z</published>
    <updated>2017-10-10T23:00:17.000Z</updated>
    
    <content type="html"><![CDATA[<p>tableau应用实战之人人都是数据分析师</p><h1 id="tableau入门"><a href="#tableau入门" class="headerlink" title="tableau入门"></a>tableau入门</h1><h2 id="敏捷商务智能"><a href="#敏捷商务智能" class="headerlink" title="敏捷商务智能"></a>敏捷商务智能</h2><p>与传统BI相比灵活、实时</p><h2 id="数据可视化明星tableau"><a href="#数据可视化明星tableau" class="headerlink" title="数据可视化明星tableau"></a>数据可视化明星tableau</h2><p>定位：数据可视化敏捷开发和实现的商务智能展现工具<br>核心技术：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">独创的VizQl数据库</div><div class="line">用户体验良好且易用的表现形式</div></pre></td></tr></table></figure></p><h2 id="tableau主要特性"><a href="#tableau主要特性" class="headerlink" title="tableau主要特性"></a>tableau主要特性</h2><p>1.极速高效<br>2.简单易用<br>3.多种数据源<br>4.高效接口集成<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">数据提取<span class="string">API:</span>c,c++,java,python,.tde文件</div><div class="line">javascript <span class="string">API:</span>镶嵌</div><div class="line">与数据分析工具R/python的集成接口</div></pre></td></tr></table></figure></p><h2 id="tableau产品体系"><a href="#tableau产品体系" class="headerlink" title="tableau产品体系"></a>tableau产品体系</h2><p>tableau desktop<br>tableau server<br>tableau online<br>tableau mobile<br>tableau public<br>tableau reader</p><h2 id="tableau的工作区"><a href="#tableau的工作区" class="headerlink" title="tableau的工作区"></a>tableau的工作区</h2><h3 id="工作表work-sheet-视图visualization"><a href="#工作表work-sheet-视图visualization" class="headerlink" title="工作表work sheet/视图visualization"></a>工作表work sheet/视图visualization</h3><h4 id="数据窗口"><a href="#数据窗口" class="headerlink" title="数据窗口"></a>数据窗口</h4><p>数据源窗口<br>维度窗口<br>度量窗口<br>集窗口<br>参数窗口</p><h4 id="分析窗口"><a href="#分析窗口" class="headerlink" title="分析窗口"></a>分析窗口</h4><h5 id="汇总"><a href="#汇总" class="headerlink" title="汇总"></a>汇总</h5><p>参考线、参考区间<br>参考线、参考区间<br>平均线<br>四分位点中值<br>盒须图<br>合计</p><h5 id="模型"><a href="#模型" class="headerlink" title="模型"></a>模型</h5><p>95%CI的平均值<br>趋势线<br>预测</p><h5 id="自定义"><a href="#自定义" class="headerlink" title="自定义"></a>自定义</h5><p>参考线、参考区间<br>分布区间<br>盒须图等</p><h4 id="页面卡"><a href="#页面卡" class="headerlink" title="页面卡"></a>页面卡</h4><p>基于维度度量拆分视图</p><h4 id="筛选器卡"><a href="#筛选器卡" class="headerlink" title="筛选器卡"></a>筛选器卡</h4><h4 id="标记卡"><a href="#标记卡" class="headerlink" title="标记卡"></a>标记卡</h4><p>属性</p><h4 id="颜色图例"><a href="#颜色图例" class="headerlink" title="颜色图例"></a>颜色图例</h4><h4 id="行功能区-列功能区"><a href="#行功能区-列功能区" class="headerlink" title="行功能区\列功能区"></a>行功能区\列功能区</h4><h4 id="工作表视图区"><a href="#工作表视图区" class="headerlink" title="工作表视图区"></a>工作表视图区</h4><h4 id="智能显示"><a href="#智能显示" class="headerlink" title="智能显示"></a>智能显示</h4><h4 id="标签栏"><a href="#标签栏" class="headerlink" title="标签栏"></a>标签栏</h4><h4 id="状态栏"><a href="#状态栏" class="headerlink" title="状态栏"></a>状态栏</h4><h3 id="仪表盘dashboard"><a href="#仪表盘dashboard" class="headerlink" title="仪表盘dashboard"></a>仪表盘dashboard</h3><p>1.仪表板窗口<br>2.仪表板对象窗口<br>3.平铺和浮动<br>4.布局窗口<br>树形结构显示<br>5.仪表板设置窗口<br>6.仪表板视图区</p><h3 id="故事story"><a href="#故事story" class="headerlink" title="故事story"></a>故事story</h3><p>仪表板和工作表窗口<br>说明<br>导航器设置<br>故事设置窗口<br>导航框<br>新空白点按钮<br>复制按钮<br>说明框<br>故事视图区</p><h3 id="工作簿workbook"><a href="#工作簿workbook" class="headerlink" title="工作簿workbook"></a>工作簿workbook</h3><h3 id="菜单栏和工具栏"><a href="#菜单栏和工具栏" class="headerlink" title="菜单栏和工具栏"></a>菜单栏和工具栏</h3><h2 id="tableau的文件管理"><a href="#tableau的文件管理" class="headerlink" title="tableau的文件管理"></a>tableau的文件管理</h2><h3 id="tableau工作簿-twb"><a href="#tableau工作簿-twb" class="headerlink" title="tableau工作簿(.twb)"></a>tableau工作簿(.twb)</h3><p>1.使用场景<br>tableau缺省保存工作的方式<br>2.内容<br>可视化内容，无源数据</p><h3 id="tableau打包工作簿-twbx"><a href="#tableau打包工作簿-twbx" class="headerlink" title="tableau打包工作簿(.twbx)"></a>tableau打包工作簿(.twbx)</h3><p>1.使用场景<br>与无法访问数据源的用户分享工作<br>2.内容<br>创建工作簿的所有信息和资源</p><h3 id="tableau数据源-tds"><a href="#tableau数据源-tds" class="headerlink" title="tableau数据源(.tds)"></a>tableau数据源(.tds)</h3><p>1.使用场景<br>频繁使用的数据源<br>2.内容<br>包含新建数据源所需的信息：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">数据源类型</div><div class="line">数据源连接信息</div><div class="line">数据源上的字段属性</div><div class="line">数据源上创建的组、集和计算字段</div></pre></td></tr></table></figure></p><h3 id="tableau数据源-tdsx"><a href="#tableau数据源-tdsx" class="headerlink" title="tableau数据源(.tdsx)"></a>tableau数据源(.tdsx)</h3><p>1.使用场景<br>频繁使用的数据源<br>2.内容<br>包含数据源(.tds)文件中的所有信息<br>以及任何本地文件数据源(Excel、Access、文本和数据提取)</p><h3 id="tableau书签-tbm"><a href="#tableau书签-tbm" class="headerlink" title="tableau书签(.tbm)"></a>tableau书签(.tbm)</h3><p>1.使用场景<br>工作簿间分享工作表时使用<br>2.内容<br>如果原始工作簿就是一个打包工作簿<br>创建的书签就包含可视化的内容和书签</p><h3 id="tableau数据提取-tde"><a href="#tableau数据提取-tde" class="headerlink" title="tableau数据提取(.tde)"></a>tableau数据提取(.tde)</h3><p>1.使用场景<br>提高数据库性能<br>2.内容<br>部门或整个数据源的一个本地副本</p><h1 id="典型应用场景"><a href="#典型应用场景" class="headerlink" title="典型应用场景"></a>典型应用场景</h1><h2 id="数据准备"><a href="#数据准备" class="headerlink" title="数据准备"></a>数据准备</h2><p>统计周期<br>类别变量</p><h2 id="认识tableau数据"><a href="#认识tableau数据" class="headerlink" title="认识tableau数据"></a>认识tableau数据</h2><h3 id="数据角色"><a href="#数据角色" class="headerlink" title="数据角色"></a>数据角色</h3><h4 id="维度和度量"><a href="#维度和度量" class="headerlink" title="维度和度量"></a>维度和度量</h4><p>1.维度<br>定性，不计算，蓝色。<br>2.度量<br>定量，默认聚合运算，绿色。</p><h4 id="离散和连续"><a href="#离散和连续" class="headerlink" title="离散和连续"></a>离散和连续</h4><p>1.离散<br>蓝色，在行列功能区时在视图中显示为标题<br>2.连续<br>绿色，在行列功能区时在视图中显示为轴</p><h3 id="字段类型"><a href="#字段类型" class="headerlink" title="字段类型"></a>字段类型</h3><h4 id="维度"><a href="#维度" class="headerlink" title="维度"></a>维度</h4><p>1.文本<br>2.日期<br>3.日期和时间<br>4.地理值：北京、四川<br>5.布尔值</p><h4 id="度量"><a href="#度量" class="headerlink" title="度量"></a>度量</h4><p>1.数字<br>2.地理编码：经纬度</p><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><p>在标志前加个等号，表示该字段不是来自原始数据，为tableau中自定义。</p><p>每次新建数据源都会出现：<br>1.记录数：自动给每行观测值赋值为1，用于计数。<br>2.度量名称<br>3.度量值</p><h3 id="字段类型转换"><a href="#字段类型转换" class="headerlink" title="字段类型转换"></a>字段类型转换</h3><h2 id="创建视图"><a href="#创建视图" class="headerlink" title="创建视图"></a>创建视图</h2><h3 id="行列功能区"><a href="#行列功能区" class="headerlink" title="行列功能区"></a>行列功能区</h3><p>度量字段进行聚合计算，缺省为总计。<br>1.总计<br>2.平均值，对行数的平均<br>3.中位数<br>4.最大值<br>5.计数<br>6.等</p><h3 id="标记卡-1"><a href="#标记卡-1" class="headerlink" title="标记卡"></a>标记卡</h3><p>1.标记类型<br>缺省为条形图<br>2.大小<br>3.标签<br>快速表计算<br>4.详细信息<br>依据拖放的字段对视图进行分解细化<br>5.工具提示<br>鼠标悬停出现的提示信息<br>6.特殊按钮在选择了对应的标记类型时显示</p><h3 id="筛选器"><a href="#筛选器" class="headerlink" title="筛选器"></a>筛选器</h3><p>1.显示快速筛选器<br>应用于多个表<br>筛选器的表现形式<br>2.通配符<br>3.条件<br>4.顶部<br>某类别前几的</p><h3 id="页面"><a href="#页面" class="headerlink" title="页面"></a>页面</h3><p>播放器</p><h3 id="智能显示-1"><a href="#智能显示-1" class="headerlink" title="智能显示"></a>智能显示</h3><h3 id="度量名称和度量值"><a href="#度量名称和度量值" class="headerlink" title="度量名称和度量值"></a>度量名称和度量值</h3><h2 id="创建仪表板"><a href="#创建仪表板" class="headerlink" title="创建仪表板"></a>创建仪表板</h2><h2 id="保存工作成果"><a href="#保存工作成果" class="headerlink" title="保存工作成果"></a>保存工作成果</h2><h1 id="数据连接与管理"><a href="#数据连接与管理" class="headerlink" title="数据连接与管理"></a>数据连接与管理</h1><h2 id="tableau的数据架构"><a href="#tableau的数据架构" class="headerlink" title="tableau的数据架构"></a>tableau的数据架构</h2><h3 id="传统BI"><a href="#传统BI" class="headerlink" title="传统BI"></a>传统BI</h3><p>完整企业级的元数据体系，不进行元数据管理</p><h3 id="tableau"><a href="#tableau" class="headerlink" title="tableau"></a>tableau</h3><h4 id="数据连接层（Connection）"><a href="#数据连接层（Connection）" class="headerlink" title="数据连接层（Connection）"></a>数据连接层（Connection）</h4><p>1.数据连接信息<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">数据库</div><div class="line">数据表</div><div class="line">数据视图</div><div class="line">数据列</div><div class="line">表连接</div><div class="line">SQL脚本</div></pre></td></tr></table></figure></p><p>2.数据连接层不保存任何源数据</p><h4 id="数据模型层（Data-Model）"><a href="#数据模型层（Data-Model）" class="headerlink" title="数据模型层（Data Model）"></a>数据模型层（Data Model）</h4><p>管理字段的数据类型、角色、默认值、别名等<br>数据立方体的概念</p><h4 id="数据可视化层（VizQL）"><a href="#数据可视化层（VizQL）" class="headerlink" title="数据可视化层（VizQL）"></a>数据可视化层（VizQL）</h4><p>核心技术</p><h2 id="数据连接"><a href="#数据连接" class="headerlink" title="数据连接"></a>数据连接</h2><h3 id="连接文件数据源"><a href="#连接文件数据源" class="headerlink" title="连接文件数据源"></a>连接文件数据源</h3><p>1.连接到电子表格<br>保存数据连接<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">数据-<span class="tag">&lt;<span class="name">数据源名称</span>&gt;</span>-添加到已保存的数据源</div></pre></td></tr></table></figure></p><p>2.连接到Access文件<br>新自定义SQL<br>使用SQL语句<br>3.连接到Tableau工作簿<br>其他文件</p><h3 id="连接服务器数据源"><a href="#连接服务器数据源" class="headerlink" title="连接服务器数据源"></a>连接服务器数据源</h3><p>1.连接到Oracle数据库<br>2.连接到ODBC<br>3.连接到Cloudera Hadoop</p><h3 id="复制粘贴输入数据"><a href="#复制粘贴输入数据" class="headerlink" title="复制粘贴输入数据"></a>复制粘贴输入数据</h3><h3 id="筛选数据"><a href="#筛选数据" class="headerlink" title="筛选数据"></a>筛选数据</h3><p>数据源筛选器</p><h2 id="数据整合"><a href="#数据整合" class="headerlink" title="数据整合"></a>数据整合</h2><h3 id="实现多表联结"><a href="#实现多表联结" class="headerlink" title="实现多表联结"></a>实现多表联结</h3><p>1.内联接<br>只列出与联接条件匹配的数据行<br>2.左联接<br>不仅包含查询结果集合中符合联接条件的行，而且还包括左表的所有数据行<br>3.右联接<br>不仅包含查询结果集合中符合联接条件的行，而且还包括右表的所有数据行<br>4.完全外部联接<br>包含查询结果集合中的包含左、右表的所有数据行</p><h3 id="多数据源的数据融合"><a href="#多数据源的数据融合" class="headerlink" title="多数据源的数据融合"></a>多数据源的数据融合</h3><p>1.多维数据源（多维数据集）不能用作从数据源，只能用作主数据源<br>2.修改数据源关联关系<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">数据-编辑关系-自定义</div><div class="line">激活/未激活点击切换</div></pre></td></tr></table></figure></p><h3 id="行列转换"><a href="#行列转换" class="headerlink" title="行列转换"></a>行列转换</h3><p>数据透视表</p><h2 id="数据加载"><a href="#数据加载" class="headerlink" title="数据加载"></a>数据加载</h2><h3 id="创建数据提取"><a href="#创建数据提取" class="headerlink" title="创建数据提取"></a>创建数据提取</h3><p>1.对数据源进行“提取数据”操作<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">数据-<span class="tag">&lt;<span class="name">数据源名称</span>&gt;</span>-提取数据</div><div class="line">数据-<span class="tag">&lt;<span class="name">数据源名称</span>&gt;</span>-编辑数据源-提取-编辑</div><div class="line">筛选器、聚合、行数</div><div class="line">隐藏所有未使用的字段</div></pre></td></tr></table></figure></p><p>2.首次新建数据源时选择“提取”方式<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">实时-提取</div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#将数据以“.tde”格式保存</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#在使用数据提取和使用整个数据源之间进行切换</span></span></div><div class="line">数据-&lt;数据源名称&gt;-使用数据提取</div></pre></td></tr></table></figure></p><p>3.使用数据提取的好处是通过创建一个包含样本数据的数据提取，减少数据量<br>4.移除数据提取<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">数据-&lt;数据源名称&gt;-数据提取-移除</div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#仅从工作簿删除数据提取</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#删除数据提取文件</span></span></div></pre></td></tr></table></figure></p><h3 id="刷新数据提取"><a href="#刷新数据提取" class="headerlink" title="刷新数据提取"></a>刷新数据提取</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">数据-<span class="tag">&lt;<span class="name">数据源名称</span>&gt;</span>-刷新</div></pre></td></tr></table></figure><p>1.完全数据提取<br>将所有数据替换为基础数据源中的数据<br>2.增量数据提取<br>仅添加自上次提取数据以来新增的行<br>3.改变数据源的提取方式<br>数据-&lt;数据源名称&gt;-提取数据</p><h3 id="向数据提取添加行"><a href="#向数据提取添加行" class="headerlink" title="向数据提取添加行"></a>向数据提取添加行</h3><h4 id="从文件添加数据"><a href="#从文件添加数据" class="headerlink" title="从文件添加数据"></a>从文件添加数据</h4><p>1.文件类型相同<br>从文件数据源向数据提取文件添加新数据<br>2.数据提取文件(.tde)<br>数据-&lt;数据源名称&gt;-数据提取-从文件添加数据</p><h4 id="从数据源添加数据"><a href="#从数据源添加数据" class="headerlink" title="从数据源添加数据"></a>从数据源添加数据</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">数据-<span class="tag">&lt;<span class="name">数据源名称</span>&gt;</span>-数据提取-从数据源添加数据</div></pre></td></tr></table></figure><h3 id="优化数据提取"><a href="#优化数据提取" class="headerlink" title="优化数据提取"></a>优化数据提取</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">数据-<span class="tag">&lt;<span class="name">数据源名称</span>&gt;</span>-数据提取-优化</div></pre></td></tr></table></figure><p>1.计算字段的预处理<br>点击优化后，完成预处理并储存在数据提取文件中，后续不必再次计算<br>部分函数无法实现<br><figure class="highlight excel"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">外部函数R等</div><div class="line">表计算函数</div><div class="line"><span class="built_in">NOW</span>（）和<span class="built_in">TODAY</span>（）等</div></pre></td></tr></table></figure></p><p>2.加速视图<br>缓存筛选器</p><h2 id="数据维护"><a href="#数据维护" class="headerlink" title="数据维护"></a>数据维护</h2><h3 id="查看数据"><a href="#查看数据" class="headerlink" title="查看数据"></a>查看数据</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">数据-<span class="tag">&lt;<span class="name">数据源名称</span>&gt;</span>-查看数据</div></pre></td></tr></table></figure><h3 id="刷新数据"><a href="#刷新数据" class="headerlink" title="刷新数据"></a>刷新数据</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">数据-<span class="tag">&lt;<span class="name">数据源名称</span>&gt;</span>-刷新</div></pre></td></tr></table></figure><h3 id="替换数据"><a href="#替换数据" class="headerlink" title="替换数据"></a>替换数据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">数据-替换数据源</div></pre></td></tr></table></figure><h3 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">数据-<span class="tag">&lt;<span class="name">数据源名称</span>&gt;</span>-关闭</div></pre></td></tr></table></figure><h1 id="初级可视化分析"><a href="#初级可视化分析" class="headerlink" title="初级可视化分析"></a>初级可视化分析</h1><h2 id="条形图"><a href="#条形图" class="headerlink" title="条形图"></a>条形图</h2><p>堆积条形图</p><h2 id="直方图"><a href="#直方图" class="headerlink" title="直方图"></a>直方图</h2><p>1.创建数据桶<br><figure class="highlight livescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">右键创建-数据桶-编辑级</div><div class="line">数据桶大小<span class="string">\组距</span></div><div class="line">加载-值范围</div></pre></td></tr></table></figure></p><p>2.记录数<br>3.每个标签代表的是该级所分配的数字范围的下限（含下限）<br>容易误导，编辑别名，20改为20~30。<br>4.自动创建<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">选择度量-智能显示-选择直方图</div></pre></td></tr></table></figure></p><p>5.高级应用<br>重新分级<br>创建自定义字段<br><figure class="highlight lua"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span>-<span class="keyword">then</span>-<span class="keyword">elseif</span> <span class="keyword">and</span>-<span class="keyword">then</span>-<span class="keyword">end</span></div></pre></td></tr></table></figure></p><h2 id="饼图"><a href="#饼图" class="headerlink" title="饼图"></a>饼图</h2><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>1.分块越少越好，不多于4块<br>2.确保各分块占比总计为100%<br>3.避免各分块中使用过多标签</p><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><p>1.分组<br>2.筛选统计周期<br>3.将分组拖至颜色标记卡<br>4.设置标记类型为饼图<br>5.将度量值拖至角度标价卡<br>6.将分组及度量值拖至标签标记卡，并对度量值设置快速表计算-总额百分比</p><h2 id="折线图"><a href="#折线图" class="headerlink" title="折线图"></a>折线图</h2><h3 id="基本折线图"><a href="#基本折线图" class="headerlink" title="基本折线图"></a>基本折线图</h3><p>1.颜色标记卡的效果标记<br>2.自定义效果标记<br>3.双轴<br>4.将折线图与形状图同步轴</p><h3 id="双组合图-双轴折线图"><a href="#双组合图-双轴折线图" class="headerlink" title="双组合图/双轴折线图"></a>双组合图/双轴折线图</h3><p>1.做好趋势图后<br>2.直接将第二个度量拖至视图右侧，比如数量用条形图，比率用折线图<br>3.参考线<br>4.添加标签<br>5.适用，所有包含度量，比率，参考线的图形</p><h2 id="基本表-文本表-交叉表"><a href="#基本表-文本表-交叉表" class="headerlink" title="基本表/文本表/交叉表"></a>基本表/文本表/交叉表</h2><p>1.将要交叉的维度分别拖至行列功能区<br>2.将度量拖至文本标记卡<br>3.添加列总计，菜单栏-分析-合计-列总计</p><h2 id="压力图-热图-热力图"><a href="#压力图-热图-热力图" class="headerlink" title="压力图/热图/热力图"></a>压力图/热图/热力图</h2><h3 id="压力图"><a href="#压力图" class="headerlink" title="压力图"></a>压力图</h3><p>1.数据准备<br><figure class="highlight ada"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">连接数据源</div><div class="line">创建计算字段:售电量当期值，利润总额当期值。</div><div class="line">售电量当期值:</div><div class="line"><span class="keyword">case</span>[指标名称]-<span class="keyword">when</span> <span class="string">"销售量"</span><span class="keyword">then</span>[当期值]-<span class="keyword">else</span> <span class="number">0</span>-<span class="keyword">end</span></div><div class="line">利润总额当期值：</div><div class="line"><span class="keyword">case</span>[指标名称]-<span class="keyword">when</span> <span class="string">"利润总额"</span><span class="keyword">then</span>[当期值]-<span class="keyword">else</span> <span class="number">0</span>-<span class="keyword">end</span></div></pre></td></tr></table></figure></p><p>2.将维度 省市 拖至行<br>3.售电量当期值拖至 大小 标记卡<br>4.利润总额当期值拖至 颜色 标记卡</p><h3 id="突显表"><a href="#突显表" class="headerlink" title="突显表"></a>突显表</h3><p>1.基本表的变形<br>2.维度 省市 拖至行功能区<br>3.利润总额当期值拖至 文本、颜色标记卡，标记类型为方形<br>4.高级应用<br>根据需要自定义颜色，例如利润为负显示为红色<br>将利润总额当期值 拖至 文本、颜色<br>单击 颜色图例 右上角下拉按钮-编辑颜色-自定义发散-两端为红黑-渐变颜色设定为2-高级-设定中心为0</p><blockquote><p>均可帮助发现异常数据，并对异常数据进行下钻，从而查看引起异常的原因</p><h2 id="树地图-树形图-嵌套矩形"><a href="#树地图-树形图-嵌套矩形" class="headerlink" title="树地图/树形图/嵌套矩形"></a>树地图/树形图/嵌套矩形</h2><p>也是一种突出显示异常数据点或重要数据的方法<br>1.将 省市 拖放至标签<br>2.售电量当期值拖放至 大小 ，图形大小代表售电量当期值大小<br>3.利润总额当期值拖放至 颜色，颜色深浅表示大小</p><h2 id="气泡图"><a href="#气泡图" class="headerlink" title="气泡图"></a>气泡图</h2><p>具有视觉吸引力，直观展示数据<br>拖至大小，标记类型改为圆<br>文字云<br>将标记由 圆 改为 文本<br>直观性可能更差一点</p><h2 id="圆视图"><a href="#圆视图" class="headerlink" title="圆视图"></a>圆视图</h2><p>气泡图的变形<br>通过给气泡图增加维度<br>依据度量的大小对其有序排列<br>发现每一类别中的异常点</p><h2 id="标靶图-子弹图"><a href="#标靶图-子弹图" class="headerlink" title="标靶图/子弹图"></a>标靶图/子弹图</h2><p>通过添加参考线和参考区间，直观的了解两度量间关系<br>制作好条形图<br>将计划值放到标记卡上<br>右键横轴-添加参考线<br>添加参考区间</p><h2 id="甘特图-横道图"><a href="#甘特图-横道图" class="headerlink" title="甘特图/横道图"></a>甘特图/横道图</h2><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><p>1.以图示的方式通过活动列表和时间刻度形象地表示出任何特定项目的活动顺序或项目的持续时间<br>2.可用来比较与日期相关的不同项目的持续时间长短<br>3.也常用于显示不同任务之间的依赖关系，普遍用于项目管理中</p><h3 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h3><p>横轴表示时间<br>纵轴表示项目<br>线条表示整个期间上该活动或项目的持续时间</p><h3 id="步骤-1"><a href="#步骤-1" class="headerlink" title="步骤"></a>步骤</h3><p>1.计算字段 延期天数<br><figure class="highlight prolog"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">datediff(<span class="string">'day'</span>,[计划交货日期],[实际交货日期]）</div></pre></td></tr></table></figure></p></blockquote><p>2.维度放置行功能区<br>3.计划交货日期拖至列功能区<br>4.将 延期天数 拖至 大小 标记卡<br>5.将 延期天数 拖至 颜色标记卡上，编辑2阶颜色</p><h1 id="地图分析"><a href="#地图分析" class="headerlink" title="地图分析"></a>地图分析</h1><h2 id="地图简介"><a href="#地图简介" class="headerlink" title="地图简介"></a>地图简介</h2><h3 id="地图类型"><a href="#地图类型" class="headerlink" title="地图类型"></a>地图类型</h3><p>符号地图<br>填充地图<br>多维度地图<br>混合地图等</p><h3 id="分配地理角色"><a href="#分配地理角色" class="headerlink" title="分配地理角色"></a>分配地理角色</h3><p>1.国家/地区<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">名称</div><div class="line">FIPS <span class="number">10</span></div><div class="line"><span class="number">2</span>字符（ISO <span class="number">3166</span><span class="number">-1</span>）</div><div class="line"><span class="number">3</span>字符（ISO <span class="number">3166</span><span class="number">-1</span>）</div></pre></td></tr></table></figure></p><p>2.省/市/自治区<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">名称</div><div class="line">拼音</div></pre></td></tr></table></figure></p><p>3.城市<br>人口超过一万<br>4.地理角色自动与经纬度关联</p><h3 id="创建符号地图"><a href="#创建符号地图" class="headerlink" title="创建符号地图"></a>创建符号地图</h3><h4 id="创建符号地图-1"><a href="#创建符号地图-1" class="headerlink" title="创建符号地图"></a>创建符号地图</h4><p>以地图为背景在对应地理位置上展示信息<br>方式一<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">双击省市字段</div><div class="line">菜单栏-地图-背景地图-tableau</div></pre></td></tr></table></figure></p><p>方式二<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">按住Ctrl，选中维度窗口的 省市，度量窗口的 当期值，单击智能显示-符号地图</div></pre></td></tr></table></figure></p><p>还可以将圆形改为饼图，把类别放在颜色标记卡上<br>查看地市级别信息:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">双击维度窗口的 地市</div><div class="line">拖动 地市 到详细信息标记卡</div></pre></td></tr></table></figure></p><h4 id="编辑地理位置"><a href="#编辑地理位置" class="headerlink" title="编辑地理位置"></a>编辑地理位置</h4><p>1.编辑地理库中不包含的地理位置信息<br>2.单击右下角的未知信息 3未知 -弹出 【省市】的特殊值-编辑位置<br>3.菜单栏-地图-编辑位置<br>4.对于无法识别的数据<br>可在匹配位置中选择一个匹配项<br>下拉列表-输入经纬度<br>5.导入自定义地理编码<br>6.先定义好上级地理角色，再设置下级地理角色</p><h4 id="设置地图格式"><a href="#设置地图格式" class="headerlink" title="设置地图格式"></a>设置地图格式</h4><p>地图-地图选项<br>1.后台<br>样式，不同的地图显示风格<br>2.地图层<br>基本<br>土地覆盖<br>国家名称等<br>3.数据层<br>美国人口普查等<br>4.说明<br>重复背景:可多次显示相同区域<br>设置为默认值:<br>将设置好的地图格式设置为默认值<br>在本tableau中创建的地图均采用本次设置</p><h3 id="创建填充地图"><a href="#创建填充地图" class="headerlink" title="创建填充地图"></a>创建填充地图</h3><p>1.生成符号地图后<br>拖放度量 当期值 到 颜色 标记卡<br>2.按住Ctrl，选中 省市、档期值<br>智能显示-填充地图<br>3.生成符号地图后<br>标记卡的图形选项中选择 已填充地图或智能显示<br>4.对于不能识别的位置,<br>参考多边形地图<br>5.只能识别到省市自治区，不能打城市一级</p><h3 id="创建多维度地图"><a href="#创建多维度地图" class="headerlink" title="创建多维度地图"></a>创建多维度地图</h3><p>对不同维度的信息用多个地图展示<br>分统计周期、分类别展示</p><h3 id="创建混合地图"><a href="#创建混合地图" class="headerlink" title="创建混合地图"></a>创建混合地图</h3><p>将符号地图与填充地图重叠</p><h2 id="设置地理信息"><a href="#设置地理信息" class="headerlink" title="设置地理信息"></a>设置地理信息</h2><h3 id="选择地图源"><a href="#选择地图源" class="headerlink" title="选择地图源"></a>选择地图源</h3><h4 id="联机地图"><a href="#联机地图" class="headerlink" title="联机地图"></a>联机地图</h4><p>Tableau联机地图源：OpenStreetMap<br>可将某地图源指定为Tableau默认地图源：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">选择地图源后 地图-背景地图-设置为默认值</div></pre></td></tr></table></figure></p><h4 id="地图存储和脱机工作"><a href="#地图存储和脱机工作" class="headerlink" title="地图存储和脱机工作"></a>地图存储和脱机工作</h4><p>地图缓存在IE的临时文件中<br>脱机使用的是缓存文件</p><h4 id="WSM服务器"><a href="#WSM服务器" class="headerlink" title="WSM服务器"></a>WSM服务器</h4><p>1.添加URL<br>地图源随工作簿一起保存<br>2.导出WMS服务器<br>另存为(.tms)文件，选择服务器-导出<br>3.导入地图源<br>地图-背景地图-WMS服务器（W）…-导入-打开</p><h3 id="自定义地理编码"><a href="#自定义地理编码" class="headerlink" title="自定义地理编码"></a>自定义地理编码</h3><h4 id="准备自定义地理编码文件"><a href="#准备自定义地理编码文件" class="headerlink" title="准备自定义地理编码文件"></a>准备自定义地理编码文件</h4><p>1.(.csv)<br>2.扩展现有角色，与标准数据结构保持一致。<br>3.添加新角色<br>导入文件包含现有分层结构中的每级地理角色<br>国家-省市自治区-城市-变电站-经度-纬度<br>4.添加分层结构<br>创建多个导入文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">每个文件表示新分层结构中的一个级别</div><div class="line">确保每个文件都包含当前级别和其上面的所有级别的列</div><div class="line">将每个导入文件保存到一个文件夹中，并使用文件所表示的级别来命名每个文件</div></pre></td></tr></table></figure></p><p>自定义地理分层文件<br>5.说明：经纬度必须是实数不能是整数——确保包含至少一位小数</p><h4 id="导入自定义地理编码文件"><a href="#导入自定义地理编码文件" class="headerlink" title="导入自定义地理编码文件"></a>导入自定义地理编码文件</h4><p>地图-地理编码-导入自定义地理编码-输入路径-导入</p><h4 id="管理自定义地理编码文件"><a href="#管理自定义地理编码文件" class="headerlink" title="管理自定义地理编码文件"></a>管理自定义地理编码文件</h4><p>1.刷新<br>地图-地理编码-刷新打包的地理编码（s）<br>2.打包<br>打包工作簿时，自定义地理编码数据会一起打包<br>3.移除<br>地图-地理编码-移除自定义地理编码</p><h2 id="高级功能"><a href="#高级功能" class="headerlink" title="高级功能"></a>高级功能</h2><h3 id="多边形地图"><a href="#多边形地图" class="headerlink" title="多边形地图"></a>多边形地图</h3><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><p>对填充地图的一种补充</p><h4 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h4><p>1.准备地理信息数据文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">区域边界个点的经纬度</div><div class="line">绘制顺序</div></pre></td></tr></table></figure></p><p>2.创建视图<br><figure class="highlight makefile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">双击经纬度，调出地图页面</div><div class="line"><span class="section">双击经纬度，调出地图页面:修改图形展示为 多边形</span></div><div class="line">拖放 顺序 到 路径 标记卡</div><div class="line">如果要关联数据，则应在开始建立关联，设置好地图后，拖放 度量当期值 到 颜色 标记卡 调整工具提示等设置</div></pre></td></tr></table></figure></p><h3 id="背景图像地图"><a href="#背景图像地图" class="headerlink" title="背景图像地图"></a>背景图像地图</h3><h4 id="导入背景图像"><a href="#导入背景图像" class="headerlink" title="导入背景图像"></a>导入背景图像</h4><p>1.查看要添加的图片的详细信息<br>宽度、高度<br>2.在源数据中新增两个字段-X、Y，并新增一行数据<br>X为图片宽度<br>Y为图片高度<br>3.将数据导入tableau-采用 实时 的联接方式<br>4.地图-背景图像-选择数据源-添加图像-浏览/键入URL-将X、Y字段映射到X、Y轴-设定最大值-建立坐标系-确定<br>5.将X、Y字段拖放到行列功能区<br>6.编辑<br>地图-背景图像-编辑<br>7.说明<br>支持多个背景图像,图像集<br>针对一组工作表使用一个图像集:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">背景图像对话框</div><div class="line">复选框</div><div class="line">启用/禁用</div></pre></td></tr></table></figure></p><h4 id="准备展示数据"><a href="#准备展示数据" class="headerlink" title="准备展示数据"></a>准备展示数据</h4><p>1.定位信息点坐标<br>选中某点-右键-添加注释-方式为 点 -确定<br>可拖动<br>2.根据坐标信息，在源数据中为每个供电所添加坐标信息X、Y</p><h4 id="构建视图"><a href="#构建视图" class="headerlink" title="构建视图"></a>构建视图</h4><p>1.准备好数据后，刷新数据<br>2.拖动 供电所 字段 到 详细信息 标记卡<br>按照常规穿件符号地图的方式创建地图</p><h3 id="地理位置距离计算"><a href="#地理位置距离计算" class="headerlink" title="地理位置距离计算"></a>地理位置距离计算</h3><p>1.修改源数据，使位置两两对应<br>例：三个变电站<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">复制变电站数据使每个变电站存在两行数据</div><div class="line">添加<span class="number">3</span>列数据-表<span class="number">1</span>变电站、表<span class="number">1</span>Lon、表<span class="number">1</span>Lat。要对应的变电站名称、经纬度</div></pre></td></tr></table></figure></p><p>2.导入源数据，创建计算字段-距离计算<br>公式<br><figure class="highlight excel"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="number">3959</span>*<span class="built_in">ACOS</span>(</div><div class="line"><span class="built_in">SIN</span>(<span class="built_in">RADIANS</span>([Latitude]))*<span class="built_in">SIN</span>(<span class="built_in">RADIANS</span>([表<span class="number">1</span>Lat])+<span class="built_in">cos</span>(<span class="built_in">RADIANS</span>([Latitude]))*<span class="built_in">cos</span>(<span class="built_in">RADIANS</span>([表<span class="number">1</span>Lat]))*<span class="built_in">cos</span>(<span class="built_in">RADIANS</span>([表<span class="number">1</span>Lon])-<span class="built_in">RADIANS</span>([Latitude]))</div><div class="line">)</div></pre></td></tr></table></figure></p><p>3.将 距离计算 拖到 颜色/大小 标记卡<br>右键标记卡中 距离计算 字段-选择维度<br>4.调整 颜色、大小 标记卡和标签设置</p><h1 id="高级数据操作"><a href="#高级数据操作" class="headerlink" title="高级数据操作"></a>高级数据操作</h1><h2 id="分层结构"><a href="#分层结构" class="headerlink" title="分层结构"></a>分层结构</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>默认内置的分层结构<br>多维数据源本身包含维度的分层结构<br>关系数据源需自定义分层结构<br>导航分层结构<br><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">上钻(drill <span class="meta">up</span>/roll <span class="meta">up</span>)</div><div class="line">下钻(drill <span class="meta">down</span>)</div></pre></td></tr></table></figure></p><h3 id="创建分层结构"><a href="#创建分层结构" class="headerlink" title="创建分层结构"></a>创建分层结构</h3><p>方式1：通过拖动方式创建名为 组织 的分层结构<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">将 部 放在 组 上-弹出窗口-键入名称 组织-确定</div><div class="line">字段的放置顺序会影响上下级关系</div><div class="line">当待分层字段出现在文件夹内部时，不能通过拖放创建分层结构</div></pre></td></tr></table></figure></p><p>方式2：通过右键菜单创建名为 组织 的分层结构<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">选中右键-创建分层结构</div></pre></td></tr></table></figure></p><h3 id="使用分层结构"><a href="#使用分层结构" class="headerlink" title="使用分层结构"></a>使用分层结构</h3><p>1.使用行列功能区字段进行钻取<br>加减号<br>2.使用视图中的标题进行钻取<br>右键单击视图标题<br>上钻下钻<br>鼠标在视图标题上悬停</p><h2 id="组"><a href="#组" class="headerlink" title="组"></a>组</h2><h3 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h3><p>1.组是维度成员或者度量的离散值的组合<br>2.分组可实现对维度成员的重新组合，以及度量值的按范围分类<br>3.组字段的图标为 别针<br>4.组不能用于计算,组不能出现在公式中<br>5.例如：13班与13班（15批新人）这两类其实都是13班，因此需要合并</p><h3 id="创建组"><a href="#创建组" class="headerlink" title="创建组"></a>创建组</h3><p>1.直接在视图中选择维度成员创建组<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Ctrl单击选中维度成员</div><div class="line">在选中区域悬停选择 别针 创建新组/或者右键单击组</div><div class="line">取消：选择成员-菜单栏-取消分组</div></pre></td></tr></table></figure></p><p>2.通过右键菜单创建分组<br>关键字查找<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">包含</div><div class="line">开头为</div><div class="line">精确匹配</div></pre></td></tr></table></figure></p><h3 id="使用组"><a href="#使用组" class="headerlink" title="使用组"></a>使用组</h3><p>1.展示所有成员<br>默认<br>2.仅展示定义好的组成员<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">单击列功能区 班（组） 的下拉菜单</div><div class="line">选择 包括其他 选项——这样即把未定义分组的成员默认分组为 其他</div><div class="line">也可在维度窗口右键编辑组，勾选 包括其他</div></pre></td></tr></table></figure></p><h2 id="集"><a href="#集" class="headerlink" title="集"></a>集</h2><h3 id="概述-2"><a href="#概述-2" class="headerlink" title="概述"></a>概述</h3><p>集是根据某些条件定义数据子集的自定义字段，可以理解为维度的部分成员<br>集能够用于计算，参与计算字段的编辑</p><h4 id="集的分类"><a href="#集的分类" class="headerlink" title="集的分类"></a>集的分类</h4><p>1.常量集<br>静态集<br>不随数据动态变化<br>单个或多个维度<br>视图中直接选择对象创建集<br>2.计算集<br>动态集<br>跟随数据动态变化<br>单个维度<br>数据窗口右键单击维度创建集</p><h4 id="集的作用"><a href="#集的作用" class="headerlink" title="集的作用"></a>集的作用</h4><p>1.选取维度部分成员，主要用于筛选<br>2.主要有两个用处<br>集内外成员的对比分析:<br><figure class="highlight ada"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">集的一对特性内/外(<span class="keyword">in</span>/<span class="keyword">out</span>)</div><div class="line">可直接对集内/集外成员进行聚合对比分析</div></pre></td></tr></table></figure></p><p>集内成员的对比分析:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">当重点为对集内成员记性分析时,选择 在集内显示成员 </div><div class="line">此时集的作用就是筛选器</div></pre></td></tr></table></figure></p><h3 id="创建集"><a href="#创建集" class="headerlink" title="创建集"></a>创建集</h3><h4 id="创建常量集"><a href="#创建常量集" class="headerlink" title="创建常量集"></a>创建常量集</h4><p>1.创建基本视图后<br>2.选取要建集的成员，悬停右键创建集<br>3.例如：接听质量 由高到低的前10名员工,排序，选择创建</p><h4 id="创建计算集"><a href="#创建计算集" class="headerlink" title="创建计算集"></a>创建计算集</h4><p>1.梳理计算原理<br>2.右键 维度窗口 中要建集的字段-创建集-按需求设置<br>3.例如：出勤天数由高到低的前1000名员工<br>出勤次数就是总行数，右键工号创建集，选择按字段-顶部-1000-工号-计数</p><h4 id="创建合并集"><a href="#创建合并集" class="headerlink" title="创建合并集"></a>创建合并集</h4><p>1.集的合并要遵循相同维度<br>比如例子中的两个集都是以员工为维度进行筛选<br>2.集的合并三种方式<br>并集<br>交集<br>差集<br>例如：出勤天数1000名且平均接听质量前10的员工<br>数据窗口选择两个集-右键菜单创建合并集-选择交集</p><h3 id="使用集"><a href="#使用集" class="headerlink" title="使用集"></a>使用集</h3><p>1.集内外成员对比分析<br>2.各组内 勤劳员工 占比对比分析集内成员对比分析</p><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><h3 id="概述-3"><a href="#概述-3" class="headerlink" title="概述"></a>概述</h3><p>1.参数是一种可用于交互的动态值<br>2.数据窗口底部显示参数，图标为 #<br>3.包括<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">集</div><div class="line">计算字段</div><div class="line">参考线及参考区间</div><div class="line">自定义SQL</div></pre></td></tr></table></figure></p><p>4.属于全局对象<br>可在任何表中单独使用<br>也可应用于多个工作表视图<br>筛选器</p><h3 id="创建参数"><a href="#创建参数" class="headerlink" title="创建参数"></a>创建参数</h3><h4 id="直接在数据窗口创建"><a href="#直接在数据窗口创建" class="headerlink" title="直接在数据窗口创建"></a>直接在数据窗口创建</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">右键单击作为参数基础的字段 服务评价满意率 -创建-参数</div></pre></td></tr></table></figure><h4 id="设置"><a href="#设置" class="headerlink" title="设置:"></a>设置:</h4><h5 id="参数名称"><a href="#参数名称" class="headerlink" title="参数名称"></a>参数名称</h5><h5 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h5><h5 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h5><p>1.数据类型<br>2.当前值:默认值<br>3.显示格式<br>4.允许的值:<br>全部：表示参数可以调整为任意值<br>列表：表示参数设置为列表内的值<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">手动输入</div><div class="line">从字段添加</div><div class="line">从剪贴板粘贴</div></pre></td></tr></table></figure></p><p>5.范围<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">最小值</div><div class="line">最大值</div><div class="line">步长</div><div class="line">从参数设置</div><div class="line">从字段设置</div></pre></td></tr></table></figure></p><p>6.一般<br>作为参数基础的字段是维度时，允许的值表现为列表<br>作为参数基础的字段是度量时，允许的值表现为范围</p><h4 id="在使用计算集、计算字段、参考线及其他功能时创建"><a href="#在使用计算集、计算字段、参考线及其他功能时创建" class="headerlink" title="在使用计算集、计算字段、参考线及其他功能时创建"></a>在使用计算集、计算字段、参考线及其他功能时创建</h4><p>1.右键单击 出勤天数降序排名前1000名员工 计算集<br>2.在编辑集窗口修改集名为 出勤天数降序排名前N名员工<br>3.在顶部输入数值位置下拉菜单中-选择 创建参数<br>4.在编辑参数窗口中，允许的值选择为 范围 -设置为1~3000-步长为1-确定</p><h3 id="使用参数"><a href="#使用参数" class="headerlink" title="使用参数"></a>使用参数</h3><p>1.数据窗口右击参数 出勤天数降序TopN员工阈值-选择 显示参数控件<br>2.将集 出勤天数降序排名前N名员工 拖入筛选器<br>3.调整参数值，可动态观察不同排名的员工数量在南北中心的分布</p><h2 id="计算字段"><a href="#计算字段" class="headerlink" title="计算字段"></a>计算字段</h2><h3 id="概述-4"><a href="#概述-4" class="headerlink" title="概述"></a>概述</h3><p>使用函数和运算符构造公式来定义的字段</p><h3 id="创建计算字段"><a href="#创建计算字段" class="headerlink" title="创建计算字段"></a>创建计算字段</h3><h4 id="直接在数据窗口创建-1"><a href="#直接在数据窗口创建-1" class="headerlink" title="直接在数据窗口创建"></a>直接在数据窗口创建</h4><p>1.创建简单计算字段<br><figure class="highlight 1c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">输入公式-应用</div><div class="line">使用<span class="comment">//注释</span></div></pre></td></tr></table></figure></p><p>2.运用逻辑函数与参数创建<br><figure class="highlight ada"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span>-<span class="keyword">then</span>-<span class="keyword">else</span>-<span class="keyword">end</span></div></pre></td></tr></table></figure></p><h4 id="在使用计算集、计算字段、参考线及其他时创建"><a href="#在使用计算集、计算字段、参考线及其他时创建" class="headerlink" title="在使用计算集、计算字段、参考线及其他时创建"></a>在使用计算集、计算字段、参考线及其他时创建</h4><h4 id="可在行列功能区直接输入计算公式"><a href="#可在行列功能区直接输入计算公式" class="headerlink" title="可在行列功能区直接输入计算公式"></a>可在行列功能区直接输入计算公式</h4><h3 id="使用计算字段"><a href="#使用计算字段" class="headerlink" title="使用计算字段"></a>使用计算字段</h3><p>例如<br>1.将 服务评价满意率 及 人工服务接听量 分别拖至行列功能区，标记类型为圆<br>2.由于默认是聚合状态，而此处要分析的是每人每天的业务情况，即每条业务的分布，所以取消菜单栏 分析 中的 聚合度量 选项，进行解聚<br>3.将 服务评价满意率分类 拖到颜色，并显示参数控件 服务评价满意率阈值<br>4.可以调整阈值来观察每个员工每天的 人工服务接听量 与 服务评价满意率 之间的关系和变化</p><h3 id="特殊函数：表计算"><a href="#特殊函数：表计算" class="headerlink" title="特殊函数：表计算"></a>特殊函数：表计算</h3><h4 id="概述-5"><a href="#概述-5" class="headerlink" title="概述"></a>概述</h4><ul><li>表计算是针对数据库中多行数据进行计算的方式</li><li>三角标记</li><li>表计算函数针对度量使用 分区 和 寻址 进行计算——依赖表结构本身</li><li>表计算函数需要明确计算对象和计算类型</li><li>必须使用聚合数据<h4 id="快速表计算"><a href="#快速表计算" class="headerlink" title="快速表计算"></a>快速表计算</h4>1.总计<br>2.差异<br>默认表计算的逻辑<br>沿着 表（横穿） 相对于 上一个 顺次计算差值<h4 id="寻址和分区"><a href="#寻址和分区" class="headerlink" title="寻址和分区"></a>寻址和分区</h4>1.寻址<br>对计算字段定义的维度字段，确定用于表计算的对象<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">按照不同对象</div><div class="line">上移、下移</div><div class="line">相对于表结构</div><div class="line">相对于特定字段</div></pre></td></tr></table></figure></li></ul><p>2.分区<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">对计算对象进行分组的维度字段，确定计算时的分组方式</div><div class="line">排序是确定各个分区的计算对象的计算顺序</div></pre></td></tr></table></figure></p><h4 id="计算依据设置"><a href="#计算依据设置" class="headerlink" title="计算依据设置"></a>计算依据设置</h4><h5 id="表（横穿）及表（向下）"><a href="#表（横穿）及表（向下）" class="headerlink" title="表（横穿）及表（向下）"></a>表（横穿）及表（向下）</h5><p>1.横穿<br>对每个分区沿水平方向进行特定计算<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">将寻址设置为计算整个表</div><div class="line">并沿水平方向移动计算每个分区</div></pre></td></tr></table></figure></p><p>2.向下<br>对每个分区沿垂直方向进行特定计算</p><h5 id="表（横穿，然后向下）及表（向下，然后横穿）"><a href="#表（横穿，然后向下）及表（向下，然后横穿）" class="headerlink" title="表（横穿，然后向下）及表（向下，然后横穿）"></a>表（横穿，然后向下）及表（向下，然后横穿）</h5><p>1.横穿，然后向下<br>将寻址设置为先横向后竖向计算整个表<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">横向竖向均为寻址字段</div><div class="line">无分区字段</div><div class="line">详见书</div></pre></td></tr></table></figure></p><p>2.向下，然后横穿</p><h5 id="区（向下）"><a href="#区（向下）" class="headerlink" title="区（向下）"></a>区（向下）</h5><p>对表中区向下进行计算<br>以差异计算为例</p><h5 id="其它计算方式"><a href="#其它计算方式" class="headerlink" title="其它计算方式"></a>其它计算方式</h5><p>1.单元格<br>所有的字段都是分区字段<br>计算总额百分比<br>2.单个字段<br>特定字段——绝对控制计算方式<br>对单个字段寻址意味着如果重新排列，计算不再与表结构匹配</p><h4 id="自定义表计算"><a href="#自定义表计算" class="headerlink" title="自定义表计算"></a>自定义表计算</h4><p>创建计算字段时使用表计算函数进行编辑<br>例如——创建参数 N日移动平均<br>1.数据类型为 整数<br>2.允许的值为 范围<br>最大值31，最小值1，步长为1<br>3.创建计算字段 移动平均<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">WINDOW_AVG(<span class="name">SUM</span>([人工服务接听量]),-[N日移动平均],<span class="number">0</span>)</div></pre></td></tr></table></figure></p><p>4.单击 默认表计算 设置<br>5.拖放 日期 和 人工服务接听量，生成双线图</p><h3 id="特殊函数：详细级别表达式"><a href="#特殊函数：详细级别表达式" class="headerlink" title="特殊函数：详细级别表达式"></a>特殊函数：详细级别表达式</h3><h4 id="include"><a href="#include" class="headerlink" title="include"></a>include</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">include</span> <span class="selector-attr">[员工]</span> <span class="selector-pseudo">:sum</span><span class="selector-attr">[人工服务接听量]</span></div></pre></td></tr></table></figure><p>将视图中没有的维度纳入视图<br>用于创建明细度高于可视化展示内容的计算字段</p><h4 id="exclude"><a href="#exclude" class="headerlink" title="exclude"></a>exclude</h4><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">exclude <span class="string">[中心]</span> sum<span class="string">[人工服务接听量]</span></div></pre></td></tr></table></figure><p>把视图中已有的 中心 维度排除<br>用于创建明晰化低于可视化展示内容的计算字段</p><h4 id="fixed"><a href="#fixed" class="headerlink" title="fixed"></a>fixed</h4><p>不受可视化明细度限制<br>用于创建指定明细程度的计算字段</p><h4 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h4><p>1.表计算<br>表计算完全由查询结果生成<br>以生成度量为结果<br>2.详细级别表达式<br>通常是作为针对基础数据源查询的一部分生成<br>能创建度量、聚合度量或维度</p><h3 id="特殊函数：百分比"><a href="#特殊函数：百分比" class="headerlink" title="特殊函数：百分比"></a>特殊函数：百分比</h3><p>1.计算百分比<br>默认分母的数据范围是整个表<br>自定义设置:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">分析-百分比</div></pre></td></tr></table></figure></p><p>2.百分比与聚合<br>容易忽略,百分比是基于度量的聚合值计算的。</p><h2 id="变换"><a href="#变换" class="headerlink" title="变换"></a>变换</h2><h3 id="变换日期型字段"><a href="#变换日期型字段" class="headerlink" title="变换日期型字段"></a>变换日期型字段</h3><p>右键单击维度窗口中 日期 字段-变化-创建自定义日期</p><h3 id="变换字符型字段"><a href="#变换字符型字段" class="headerlink" title="变换字符型字段"></a>变换字符型字段</h3><p>拆分:<br>右键字段-变化-拆分<br>自定义拆分</p><h2 id="参考线及参考区间"><a href="#参考线及参考区间" class="headerlink" title="参考线及参考区间"></a>参考线及参考区间</h2><p>参考线（Reference Line）<br>参考区间（Reference Band)<br>分布区间（Distribution Band)<br>盒须图（Box Plot)</p><h1 id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续"></a>未完待续</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;tableau应用实战之人人都是数据分析师&lt;/p&gt;
&lt;h1 id=&quot;tableau入门&quot;&gt;&lt;a href=&quot;#tableau入门&quot; class=&quot;headerlink&quot; title=&quot;tableau入门&quot;&gt;&lt;/a&gt;tableau入门&lt;/h1&gt;&lt;h2 id=&quot;敏捷商务智能&quot;&gt;
      
    
    </summary>
    
      <category term="tableau" scheme="https://chumingke.github.io/categories/tableau/"/>
    
    
      <category term="tableau" scheme="https://chumingke.github.io/tags/tableau/"/>
    
      <category term="visualization" scheme="https://chumingke.github.io/tags/visualization/"/>
    
  </entry>
  
  <entry>
    <title>关于数据分析的一些书籍推荐</title>
    <link href="https://chumingke.github.io//blog/2017/10/Book-related.html"/>
    <id>https://chumingke.github.io//blog/2017/10/Book-related.html</id>
    <published>2017-10-09T06:07:02.000Z</published>
    <updated>2017-10-09T06:08:03.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="tableau"><a href="#tableau" class="headerlink" title="tableau"></a>tableau</h1><p>《人人都是数据分析师tableau应用实战》</p><h1 id="统计学"><a href="#统计学" class="headerlink" title="统计学"></a>统计学</h1><p>《商务经济统计学》<br>《概率论与数理统计》<br>《统计思维》<br>《统计学习方法》</p><h1 id="数据挖掘"><a href="#数据挖掘" class="headerlink" title="数据挖掘"></a>数据挖掘</h1><p>《数据挖掘导论》<br>《算法导论》<br>《数据挖掘》<br>《web数据挖掘》</p><h1 id="数据分析"><a href="#数据分析" class="headerlink" title="数据分析"></a>数据分析</h1><p>《深入浅出数据分析》<br>《数据分析：企业的贤内助》<br>《网站分析》<br>《实用数据分析》</p><h1 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h1><p>《深入浅出SQL》<br>《hadoop实战》<br>《学习数据库Mysql》</p><h1 id="语言"><a href="#语言" class="headerlink" title="语言"></a>语言</h1><p>《利用python进行数据分析》<br>《python学习手册》<br>《python科学计算》<br>《集体智慧编程》<br>《推荐系统实践》<br>《机器学习系统设计》<br>《R语言实战》<br>《机器学习：使用案例分析》<br>《python自然语言处理》</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;tableau&quot;&gt;&lt;a href=&quot;#tableau&quot; class=&quot;headerlink&quot; title=&quot;tableau&quot;&gt;&lt;/a&gt;tableau&lt;/h1&gt;&lt;p&gt;《人人都是数据分析师tableau应用实战》&lt;/p&gt;
&lt;h1 id=&quot;统计学&quot;&gt;&lt;a href=&quot;#
      
    
    </summary>
    
      <category term="Data analysis" scheme="https://chumingke.github.io/categories/Data-analysis/"/>
    
    
      <category term="Data analysis" scheme="https://chumingke.github.io/tags/Data-analysis/"/>
    
  </entry>
  
  <entry>
    <title>关于传统企业数据规划的看法</title>
    <link href="https://chumingke.github.io//blog/2017/10/Data-planning-related.html"/>
    <id>https://chumingke.github.io//blog/2017/10/Data-planning-related.html</id>
    <published>2017-10-09T06:02:00.000Z</published>
    <updated>2017-10-09T06:05:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>其实这是个很大的话题。也很难一时说清，这里我记录一下自己的看法。估计可能会有很多不对的地方，权当为以后做一些参考。</p><h1 id="传统企业的特点"><a href="#传统企业的特点" class="headerlink" title="传统企业的特点"></a>传统企业的特点</h1><p>1.组织机构庞大复杂。<br>组织复杂如果能运行良好，其实也可以。不过一般来讲，组织一旦复杂。公司运行就会受到阻碍。而且组织一旦复杂，牵一发而动全身。当我们需要更新某些部分的时候，从技术角度讲很难下手，从个人利益角度讲也是，公司的利益关系网也是复杂。</p><p>2.业务周期长<br>打个比方，我是生产运营处的一个数据分析课中的业务人员，然后程序后台很多东西都在咨询部门那边，所以每次有需求我要跟他们提。然后又是一个很长周期，等这个需求搞定了我们发现业务人员的需求已经换了。</p><p>3.业务差距大，理解沟通困难<br>很多时候其他部门也不能很好理解我们的需求。因为业务范围的不同。所以往往两边都懂的人沟通起来会比较顺畅。</p><p>4.人浮于事，推卸责任<br>在上面的情况下，就有可能出现人浮于事，推卸责任的现象。<br>有可能一开始大家的心态都是好的，都想好好完成这个事情。但是发现成本太高了。真的要好好解决要投入大量的精力，而且这个精力的投入可能是纯粹浪费在沟通或者其他不必要的事情上。有句话讲得好，不做不错，多做多错。</p><p>5.企业文化落后<br>传统企业，尤其是几十年的企业，企业文化中往往流动的都是传统的血液。其实这种文化在当初是很好用的。但是到了现在只能说有利有弊。比如过分尊重领导，思想陈旧，做事方法陈旧。优点有增强凝聚力，增强领导能力等等。</p><p>6.领导思维落后<br>这个在我看来是最大的弊端了。这几年数据分析很多，所以很多公司都想搞一搞。但是很多领导其实不懂数据分析是什么。下的决策往往缘木求鱼的效果。</p><h1 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h1><p>比如一个制造业公司。做快消品几十年。大领导听说数据分析对公司有好处，就想搞这块。然后让小领导去办这个事。然后小领导带着业务人员就开始做。<br>这里面有几个问题。</p><p>1.公司以前一点这方面基础没有。管理方面用类似SAP之类的系统。我们知道这个系统的数据模块主要是使用BW取数来推出报表的。BW就是我们说的传统BI，周期长，效果差，反应迟钝。然后最近流行一个HANA。</p><p>2.数据方面，业务部门的数据，是首先由业务部门制定指标，然后咨询部门设计系统。然后由工厂端输入数据。</p><p>这里面就有不少问题。<br>一是，业务部门制定的指标经常会变，因为本身业务也比较复杂，一开始如果没有考虑好，后期就要修改。那如果指标都一年一变的话，对应的数据就没有什么比较的意义。<br>二是，这个过程涉及到几个部门，由于之前说的沟通不畅，很容易出现很多问题。比如说系统突然出现错误，然后肯定是业务人员发现的，然后通知咨询，咨询开始调试。然后这就是个时间周期，这个周期里面的数据准确怎么保证呢？还有调试的结果也不一定准确，因为不同部门理解不同。</p><p>3.业务人员的技术能力问题。这里面所有的人都不懂大数据是什么。因为大数据是有一定门槛的。并不是说说就能懂的。你要用到的东西，远一点的比如机器学习，算法，近一点的python，数据库。都是有一定门槛的。我们的业务人员之前也就用过excel，其他的都不懂。那做个。。。</p><p>因为小领导也不懂，但是大领导布置了任务。只能硬着头皮做，所以就让业务人员去做，业务人员能怎么办呢。也是用传统的方法硬着头皮去做呗。<br>领导希望有一个可以随时取数的数据库，但是我们的数据都是在SAP里的，我们是通过BW取数的。小领导不清楚其他数据库是怎么搞的，只能按照传统思路，也就是硬着头皮写逻辑，就是想用BW做一个数据库表。要我说这连菜刀砍大树都算不上，简直是铅笔刀砍大树。还砍不断！<br>还有等等类似事情，最终会导致，大家敷衍了事，领导的任务无限延期。</p><h1 id="数据分析规划架构"><a href="#数据分析规划架构" class="headerlink" title="数据分析规划架构"></a>数据分析规划架构</h1><p>这是我之前做的小计划。</p><h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>有一个可以随时提取数据进行数据分析的数据仓库<br>有一套完整的数据分析方案</p><h2 id="总体构架"><a href="#总体构架" class="headerlink" title="总体构架"></a>总体构架</h2><h3 id="后台存储"><a href="#后台存储" class="headerlink" title="后台存储"></a>后台存储</h3><p>数据库包括：</p><p>1.SAP<br>SAP BW BO</p><p>2.mysql<br>兼容性：都可以<br>特征：底层数据库</p><p>3.excel</p><p>4.access</p><h3 id="建模分析"><a href="#建模分析" class="headerlink" title="建模分析"></a>建模分析</h3><h4 id="简单建模"><a href="#简单建模" class="headerlink" title="简单建模"></a>简单建模</h4><h5 id="tableau"><a href="#tableau" class="headerlink" title="tableau"></a>tableau</h5><h5 id="excel"><a href="#excel" class="headerlink" title="excel"></a>excel</h5><p>1.描述分析<br>2.图表<br>3.关系分析<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">相关分析</div><div class="line">关联分析</div><div class="line">单因素方差分析</div><div class="line">双因素方差分析</div><div class="line">单变量求解</div><div class="line">规划求解</div><div class="line">线性回归</div></pre></td></tr></table></figure></p><p>4.分类器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">聚类分析</div><div class="line">异常值分析</div></pre></td></tr></table></figure></p><h5 id="power-bi"><a href="#power-bi" class="headerlink" title="power bi"></a>power bi</h5><h4 id="复杂建模"><a href="#复杂建模" class="headerlink" title="复杂建模"></a>复杂建模</h4><h5 id="python"><a href="#python" class="headerlink" title="python"></a>python</h5><h5 id="R"><a href="#R" class="headerlink" title="R"></a>R</h5><h5 id="sas"><a href="#sas" class="headerlink" title="sas"></a>sas</h5><h5 id="spss"><a href="#spss" class="headerlink" title="spss"></a>spss</h5><p>1.描述分析<br>2.关系分析<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">关联分析</div><div class="line">对应分析</div><div class="line">因子分析</div></pre></td></tr></table></figure></p><p>3.回归分析<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">线性回归</div><div class="line">逻辑回归</div></pre></td></tr></table></figure></p><p>4.分类算法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">决策树算法</div><div class="line">聚类分析</div><div class="line">时间序列分析</div></pre></td></tr></table></figure></p><p>5.模型<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">自动建模</div><div class="line">RFM模型</div><div class="line">信用模型</div></pre></td></tr></table></figure></p><h3 id="展示（可视化）"><a href="#展示（可视化）" class="headerlink" title="展示（可视化）"></a>展示（可视化）</h3><p>tableau<br>d3.js<br>echarts<br>python<br>其他（excel，power bi）</p><h3 id="核心原理"><a href="#核心原理" class="headerlink" title="核心原理"></a>核心原理</h3><h4 id="数据分析方法论"><a href="#数据分析方法论" class="headerlink" title="数据分析方法论"></a>数据分析方法论</h4><p>见另一篇方法论。</p><h4 id="统计学原理"><a href="#统计学原理" class="headerlink" title="统计学原理"></a>统计学原理</h4><h4 id="配色原理"><a href="#配色原理" class="headerlink" title="配色原理"></a>配色原理</h4><p>常见的配色方案<br>参考公司配色</p><h3 id="工具介绍"><a href="#工具介绍" class="headerlink" title="工具介绍"></a>工具介绍</h3><h4 id="power-bi-1"><a href="#power-bi-1" class="headerlink" title="power bi"></a>power bi</h4><p>1.作用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">可视化</div><div class="line">powerbi 标准解决方案:预设分析模型</div><div class="line">powerbi绿色开发平台</div></pre></td></tr></table></figure></p><p>2.兼容性<br>仅win可用<br>3.工具<br>power系列:<br><figure class="highlight maxima"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">pivot：数据的读取、关联</div><div class="line"><span class="built_in">map</span>：地图</div><div class="line"><span class="built_in">view</span>：透视表</div><div class="line">powerbi：web，desktop</div></pre></td></tr></table></figure></p><p>4.费用<br>基本免费<br>部分功能收费，费用较低<br>5.优缺点<br>优点：便宜，方案齐全<br>缺点：可视化图形难看，只可用于WIN</p><h4 id="excel-1"><a href="#excel-1" class="headerlink" title="excel"></a>excel</h4><h4 id="spss-1"><a href="#spss-1" class="headerlink" title="spss"></a>spss</h4><h4 id="tableau-1"><a href="#tableau-1" class="headerlink" title="tableau"></a>tableau</h4><h4 id="echarts"><a href="#echarts" class="headerlink" title="echarts"></a>echarts</h4><h4 id="python-1"><a href="#python-1" class="headerlink" title="python"></a>python</h4><h3 id="知识体系"><a href="#知识体系" class="headerlink" title="知识体系"></a>知识体系</h3><p>书籍</p><h4 id="tableau-2"><a href="#tableau-2" class="headerlink" title="tableau"></a>tableau</h4><p>《人人都是数据分析师tableau应用实战》</p><h4 id="统计学"><a href="#统计学" class="headerlink" title="统计学"></a>统计学</h4><p>《商务经济统计学》<br>《概率论与数理统计》<br>《统计思维》<br>《统计学习方法》</p><h4 id="数据挖掘"><a href="#数据挖掘" class="headerlink" title="数据挖掘"></a>数据挖掘</h4><p>《数据挖掘导论》<br>《算法导论》<br>《数据挖掘》<br>《web数据挖掘》</p><h4 id="数据分析"><a href="#数据分析" class="headerlink" title="数据分析"></a>数据分析</h4><p>《深入浅出数据分析》<br>《数据分析：企业的贤内助》<br>《网站分析》<br>《实用数据分析》</p><h4 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h4><p>《深入浅出SQL》<br>《hadoop实战》<br>《学习数据库Mysql》</p><h4 id="语言"><a href="#语言" class="headerlink" title="语言"></a>语言</h4><p>《利用python进行数据分析》<br>《python学习手册》<br>《python科学计算》<br>《集体智慧编程》<br>《推荐系统实践》<br>《机器学习系统设计》<br>《R语言实战》<br>《机器学习：使用案例分析》<br>《python自然语言处理》</p><h2 id="方案指导思想"><a href="#方案指导思想" class="headerlink" title="方案指导思想"></a>方案指导思想</h2><p>从单个问题出发,最小可行性产品，结合不同处理方式，找到最优解，以有实际结果为导向。<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="number">1.</span>从excel到excel到tableau到分析报告PPT</div><div class="line"><span class="number">10</span>万行，简单分析</div><div class="line"><span class="number">2.</span>从access到excel</div><div class="line"><span class="number">100</span>M，简单分析</div><div class="line"><span class="number">3.</span>从access到spss</div><div class="line"><span class="number">100</span>M，复杂分析</div><div class="line"><span class="number">4.</span>从access到power bi/从access到spss modeler</div><div class="line">百万级别，复杂分析</div><div class="line"><span class="number">5.</span>从excel到tableau到Python及ppt</div></pre></td></tr></table></figure></p><h2 id="需要做的事"><a href="#需要做的事" class="headerlink" title="需要做的事"></a>需要做的事</h2><h3 id="数据准备"><a href="#数据准备" class="headerlink" title="数据准备"></a>数据准备</h3><p>数据梳理</p><h4 id="业务模型梳理"><a href="#业务模型梳理" class="headerlink" title="业务模型梳理"></a>业务模型梳理</h4><p>1.基础数据<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">字段名</div><div class="line">字段类型</div></pre></td></tr></table></figure></p><p>2.指标数据<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">字段名</div><div class="line">字段类型</div><div class="line">公式</div><div class="line">逻辑关系</div><div class="line">代表什么</div></pre></td></tr></table></figure></p><p>3.数据结构建立</p><h4 id="非业务模型数据梳理"><a href="#非业务模型数据梳理" class="headerlink" title="非业务模型数据梳理"></a>非业务模型数据梳理</h4><h3 id="图表准备"><a href="#图表准备" class="headerlink" title="图表准备"></a>图表准备</h3><p>按作用分类</p><h3 id="数据分析方法论准备"><a href="#数据分析方法论准备" class="headerlink" title="数据分析方法论准备"></a>数据分析方法论准备</h3><h3 id="描述统计模型准备"><a href="#描述统计模型准备" class="headerlink" title="描述统计模型准备"></a>描述统计模型准备</h3><h4 id="常态模型"><a href="#常态模型" class="headerlink" title="常态模型"></a>常态模型</h4><p>已有模型优化<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">日报</div><div class="line">月报</div><div class="line">KAI</div><div class="line">运营成本</div></pre></td></tr></table></figure></p><p>开发新模型</p><h4 id="非常态模型"><a href="#非常态模型" class="headerlink" title="非常态模型"></a>非常态模型</h4><p>汇报<br>年度总结<br>专案研究</p><h4 id="方法论及方法"><a href="#方法论及方法" class="headerlink" title="方法论及方法"></a>方法论及方法</h4><p>方法论:描述统计原理的应用<br>方法:总体分析,对比分析</p><h4 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h4><h5 id="描述统计模型1-0"><a href="#描述统计模型1-0" class="headerlink" title="描述统计模型1.0"></a>描述统计模型1.0</h5><p>1.其他<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">表头</div><div class="line">LOGO</div><div class="line">简介/注意</div></pre></td></tr></table></figure></p><p>2.现状分析<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">综合评价分析</div><div class="line">对比分析</div><div class="line">平均分析</div></pre></td></tr></table></figure></p><p>3.原因分析<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">通过上下钻查看总厂至分厂运营状况</div><div class="line">分组分析</div><div class="line">结构分析</div><div class="line">杜邦分析</div></pre></td></tr></table></figure></p><p>4.项目进度<br>5.预测分析<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">线性回归</div></pre></td></tr></table></figure></p><h5 id="分析模型"><a href="#分析模型" class="headerlink" title="分析模型"></a>分析模型</h5><p>swot模型</p><h5 id="考核模型"><a href="#考核模型" class="headerlink" title="考核模型"></a>考核模型</h5><h3 id="数据挖掘模型准备"><a href="#数据挖掘模型准备" class="headerlink" title="数据挖掘模型准备"></a>数据挖掘模型准备</h3><h4 id="常态模型-1"><a href="#常态模型-1" class="headerlink" title="常态模型"></a>常态模型</h4><h4 id="非常态模型-1"><a href="#非常态模型-1" class="headerlink" title="非常态模型"></a>非常态模型</h4><h4 id="方法论及方法-1"><a href="#方法论及方法-1" class="headerlink" title="方法论及方法"></a>方法论及方法</h4><p>方法论<br>方法:回归分析,决策树</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;其实这是个很大的话题。也很难一时说清，这里我记录一下自己的看法。估计可能会有很多不对的地方，权当为以后做一些参考。&lt;/p&gt;
&lt;h1 id=&quot;传统企业的特点&quot;&gt;&lt;a href=&quot;#传统企业的特点&quot; class=&quot;headerlink&quot; title=&quot;传统企业的特点&quot;&gt;&lt;/a&gt;
      
    
    </summary>
    
      <category term="Data analysis" scheme="https://chumingke.github.io/categories/Data-analysis/"/>
    
    
      <category term="Data analysis" scheme="https://chumingke.github.io/tags/Data-analysis/"/>
    
  </entry>
  
  <entry>
    <title>数据分析方法</title>
    <link href="https://chumingke.github.io//blog/2017/10/Data-analysis-method.html"/>
    <id>https://chumingke.github.io//blog/2017/10/Data-analysis-method.html</id>
    <published>2017-10-08T13:06:11.000Z</published>
    <updated>2017-10-08T13:07:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>整理了一些数据分析方法。</p><h1 id="数据分析方法"><a href="#数据分析方法" class="headerlink" title="数据分析方法"></a>数据分析方法</h1><h2 id="描述统计"><a href="#描述统计" class="headerlink" title="描述统计"></a>描述统计</h2><h2 id="关系分析"><a href="#关系分析" class="headerlink" title="关系分析"></a>关系分析</h2><h3 id="相关分析"><a href="#相关分析" class="headerlink" title="相关分析"></a>相关分析</h3><p>描述两个变量之间的关系</p><h3 id="关联分析"><a href="#关联分析" class="headerlink" title="关联分析"></a>关联分析</h3><p>描述一个变量对另一个变量关系支持度</p><h3 id="单因素方差分析"><a href="#单因素方差分析" class="headerlink" title="单因素方差分析"></a>单因素方差分析</h3><p>研究对象的某一指标、变量对因变量是否有影响</p><h3 id="双因素方差分析"><a href="#双因素方差分析" class="headerlink" title="双因素方差分析"></a>双因素方差分析</h3><p>两种因素、对因变量是否有影响</p><h3 id="因子分析"><a href="#因子分析" class="headerlink" title="因子分析"></a>因子分析</h3><h2 id="求解"><a href="#求解" class="headerlink" title="求解"></a>求解</h2><h3 id="单变量求解"><a href="#单变量求解" class="headerlink" title="单变量求解"></a>单变量求解</h3><p>已知公式，求某一解</p><h3 id="规划求解"><a href="#规划求解" class="headerlink" title="规划求解"></a>规划求解</h3><p>已知公式限定条件，求多解</p><h2 id="回归分析"><a href="#回归分析" class="headerlink" title="回归分析"></a>回归分析</h2><h3 id="线性回归"><a href="#线性回归" class="headerlink" title="线性回归"></a>线性回归</h3><p>得出回归方程，预测检验</p><h3 id="逻辑回归"><a href="#逻辑回归" class="headerlink" title="逻辑回归"></a>逻辑回归</h3><h2 id="分类算法"><a href="#分类算法" class="headerlink" title="分类算法"></a>分类算法</h2><h3 id="决策树算法"><a href="#决策树算法" class="headerlink" title="决策树算法"></a>决策树算法</h3><p>根据特征进行分类，便于决策</p><h3 id="聚类分析"><a href="#聚类分析" class="headerlink" title="聚类分析"></a>聚类分析</h3><h3 id="时间序列分析"><a href="#时间序列分析" class="headerlink" title="时间序列分析"></a>时间序列分析</h3><h2 id="神经网络"><a href="#神经网络" class="headerlink" title="神经网络"></a>神经网络</h2><h2 id="随机森林"><a href="#随机森林" class="headerlink" title="随机森林"></a>随机森林</h2><h2 id="svm"><a href="#svm" class="headerlink" title="svm"></a>svm</h2><h1 id="数据分析作用"><a href="#数据分析作用" class="headerlink" title="数据分析作用"></a>数据分析作用</h1><h2 id="现状分析"><a href="#现状分析" class="headerlink" title="现状分析"></a>现状分析</h2><p>基本方法：对比<br>数据分析方法：<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="number">1.</span>对比分析</div><div class="line"><span class="number">2.</span>平均分析</div><div class="line"><span class="number">3.</span>综合评价分析</div></pre></td></tr></table></figure></p><h2 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h2><p>基本方法：细分<br>数据分析方法：<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="number">1.</span>分组分析</div><div class="line"><span class="number">2.</span>结构分析</div><div class="line"><span class="number">3.</span>交叉分析</div><div class="line"><span class="number">4.</span>杜邦分析</div><div class="line"><span class="number">5.</span>漏斗图分析</div><div class="line"><span class="number">6.</span>矩阵关联分析</div><div class="line"><span class="number">7.</span>聚类分析</div></pre></td></tr></table></figure></p><h2 id="预测分析"><a href="#预测分析" class="headerlink" title="预测分析"></a>预测分析</h2><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="number">1.</span>回归分析</div><div class="line"><span class="number">2.</span>时间序列</div><div class="line"><span class="number">3.</span>决策树</div><div class="line"><span class="number">4.</span>神经网络</div></pre></td></tr></table></figure><h1 id="按性质分"><a href="#按性质分" class="headerlink" title="按性质分"></a>按性质分</h1><h2 id="描述性数据分析"><a href="#描述性数据分析" class="headerlink" title="描述性数据分析"></a>描述性数据分析</h2><p>描述统计<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">集中趋势</div><div class="line">离散程度</div><div class="line">异常值</div></pre></td></tr></table></figure></p><h2 id="探索性数据分析"><a href="#探索性数据分析" class="headerlink" title="探索性数据分析"></a>探索性数据分析</h2><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="number">1.</span>假设检验</div><div class="line"><span class="number">2.</span>相关分析</div><div class="line"><span class="number">3.</span>方差分析</div><div class="line"><span class="number">4.</span>回归分析</div><div class="line"><span class="number">5.</span>聚类分析</div><div class="line"><span class="number">6.</span>判别分析</div><div class="line"><span class="number">7.</span>主成分因子分析</div><div class="line"><span class="number">8.</span>时间序列分析</div><div class="line"><span class="number">9.</span>决策树</div></pre></td></tr></table></figure><h2 id="验证性数据分析"><a href="#验证性数据分析" class="headerlink" title="验证性数据分析"></a>验证性数据分析</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;整理了一些数据分析方法。&lt;/p&gt;
&lt;h1 id=&quot;数据分析方法&quot;&gt;&lt;a href=&quot;#数据分析方法&quot; class=&quot;headerlink&quot; title=&quot;数据分析方法&quot;&gt;&lt;/a&gt;数据分析方法&lt;/h1&gt;&lt;h2 id=&quot;描述统计&quot;&gt;&lt;a href=&quot;#描述统计&quot; class=&quot;
      
    
    </summary>
    
      <category term="Data analysis" scheme="https://chumingke.github.io/categories/Data-analysis/"/>
    
    
      <category term="Data analysis" scheme="https://chumingke.github.io/tags/Data-analysis/"/>
    
  </entry>
  
  <entry>
    <title>数据分析方法论</title>
    <link href="https://chumingke.github.io//blog/2017/10/Data-analysis-methodology.html"/>
    <id>https://chumingke.github.io//blog/2017/10/Data-analysis-methodology.html</id>
    <published>2017-10-08T12:42:19.000Z</published>
    <updated>2017-10-08T12:45:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>整理了一些思维、方法论。</p><h1 id="统计分析方法论"><a href="#统计分析方法论" class="headerlink" title="统计分析方法论"></a>统计分析方法论</h1><h1 id="营销管理方法论"><a href="#营销管理方法论" class="headerlink" title="营销管理方法论"></a>营销管理方法论</h1><h2 id="SWOT分析"><a href="#SWOT分析" class="headerlink" title="SWOT分析"></a>SWOT分析</h2><p>Strength(强势)<br>Opportunity(机会)<br>Weekness(弱点)<br>threat(威胁)</p><h2 id="4P营销理论"><a href="#4P营销理论" class="headerlink" title="4P营销理论"></a>4P营销理论</h2><p>产品<br>价格<br>渠道<br>促销<br>分析公司的整体营运情况</p><h2 id="PEST分析法"><a href="#PEST分析法" class="headerlink" title="PEST分析法"></a>PEST分析法</h2><p>政治（Political）<br>经济（Economic）<br>技术（Technological）<br>社会（Social）</p><ul><li>用于对宏观环境的分析<h2 id="SMART目标分析"><a href="#SMART目标分析" class="headerlink" title="SMART目标分析"></a>SMART目标分析</h2>明确性(Specific)<br>可量化(Measurable)<br>可实现(Attainable)<br>相关联(Relevant)<br>时效性(Time)<h2 id="5W2H分析法"><a href="#5W2H分析法" class="headerlink" title="5W2H分析法"></a>5W2H分析法</h2>何因(Why)<br>何事(What)<br>何时(When)<br>何人(Who)<br>何地(Where)<br>如何做(How)<br>何价(How much)<h2 id="用户行为分析（user-behavior）"><a href="#用户行为分析（user-behavior）" class="headerlink" title="用户行为分析（user behavior）"></a>用户行为分析（user behavior）</h2>认知<br>熟悉<br>试用<br>使用<br>忠诚<br>适用于网站流量分析<h2 id="逻辑树分析法"><a href="#逻辑树分析法" class="headerlink" title="逻辑树分析法"></a>逻辑树分析法</h2>问题：（子问题一，子问题二）<br>把问题的所有子问题分层罗列<h1 id="张梦溪的系统案例（知乎数据分析方法论是什么）"><a href="#张梦溪的系统案例（知乎数据分析方法论是什么）" class="headerlink" title="张梦溪的系统案例（知乎数据分析方法论是什么）"></a>张梦溪的系统案例（知乎数据分析方法论是什么）</h1><h2 id="商业分析理论"><a href="#商业分析理论" class="headerlink" title="商业分析理论"></a>商业分析理论</h2>1.理解商业分析目标<br>2.理解企业成长模式，核心业务平台是什么？<br>3.理解商业分析进化论<figure class="highlight abnf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">观察数据发生了什么<span class="comment">;</span></div><div class="line">理解为什么发生<span class="comment">;</span></div><div class="line">预测未来会发生什么<span class="comment">;</span></div><div class="line">商业决策。</div></pre></td></tr></table></figure></li></ul><p>4.EOI的分析架构<br><figure class="highlight coq"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">助力（Empower）</div><div class="line">优化（<span class="keyword">Optimize</span>）</div><div class="line">创新（Innovate）</div></pre></td></tr></table></figure></p><h2 id="常用分析方法"><a href="#常用分析方法" class="headerlink" title="常用分析方法"></a>常用分析方法</h2><h3 id="数据分析的基本思路"><a href="#数据分析的基本思路" class="headerlink" title="数据分析的基本思路"></a>数据分析的基本思路</h3><p>1.挖掘业务含义<br>2.制定分析计划<br>3.拆分查询数据<br>4.提炼业务洞察<br>5.产出商业决策</p><h3 id="内外因素分解法"><a href="#内外因素分解法" class="headerlink" title="内外因素分解法"></a>内外因素分解法</h3><p>案例</p><h3 id="DOSS"><a href="#DOSS" class="headerlink" title="DOSS"></a>DOSS</h3><h2 id="具体应用手段"><a href="#具体应用手段" class="headerlink" title="具体应用手段"></a>具体应用手段</h2><p>1.画像分群<br>2.趋势<br>3.漏斗洞察<br>4.行为轨迹<br>5.留存分析<br>6.A/B测试<br>7.优化建模</p><h1 id="linkeln案例"><a href="#linkeln案例" class="headerlink" title="linkeln案例"></a>linkeln案例</h1><p>数据分析思维</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;整理了一些思维、方法论。&lt;/p&gt;
&lt;h1 id=&quot;统计分析方法论&quot;&gt;&lt;a href=&quot;#统计分析方法论&quot; class=&quot;headerlink&quot; title=&quot;统计分析方法论&quot;&gt;&lt;/a&gt;统计分析方法论&lt;/h1&gt;&lt;h1 id=&quot;营销管理方法论&quot;&gt;&lt;a href=&quot;#营销管理方法
      
    
    </summary>
    
      <category term="Data analysis" scheme="https://chumingke.github.io/categories/Data-analysis/"/>
    
    
      <category term="Data analysis" scheme="https://chumingke.github.io/tags/Data-analysis/"/>
    
  </entry>
  
  <entry>
    <title>那些对自己特别狠的人，脑子里都是怎么想的？</title>
    <link href="https://chumingke.github.io//blog/2017/10/what-are-the-thoughts-in-the-mind-of-those-who-are-particularly-ruthless-to-them.html"/>
    <id>https://chumingke.github.io//blog/2017/10/what-are-the-thoughts-in-the-mind-of-those-who-are-particularly-ruthless-to-them.html</id>
    <published>2017-10-08T12:13:52.000Z</published>
    <updated>2017-10-08T12:17:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>作者：张林昊<br>链接：<a href="https://www.zhihu.com/question/57455607/answer/157878054" target="_blank" rel="external">https://www.zhihu.com/question/57455607/answer/157878054</a><br>来源：知乎<br>著作权归作者所有，转载请联系作者获得授权。</p><p>所有近乎残忍的坚持，背后都隐藏着欲望的鬼魅。</p><p>只是对你来讲，这些欲望是点缀，</p><p>对他来说，这些欲望是刚需。</p><p>什么是刚需？</p><p>周红衣这里有个再经典不过的例子，有人将木马封包装进AV里进行传播，360在用户试图播放时弹出警告，但是大多数用户的选择都是关掉弹窗，「如果360再弹，就把360彻底的卸掉」。</p><p>而有的人对成功的渴望，就是可以和你深夜精虫入脑两眼猩红，满世界求种子的欲望同样强烈！</p><p>你说他们「推开自己最爱的人，理智的可怕。」</p><p>其实并不是。</p><p>慕容复在枯井边推开了王语嫣，不是因为他理智，而是为那兴复燕国的执念。</p><p>黄袍加身不是你的刚需，因此你狠不下来。不做皇帝你一样能活，慕容复做不了皇帝能疯。</p><p>战胜欲望的永远只有更高级的欲望。</p><p>解不了，名缰系嗔贪。</p><p>当然，从某种程度上讲，你不理解，反倒说明你幸运。至少，不曾被自卑的阴影所笼罩，没有被未遂的野心所折磨，未曾在志得意满时被命运当头棒喝。</p><p>苏秦读书，以锥刺骨，你不理解，是因为你没体会过 「兄弟嫂妹妻妾窃皆笑之」的困窘。</p><p>乔丹练球，近乎偏执，你不理解，是因为你没品尝过只因身高不足便被球队扫地出门的羞辱。</p><p>人是欲望的产物。</p><p>有些行为看似不合逻辑，只是因为你还没能看穿他的欲望。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;作者：张林昊&lt;br&gt;链接：&lt;a href=&quot;https://www.zhihu.com/question/57455607/answer/157878054&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.zhihu.com/ques
      
    
    </summary>
    
      <category term="human nature" scheme="https://chumingke.github.io/categories/human-nature/"/>
    
    
      <category term="human nature" scheme="https://chumingke.github.io/tags/human-nature/"/>
    
  </entry>
  
  <entry>
    <title>李开复每天早上 4 点就起床，是怎么办到的？开复老师如何能很好地安排好自己的时间？</title>
    <link href="https://chumingke.github.io//blog/2017/10/How-can-Li-Kaifu-arrange-his-time-well.html"/>
    <id>https://chumingke.github.io//blog/2017/10/How-can-Li-Kaifu-arrange-his-time-well.html</id>
    <published>2017-10-08T11:52:31.000Z</published>
    <updated>2017-10-08T12:00:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>作者：李开复<br>链接：<a href="https://www.zhihu.com/question/19563168/answer/12257911" target="_blank" rel="external">https://www.zhihu.com/question/19563168/answer/12257911</a><br>来源：知乎<br>著作权归作者所有，转载请联系作者获得授权。</p><p>人的一生两个最大的财富是：你的才华和你的时间。才华越来越多，但是时间越来越少，我们的一生可以说是用时间来换取才华。如果一天天过去了，我们的时间少了，而才华没有增加，那就是虚度了时光。所以，我们必须节省时间，有效率地使用时间。如何有效率地利用时间呢？我有下面几个建议： </p><p><strong>1.做你真正感兴趣、与自己人生目标一致的事情。</strong></p><p> 我发现我的“生产力”和我的“兴趣”有着直接的关系，而且这种关系还不是单纯的线性关系。如果面对我没有兴趣的事情，我可能会花掉40％的时间，但只能产生20％的效果；如果遇到我感兴趣的事情，我可能会花100％的时间而得到200％的效果。<br> 要在工作上奋发图强，身体健康固然重要，但是真正能改变你的状态的关键是心理而不是生理上的问题。真正地投入到你的工作中，你需要的是一种态度、一种渴望、一种意志。</p><p><strong>2.知道你的时间是如何花掉的。</strong></p><p>挑一个星期，每天记录下每30分钟做的事情，然后做一个分类（例如：读书、准备GRE、和朋友聊天、社团活动等）和统计，看看自己什么方面花了太多的时间。凡事想要进步，必须先理解现状。<br>每天结束后，把一整天做的事记下来，每15分钟为一个单位（例如：1:00—1:15等车，1:15—1:45搭车，1:45—2:45与朋友喝茶……）。在一周结束后，分析一下，这周你的时间如何可以更有效率地安排？有没有活动占太大的比例？有没有方法可以增加效率？</p><p><strong>3.使用时间碎片和“死时间”。</strong></p><p>如果你做了上面的时间统计，你一定发现每天有很多时间流失掉了，例如等车、排队、走路、搭车等，可以用来背单字、打电话、温习功课等。现在随时随地都能上网，所以没有任何借口再发呆一次。<br>我前一阵和同事一起出差，他们都很惊讶为什么我和他们整天在一起，但是我的电子邮件都可以及时回答？后来，他们发现，当他们在飞机上和汽车上聊天、读杂志和发呆的时候，我就把电子邮件全回了。重点是，无论自己忙还是不忙，你要把那些可以利用时间碎片做的事先准备好，到你有空闲的时候有计划地拿出来做。</p><p><strong>4.要事为先 。</strong></p><p>每天一大早挑出最重要的三件事，当天一定要能够做完。<br>在工作和生活中每天都有干不完的事，唯一能够做的就是分清轻重缓急。<br>要理解急事不等于重要的事情。每天除了办又急又重要的事情外，一定要注意不要成为急事的奴隶。<br>有些急但是不重要的事情，你要学会放掉，要能对人说 no! 而且每天这三件事里最好有一件重要但是不急的，这样才能确保你没有成为急事的奴隶。</p><p><strong>5.要有纪律。</strong></p><p>有的年轻人会说自己“没有时间学习”，其实，换个说法就是“学习没有被排上优先级次序”。<br>曾经有一个教学生做时间管理的老师，他上课时带来两个大玻璃缸和一堆大小不一的石头。他做了一个实验，在其中一个玻璃缸中先把小石、砂倒进去，最后大石头就放不下了。而另一个玻璃缸中先放大石头，其它小石和砂却可以慢慢渗入。<br>他以此为比喻说：“时间管理就是要找到自己的优先级，若颠倒顺序，一堆琐事占满了时间，重要的事情就没有空位了。”</p><p><strong>6.运用80％—20％原则。</strong></p><p>人如果利用最高效的时间，只要20％的投入就能产生80％的效率。相对来说，如果使用最低效的时间，80％的时间投入只能产生20%效率。一天头脑最清楚的时候，应该放在最需要专心的工作上。<br>与朋友、家人在一起的时间，相对来说，不需要头脑那么清楚。所以，我们要把握一天中20％的最高效时间（有些人是早晨，也有些人是下午和晚上；除了时间之外，还要看你的心态，血糖的高低，休息是否足够等综合考量），专门用于最困难的科目和最需要思考的学习上。许多同学喜欢熬夜，但是晚睡会伤身，所以还是尽量早睡早起。</p><p><strong>7.平衡工作和家庭。</strong></p><p>我对于家庭的时间分配是用下列的原则：</p><ul><li><p>划清界限、言出必行——对家人做出承诺后，而且一定要做到，但是希望其他时间得到谅解。制定较低的期望值以免造成失望。</p></li><li><p>闲中偷忙——学会怎么利用时间碎片。例如：家人没起床的时候，你就可以利用这段空闲时间去做你需要的工作。</p></li><li><p>注重有质量的时间（quality time）——时间不是每一分钟都是一样的，有时需要全神贯注，有时坐在旁边上网就可以了。要记得家人平时为你牺牲很多，度假、周末是你补偿的机会。</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;作者：李开复&lt;br&gt;链接：&lt;a href=&quot;https://www.zhihu.com/question/19563168/answer/12257911&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.zhihu.com/quest
      
    
    </summary>
    
      <category term="Time utilization" scheme="https://chumingke.github.io/categories/Time-utilization/"/>
    
    
      <category term="Time utilization" scheme="https://chumingke.github.io/tags/Time-utilization/"/>
    
  </entry>
  
  <entry>
    <title>Numpy学习笔记</title>
    <link href="https://chumingke.github.io//blog/2017/10/Numpy-learning-notes.html"/>
    <id>https://chumingke.github.io//blog/2017/10/Numpy-learning-notes.html</id>
    <published>2017-10-08T09:35:48.000Z</published>
    <updated>2017-10-08T09:36:32.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>通过Anconda安装</p><h1 id="网页形式的编辑器"><a href="#网页形式的编辑器" class="headerlink" title="网页形式的编辑器"></a>网页形式的编辑器</h1><p>Jupyter NoteBook<br>很好用<br>anconda安装好后，直接终端输入<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">jupyter notebook</span></div></pre></td></tr></table></figure></p><p>然后会跳出网页。目录类似GIT</p><h1 id="Numpy介绍-ndarry"><a href="#Numpy介绍-ndarry" class="headerlink" title="Numpy介绍+ndarry"></a>Numpy介绍+ndarry</h1><h2 id="scipy"><a href="#scipy" class="headerlink" title="scipy"></a>scipy</h2><p>scipy库是基于python生态的一款开源数值计算、科学与工程应用的开源软件。<br>包括常用的Numpy,pandas、matplotlib等库。</p><h2 id="Numpy"><a href="#Numpy" class="headerlink" title="Numpy"></a>Numpy</h2><h3 id="Numerical-Python"><a href="#Numerical-Python" class="headerlink" title="Numerical Python"></a>Numerical Python</h3><p>即数值python包</p><h3 id="包括的内容"><a href="#包括的内容" class="headerlink" title="包括的内容"></a>包括的内容</h3><p>1.一个具有矢量算术运算和复杂广播能力的快速且节省空间的多维数组，称为ndarray<br><figure class="highlight smali"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">N-dimensional<span class="built_in"> array </span>object</div></pre></td></tr></table></figure></p><p>2.用于对整组数据进行快速运算的标准数学函数<br><figure class="highlight ada"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ufunc (universal <span class="keyword">function</span> <span class="title">object);</span></div></pre></td></tr></table></figure></p><p>3.用于整合c/c++和Fortran代码的工具包<br>4.实用线性代数、傅里叶变换和随机数生成函数。numpy和稀疏矩阵运算包scipy配合使用更加方便</p><h3 id="约定导入方式"><a href="#约定导入方式" class="headerlink" title="约定导入方式"></a>约定导入方式</h3><figure class="highlight elm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div></pre></td></tr></table></figure><h2 id="ndarray"><a href="#ndarray" class="headerlink" title="ndarray"></a>ndarray</h2><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">np.array(      ##建立Ndarray多维数组，可以直接使用嵌套列表</div><div class="line">【</div><div class="line">    【<span class="number">1</span>，<span class="number">2</span>，<span class="number">3</span>，<span class="number">4</span>】，          ##开头几个方括号，就是几维的</div><div class="line">    【<span class="number">2</span>，<span class="number">3</span>，<span class="number">4</span>，<span class="number">5</span>】</div><div class="line">  】，</div><div class="line">【</div><div class="line">    【<span class="number">3</span>，<span class="number">4</span>，<span class="number">5</span>，<span class="number">6</span>】，</div><div class="line">    【<span class="number">4</span>，<span class="number">5</span>，<span class="number">6</span>，<span class="number">7</span>】</div><div class="line">  】</div><div class="line">）</div></pre></td></tr></table></figure><h2 id="ndarray属性"><a href="#ndarray属性" class="headerlink" title="ndarray属性"></a>ndarray属性</h2><p>ndim——维度数量<br>shape——是一个表示各维度大小的元组，即数组的形状<br>dtype——是一个用于说明数组元素数据类型的对象<br><figure class="highlight 1c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">arr2 = np.array ( [ 'Python','cctv','ibeifeng',hello world' ] , dtype = '<span class="string">|S4')</span></div><div class="line"></div><div class="line">arr2  </div><div class="line">&gt;&gt;&gt;array ( [ 'Pyth','cctv','ibei','hell'],dtype = '|S4')</div></pre></td></tr></table></figure></p><p>size——元素总个数，即shape中个数组相乘</p><h1 id="ndarry的shape属性巧算"><a href="#ndarry的shape属性巧算" class="headerlink" title="ndarry的shape属性巧算"></a>ndarry的shape属性巧算</h1><h2 id="多维数组维度，shape算法"><a href="#多维数组维度，shape算法" class="headerlink" title="多维数组维度，shape算法"></a>多维数组维度，shape算法</h2><p>逗号分割</p><h2 id="怎么取数"><a href="#怎么取数" class="headerlink" title="怎么取数"></a>怎么取数</h2><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">arr2【<span class="number">0</span>】【<span class="number">1</span>】【<span class="number">1</span>】</div></pre></td></tr></table></figure><h1 id="ndarry的常见创建方式"><a href="#ndarry的常见创建方式" class="headerlink" title="ndarry的常见创建方式"></a>ndarry的常见创建方式</h1><h2 id="array函数"><a href="#array函数" class="headerlink" title="array函数"></a>array函数</h2><p>接收一个普通python序列，转成ndarray，之前讲的</p><h2 id="zeros函数"><a href="#zeros函数" class="headerlink" title="zeros函数"></a>zeros函数</h2><p>创建指定长度或形状的全零数组<br>通过help(zeros)查看帮助<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">np.zero((<span class="number">2</span>,<span class="number">2</span>))</div><div class="line">##使用元组类型，两个括号，定义了两个维度，每个维度有两个值</div><div class="line">##<span class="number">2</span>行<span class="number">2</span>列，我觉得倒着看方便</div><div class="line">array([[<span class="number">0.</span> , <span class="number">0.</span>],            ##默认是浮点数</div><div class="line">       [<span class="number">0.</span> , <span class="number">0.</span>]])</div></pre></td></tr></table></figure></p><h2 id="ones函数"><a href="#ones函数" class="headerlink" title="ones函数"></a>ones函数</h2><p>创建指定长度或形状的全1数组，同zeros一样<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">np.ones((<span class="number">5</span>,<span class="number">6</span>,<span class="number">2</span>) ,dtype = int)</div></pre></td></tr></table></figure></p><h2 id="empty函数"><a href="#empty函数" class="headerlink" title="empty函数"></a>empty函数</h2><p>创建一个没有任何具体值的数组（准确地说是一些未初始化的垃圾值）<br>作用：<br>填充随机值<br>比如我们要做算法，一开始不知道数值，设一个随机值<br>NAN 空值，缺失值</p><h2 id="其他创建方式"><a href="#其他创建方式" class="headerlink" title="其他创建方式"></a>其他创建方式</h2><h3 id="arrange函数"><a href="#arrange函数" class="headerlink" title="arrange函数"></a>arrange函数</h3><p>类似与python的range函数，通过指定开始值、终值和步长来创建一维数组，注意数组不包括终值<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">np.arange(<span class="number">2</span>,<span class="number">20</span>,<span class="number">3</span>)</div></pre></td></tr></table></figure></p><h3 id="linspace函数"><a href="#linspace函数" class="headerlink" title="linspace函数"></a>linspace函数</h3><p>通过指定开始值、终值和元素个数来创建一维数组，可以通过endpoint关键字指定是否包括终值，缺省设置是包括终值，等差数列</p><h3 id="logspace函数"><a href="#logspace函数" class="headerlink" title="logspace函数"></a>logspace函数</h3><p>和linspace类似，不过它创建等比数列<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">np.logspace(<span class="number">2</span>,<span class="number">20</span>,<span class="number">3</span>)</div><div class="line">##第一个值代表<span class="number">10</span>的<span class="number">2</span>次方，第二个代表<span class="number">10</span>的<span class="number">20</span>次方，第三个代表生成元素的个数</div></pre></td></tr></table></figure></p><h3 id="以上皆为一维数组，如何生成多维数组（转置）"><a href="#以上皆为一维数组，如何生成多维数组（转置）" class="headerlink" title="以上皆为一维数组，如何生成多维数组（转置）"></a>以上皆为一维数组，如何生成多维数组（转置）</h3><p>reshape<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">np.arange(<span class="number">2</span>,<span class="number">20</span>,<span class="number">2</span>).reshape((<span class="number">3</span>,<span class="number">3</span>))</div><div class="line">np.arange(<span class="number">2</span>,<span class="number">20</span>,<span class="number">2</span>).reshape((<span class="number">3</span>,<span class="number">-1</span>))</div><div class="line">##<span class="number">-1</span>代表根据前面的数自动计算后面的数</div></pre></td></tr></table></figure></p><h3 id="使用随机数填充数组"><a href="#使用随机数填充数组" class="headerlink" title="使用随机数填充数组"></a>使用随机数填充数组</h3><p>即用numpy.random模块的random()函数，数组所包含的元素数量由参数决定<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">np.random.random((2,3,4))</div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#随机数范围一般在0-1之间</span></span></div><div class="line">np.random.random_sample()</div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#生成每一位随机数的方法</span></span></div></pre></td></tr></table></figure></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>先规范显示出数组，<br>层层去中括号对，直到无中括号对，每去一个层，一个维度，去掉一层[]，后的元素个数（逗号隔开）即该维度的元素个数。</p><h1 id="Numpy中的数据类型"><a href="#Numpy中的数据类型" class="headerlink" title="Numpy中的数据类型"></a>Numpy中的数据类型</h1><h2 id="创建时"><a href="#创建时" class="headerlink" title="创建时"></a>创建时</h2><p>创建Numpy数组时可以通过dtype属性显式指定数据类型，如果不指定Numpy会自己判断出合适的数据类型，所以一般无需显式指定。</p><h2 id="转换"><a href="#转换" class="headerlink" title="转换"></a>转换</h2><p>astype方法，可以转换数组的元素数据类型，得到一个新数组<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">arr2 = np.arange(2,10,2)</div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#建立数组</span></span></div><div class="line">arr2.dtype</div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#查看类型</span></span></div><div class="line">arr3 = arr2.astype('float‘）</div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#转换为浮点格式</span></span></div><div class="line">arr4 = arr2.astype('|U2')</div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#使用Unicode编码，每个元素长度为2</span></span></div><div class="line">arr5 = arr2.astype('|S2')</div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#使用string编码（转换为十六进制编码），每个元素长度为2</span></span></div><div class="line">arr6 = np.array([1,2,3,'4'], dtype = np.float)</div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#建议使用np中自带的形式np.float去处理，规范写法</span></span></div></pre></td></tr></table></figure></p><h2 id="改变array形状"><a href="#改变array形状" class="headerlink" title="改变array形状"></a>改变array形状</h2><h3 id="reshape"><a href="#reshape" class="headerlink" title="reshape"></a>reshape</h3><p>形状可变，元素总数不可变<br>不改变原来的ndarray,得到新的ndarray是原数组的视图</p><h3 id="视图的概念"><a href="#视图的概念" class="headerlink" title="视图的概念"></a>视图的概念</h3><h4 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h4><p>相当于多个变量使用（指向）一个内存地址（空间）<br>只要修改一个，都会修改</p><h4 id="副本"><a href="#副本" class="headerlink" title="副本"></a>副本</h4><p>复制一份放到新的内存空间<br>修改其中一个副本，其他的不会改变<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attr">arr3</span> = arr.copy()</div><div class="line"><span class="comment">##拷贝，生成副本</span></div></pre></td></tr></table></figure></p><p>因此对于ndarray的一些方法操作，首先区分是否会改变原来变量，以此来判断是视图还是副本<br>表格详见PPT，引号内填的一般是类型代码</p><h1 id="Nnmpy基本操作"><a href="#Nnmpy基本操作" class="headerlink" title="Nnmpy基本操作"></a>Nnmpy基本操作</h1><p>数组与标量、数组之间的运算</p><h2 id="numpy的算术运算"><a href="#numpy的算术运算" class="headerlink" title="numpy的算术运算"></a>numpy的算术运算</h2><p>加法<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">arr = np.arange(<span class="number">0</span>,<span class="number">20</span>,<span class="number">2</span>)</div><div class="line">arr + <span class="number">2</span>           ##会给每一个元素都加<span class="number">2</span></div></pre></td></tr></table></figure></p><p>或者：<br><figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">arr2 = np.arange(<span class="number">2</span>,<span class="number">40</span>,<span class="number">4</span>)    ##相加的数组形状要一样</div><div class="line">arr + arr2                  ##同一位置的做加法运算</div></pre></td></tr></table></figure></p><p>加减乘除基本相同<br>除法可能警告除数可能为零，结果为0<br><figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">##怎么处理?</div><div class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> division        ##保证数据合法性</div><div class="line">arr2/arr           ##还是会警告，不过异常值原来为<span class="number">0</span>现在为nan</div></pre></td></tr></table></figure></p><ul><li>数组算数运算必须保证两边数组形状一致。</li><li>元素级的运算。<h2 id="数据的矩阵积（matrix-product）"><a href="#数据的矩阵积（matrix-product）" class="headerlink" title="数据的矩阵积（matrix product）"></a>数据的矩阵积（matrix product）</h2>1.满足第一个矩阵的列数与第二个矩阵的行数相同，才可以进行矩阵乘法——为保证每个元素都有的乘<br>2.矩阵积不是元素级运算<br>3.Excel案例<figure class="highlight excel"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">##取随机数</div><div class="line">=<span class="built_in">randbetween</span>(<span class="number">0</span>,<span class="number">10</span>)</div><div class="line">##求每个公司花费的总金额和购买的产品大小</div></pre></td></tr></table></figure></li></ul><h1 id="索引和切片"><a href="#索引和切片" class="headerlink" title="索引和切片"></a>索引和切片</h1><h2 id="索引与切片"><a href="#索引与切片" class="headerlink" title="索引与切片"></a>索引与切片</h2><p>两种方法：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">new_arr1 [<span class="string">1 </span>][<span class="symbol"> 1 </span>]</div><div class="line">new_arr1 [ 1,1 ]</div></pre></td></tr></table></figure></p><p>例子：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">new_arr1 [1]</div><div class="line">new_arr1 [ 1,0:]                        ##普遍写法</div><div class="line">new_arr1 [0, 0:2 ,1:3 ]                 ##嵌套取数</div><div class="line"><span class="section">##或者</span></div><div class="line">new_arr1 [<span class="string">0</span>] [<span class="string"> 0 : 2 </span>][<span class="symbol"> 1 </span>] [ 1 : 3 ]</div></pre></td></tr></table></figure></p><ul><li>切片是视图<h2 id="布尔型索引"><a href="#布尔型索引" class="headerlink" title="布尔型索引"></a>布尔型索引</h2><h3 id="筛选作用"><a href="#筛选作用" class="headerlink" title="筛选作用"></a>筛选作用</h3>快速筛选数据在不在某个范围内<h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">arr3 &gt; 0.5</div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#进行判断，输出ture false矩阵</span></span></div><div class="line">arr3[arr3 &gt;0.5]</div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#可以把满足条件的值取出来</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#true的位置取出来，组成新数组</span></span></div><div class="line">arr4 [arr4 =='Tom'] = 1</div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#数据替换，将tom替换为1</span></span></div></pre></td></tr></table></figure></li></ul><h3 id="与非或操作"><a href="#与非或操作" class="headerlink" title="与非或操作"></a>与非或操作</h3><p>数据规整：与&amp;或|非~</p><h2 id="花式索引"><a href="#花式索引" class="headerlink" title="花式索引"></a>花式索引</h2><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">arr = np.arange (<span class="number">32</span>).reshape((<span class="number">8</span>,<span class="number">4</span>))</div><div class="line">arr [[<span class="number">0</span>,<span class="number">3</span>,<span class="number">5</span>]]</div><div class="line">arr [[<span class="number">0</span>,<span class="number">3</span>,<span class="number">5</span>],[<span class="number">0</span>,<span class="number">3</span>,<span class="number">2</span>]]  </div><div class="line">    ##前一个取出对应行，后一个取出对应列</div><div class="line">##整数数组形式索引</div><div class="line">ix</div><div class="line">##ix函数产生一个索引器</div></pre></td></tr></table></figure><p>详见PPT<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ix</div><div class="line">np.ix_([<span class="number">0</span>,<span class="number">3</span>,<span class="number">5</span>],[<span class="number">0</span>,<span class="number">2</span>,<span class="number">3</span>])</div><div class="line">np.ix_([<span class="number">0</span>,<span class="number">3</span>,<span class="number">5</span>],[<span class="number">0</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">3</span>])</div><div class="line">##而且进行了重新排列</div></pre></td></tr></table></figure></p><h1 id="数组转置与轴兑换"><a href="#数组转置与轴兑换" class="headerlink" title="数组转置与轴兑换"></a>数组转置与轴兑换</h1><h2 id="数组的T属性"><a href="#数组的T属性" class="headerlink" title="数组的T属性"></a>数组的T属性</h2><figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">arr.transpose()      ##生成视图</div><div class="line">arr.T                ##生成视图</div></pre></td></tr></table></figure><h2 id="轴兑换"><a href="#轴兑换" class="headerlink" title="轴兑换"></a>轴兑换</h2><h1 id="通用函数"><a href="#通用函数" class="headerlink" title="通用函数"></a>通用函数</h1><p>1.快速的元素级数组函数<br>2.ufunc<br>一种对ndarray中的数据执行元素级运算的函数，也可以看做简单函数的矢量化包装器<br>简单函数:接收一个或多个标量值，并产生一个或多个标量值<br>3.常见的一元通用函数<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#详见PPT</span></span></div><div class="line">np.isnan(arr3)</div></pre></td></tr></table></figure></p><p>4.常见的二元通用函数<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">np</span><span class="selector-class">.power</span>(<span class="selector-tag">arr</span>,<span class="selector-tag">arr2</span>)</div></pre></td></tr></table></figure></p><p>5.聚合函数</p><ul><li>对一组值进行操作，返回一个单一值作为结果的函数</li><li>因此求数组所有元素之和、最大最小标准差就是聚合函数</li><li>聚合函数可以指定对数值的某个轴元素进行操作:<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">arr<span class="selector-class">.mean</span> (axis =<span class="number">0</span>)</div></pre></td></tr></table></figure></li></ul><h1 id="np-where函数"><a href="#np-where函数" class="headerlink" title="np.where函数"></a>np.where函数</h1><p>np.where函数是三元表达式 x if condition else y 的矢量化版本<br>实现数据的过滤操作<br>例子<br><figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">xarr = np.array( [<span class="number">1.1</span>,<span class="number">2.2</span>,<span class="number">3.3</span>,<span class="number">4.4</span>])</div><div class="line">yarr = np.array( [<span class="number">1.2</span>,<span class="number">2.3</span>,<span class="number">3.4</span>,<span class="number">4.5</span>])</div><div class="line">bool_arr=np.array([<span class="literal">True</span>,<span class="literal">False</span>,<span class="literal">False</span>,<span class="literal">True</span>])   ##布尔数组</div><div class="line">zip_arr = zip (xarr,yarr,bool_arr)           ##数组合并</div><div class="line">result = [<span class="string">'%.2f'</span> % x <span class="keyword">if</span> bl else <span class="string">'%.2f'</span> % y  for x,y,bl <span class="keyword">in</span> zip_arr ]</div><div class="line">##三元表达式，满足条件输出，附带格式化功能</div><div class="line">np.<span class="keyword">where</span> (bool_arr,xarr,yarr)</div><div class="line">##如果用np.<span class="keyword">where</span>可以这么做</div><div class="line">##np.<span class="keyword">where</span>(表达式数组，当前表达式为<span class="literal">True</span>提取数据的数组，当前表达式为<span class="literal">False</span>提取数据的数组）</div><div class="line">result = [（ x <span class="keyword">if</span> bl else  y）  for x,y,bl <span class="keyword">in</span> zip_arr <span class="keyword">if</span> x &gt;<span class="number">2</span> ]</div><div class="line">##先做for 取出数值，然后做<span class="keyword">if</span>&gt;<span class="number">2</span>,如果大于<span class="number">2</span>，进行前面三元表达式操作，如果不大于就不操作</div></pre></td></tr></table></figure></p><h1 id="np-unique函数"><a href="#np-unique函数" class="headerlink" title="np.unique函数"></a>np.unique函数</h1><p>求数组中不重复的元素<br>例子:<br><figure class="highlight maxima"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">arr = <span class="built_in">np</span>.<span class="built_in">array</span>(['中国‘，’中国‘，’中国‘，’美国‘，’英国‘])</div><div class="line">arr</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> arr: </div><div class="line">    <span class="built_in">print</span> i</div><div class="line">这样才可以显示中文</div><div class="line">arr1 = <span class="built_in">np</span>.<span class="built_in">unique</span>(arr)</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> arr: </div><div class="line">    <span class="built_in">print</span> i                ##检查发现没有重复值了</div></pre></td></tr></table></figure></p><h1 id="数组数据文件读取"><a href="#数组数据文件读取" class="headerlink" title="数组数据文件读取"></a>数组数据文件读取</h1><p>分两种</p><h2 id="将数组以二进制格式保存到磁盘"><a href="#将数组以二进制格式保存到磁盘" class="headerlink" title="将数组以二进制格式保存到磁盘"></a>将数组以二进制格式保存到磁盘</h2><h3 id="save写数据"><a href="#save写数据" class="headerlink" title="save写数据"></a>save写数据</h3><figure class="highlight maxima"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">arr = <span class="built_in">np</span>.<span class="built_in">random</span>.<span class="built_in">random</span>((<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>))</div><div class="line"><span class="built_in">np</span>.<span class="built_in">save</span>('data',arr)</div><div class="line">    ##将多维数组存储到文件，自动添加后缀.npy（二进制文件，记事本无法打开）</div></pre></td></tr></table></figure><h3 id="load读取二进制形式的数据文件"><a href="#load读取二进制形式的数据文件" class="headerlink" title="load读取二进制形式的数据文件"></a>load读取二进制形式的数据文件</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attr">arr2</span> = np.load(<span class="string">'data.npy'</span>)</div><div class="line"><span class="comment">##读取文件时，需要后缀</span></div></pre></td></tr></table></figure><h2 id="存取文本文件"><a href="#存取文本文件" class="headerlink" title="存取文本文件"></a>存取文本文件</h2><h3 id="读取数据"><a href="#读取数据" class="headerlink" title="读取数据"></a>读取数据</h3><h4 id="np-loadtxt"><a href="#np-loadtxt" class="headerlink" title="np.loadtxt"></a>np.loadtxt</h4><blockquote><p>fname 文件名，dtype 数据类型，comments 注释行的符号定义，delimiter 数据分隔符的定义，converteres 转换函数，skipprows 跳过的行数，usecols 使用哪些列<br><figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">arr4 = np.loadtxt(<span class="string">'example.csv'</span>,delimiter = <span class="string">','</span> )</div><div class="line"> ##数字自动转为浮点数</div><div class="line"> ##如果原始数据中没有分隔符，用空格，就不用设置分隔符delimiter</div></pre></td></tr></table></figure></p></blockquote><h4 id="np-genfromtxt"><a href="#np-genfromtxt" class="headerlink" title="np.genfromtxt"></a>np.genfromtxt</h4><figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">np.genfromtxt(<span class="string">'example.csv'</span>,delimiters = <span class="string">','</span>)</div><div class="line">##类似loatxt</div></pre></td></tr></table></figure><h3 id="写入文本文件"><a href="#写入文本文件" class="headerlink" title="写入文本文件"></a>写入文本文件</h3><figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">np.savetxt(<span class="string">'arr.csv'</span>,arr5,delimiter = <span class="string">','</span>)</div><div class="line">##自动写入了科学计算法</div><div class="line"></div><div class="line">np.savetxt(<span class="string">'arr.csv'</span>,arr5,delimiter = <span class="string">','</span>  ,fmt = <span class="string">'%.2f'</span>)</div><div class="line"></div><div class="line">np.savetxt(<span class="string">'arr.csv'</span>,arr5.reshape((<span class="number">2</span>,<span class="number">6</span>)),delimiter = <span class="string">','</span>  ,fmt = <span class="string">'%.2f'</span>)</div><div class="line">##修改形状后写入</div><div class="line"></div><div class="line">arr3 = np.random.random((<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>))</div><div class="line">##如果使用随机数，可能会报错，因为可能不是二维数组</div><div class="line">##如果数组为二维以上数组，必须转换为二维数组才能存储</div><div class="line"></div><div class="line">np.savetxt(<span class="string">'arr1.csv'</span>,arr3.reshape((<span class="number">4</span>,<span class="number">6</span>)),delimiter = <span class="string">','</span>)</div><div class="line">##解决办法，改变形状后，可以存进去</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h1&gt;&lt;p&gt;通过Anconda安装&lt;/p&gt;
&lt;h1 id=&quot;网页形式的编辑器&quot;&gt;&lt;a href=&quot;#网页形式的编辑器&quot; class=&quot;headerlin
      
    
    </summary>
    
      <category term="python" scheme="https://chumingke.github.io/categories/python/"/>
    
      <category term="numpy" scheme="https://chumingke.github.io/categories/python/numpy/"/>
    
    
      <category term="python" scheme="https://chumingke.github.io/tags/python/"/>
    
      <category term="numpy" scheme="https://chumingke.github.io/tags/numpy/"/>
    
  </entry>
  
  <entry>
    <title>Python2.7学习笔记（二）</title>
    <link href="https://chumingke.github.io//blog/2017/10/Python2-7-learning-notes-2.html"/>
    <id>https://chumingke.github.io//blog/2017/10/Python2-7-learning-notes-2.html</id>
    <published>2017-10-08T08:04:32.000Z</published>
    <updated>2017-10-08T08:05:05.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第二部分"><a href="#第二部分" class="headerlink" title="第二部分"></a>第二部分</h1><h2 id="高级特性"><a href="#高级特性" class="headerlink" title="高级特性"></a>高级特性</h2><h3 id="切片"><a href="#切片" class="headerlink" title="切片"></a>切片</h3><h3 id="迭代"><a href="#迭代" class="headerlink" title="迭代"></a>迭代</h3><p>1.如果给定一个list或tuple我们可以通过for循环来历遍这个list后者tuple。<br>这种历遍我们称为迭代（Iteration)<br>2.dict<br>由于dict的储存不是按照list的方式顺序排列，所以迭代出的结果顺序可能不一样。<br>默认dict迭代的是key,如果要迭代value：<br><figure class="highlight ceylon"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> <span class="keyword">value</span> <span class="keyword">in</span> d.itervalues()</div></pre></td></tr></table></figure></p><p>如果要同时迭代:<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> k,v <span class="keyword">in</span> d.iteritems()</div></pre></td></tr></table></figure></p><p>3.怎么判断是否可以迭代?<br>使用collections模块的iterable<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">form</span> collections import Iterable</div><div class="line"><span class="function"><span class="title">isinstanc</span><span class="params">(<span class="string">'abs'</span>,Iterable)</span></span></div></pre></td></tr></table></figure></p><p>4.下标循环<br>java通过下标循环<br>如果想在python中实现类似下标循环<br>内置的enumerate函数可以吧list编程索引-元素对<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> <span class="selector-tag">i</span>,value <span class="keyword">in</span> enumerate([<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>]):</div></pre></td></tr></table></figure></p><h3 id="列表生成式"><a href="#列表生成式" class="headerlink" title="列表生成式"></a>列表生成式</h3><p>1.列表生成式即List Comprehensions<br>内置的非常简单强大可以用来创建list的生成式<br>2.直接在列表里面写上公式<br><figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[ x*x for x <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">11</span>) <span class="keyword">if</span> x%<span class="number">2</span> == <span class="number">0</span> ]</div><div class="line">##还可以写两层循环，生成全排列</div><div class="line">##三层及以上使用较少</div></pre></td></tr></table></figure></p><p>3.列表生成式也可以使用两个变量生成list<br>4.最后把一个list中所有的字符串变小写</p><h3 id="生成器（Generator）"><a href="#生成器（Generator）" class="headerlink" title="生成器（Generator）"></a>生成器（Generator）</h3><p>1.如果列表元素可以按照某种算法推算出来，那我们是否可以在循环过程中不断推算出后续的元素而不必创建完整的list。python中这种一边循环一边计算的机制，称为生成器<br>2.只要把列表的[]改成（），就创建了一个generator<br>3.如果一个函数定义中包含yield关键字，那这个函数就是一个generator<br>4.generator和函数的执行流程不一样<br>函数是顺序执行，遇到return语句或者最后一行函数语句就返回。<br>而变成generator的函数，在每次调用next()的时候执行，遇到yield语句返回，再次执行时从上次返回的yield语句处继续执行。<br>5.generator是非常强大的工具<br>6.斐波那契数列<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">def fib(max):</div><div class="line">n,a,<span class="attribute">b</span>=0,0,1</div><div class="line"><span class="keyword">while</span> n &lt; max:</div><div class="line"><span class="builtin-name">print</span> b</div><div class="line">a,<span class="attribute">b</span>=b,a+b</div><div class="line">n = n+1</div></pre></td></tr></table></figure></p><p>7.将斐波那契数列函数改为generator<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">##将print <span class="keyword">b </span>改为<span class="keyword">yield </span><span class="keyword">b</span></div><div class="line"><span class="keyword">def </span>fib(max):</div><div class="line">n,a,<span class="keyword">b=0,0,1</span></div><div class="line"><span class="keyword">while </span>n &lt; max:</div><div class="line"><span class="keyword">yield </span><span class="keyword">b</span></div><div class="line"><span class="keyword">a,b=b,a+b</span></div><div class="line"><span class="keyword">n </span>= n+<span class="number">1</span></div></pre></td></tr></table></figure></p><h2 id="函数式编程"><a href="#函数式编程" class="headerlink" title="函数式编程"></a>函数式编程</h2><h3 id="高阶函数（Higher-order-function）"><a href="#高阶函数（Higher-order-function）" class="headerlink" title="高阶函数（Higher-order function）"></a>高阶函数（Higher-order function）</h3><h4 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h4><p>1.变量可以指向函数<br>2.函数名也是变量<br>如果不慎将固定函数名指向其他变量，想要恢复只能重启python交互环境。<br>3.传入函数<br>将函数作为另一个函数的参数：高阶函数。</p><h4 id="map-reduce"><a href="#map-reduce" class="headerlink" title="map/reduce"></a>map/reduce</h4><h5 id="map"><a href="#map" class="headerlink" title="map"></a>map</h5><p>1.接受两个参数，第一个是函数，一个是序列<br>2.map将传入的函数一次作用到序列的每个元素，并把结果作为新的list返回<br>3.不改变原列表，返回新列表</p><h5 id="reduce"><a href="#reduce" class="headerlink" title="reduce"></a>reduce</h5><p>1.把一个函数作用在一个序列上，该函数必须接收两个参数，并把结果和序列的下一个参数做累计计算<br>2.例如阶乘<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">reduce(<span class="name">f</span>,[ x1,x2,x3,x4])   =    f(<span class="name">f</span>(<span class="name">f</span>(<span class="name">x1</span>,x2),x3),x4)</div></pre></td></tr></table></figure></p><p>3.可以写一个把字符串转化为整数的函数</p><h4 id="filter"><a href="#filter" class="headerlink" title="filter"></a>filter</h4><p>1.用于过滤序列<br>筛选函数<br>2.也是接收一个函数和一个序列，并把函数依次作用于每个元素，根据返回值是True还是False决定保留还是丢弃该元素<br>3.在一个list中，删掉偶数，只保留奇数，可以这么写<br>4.把一个序列中的空字符串删掉，可以这么写</p><h4 id="sorted"><a href="#sorted" class="headerlink" title="sorted"></a>sorted</h4><p>1.排序算法<br>2.通常规定，对于两个元素xy,如果认为x &lt; y,则返回-1，如果认为x == y ,则返回0，如果认为x&gt;y，则返回1<br>3.可以sorted()直接排序<br>4.sorted也是一个高阶函数，同样可以接收一个比较函数来实现自定义的排序<br>如果要倒序排序<br>如果要按字母序排序字符串</p><h3 id="返回函数"><a href="#返回函数" class="headerlink" title="返回函数"></a>返回函数</h3><p>1.高阶函数除了可以接受函数作为参数外，还可以把函数作为结果值返回<br>2.我们来实现一个可变参数的求和<br>通常情况下<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">calc_sum</span><span class="params">(*args)</span></span><span class="symbol">:</span></div><div class="line">    ax = <span class="number">0</span></div><div class="line">   <span class="keyword">for</span> n <span class="keyword">in</span> <span class="symbol">args:</span></div><div class="line">        ax = ax+n</div><div class="line">   <span class="keyword">return</span> ax</div></pre></td></tr></table></figure></p><p>如果不需要立即求和，而是在后面的代码中，根据需要再计算，可以不返回求和结果，而返回求和函数<br>这种称为“闭包（closure)”的程序结构拥有极大威力<br>例子<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">lazy_sum</span><span class="params">(*args)</span></span><span class="symbol">:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sum</span><span class="params">()</span></span><span class="symbol">:</span></div><div class="line">        ax = <span class="number">0</span></div><div class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> <span class="symbol">args:</span></div><div class="line">            ax = ax +n</div><div class="line">        <span class="keyword">return</span> ax</div><div class="line">    <span class="keyword">return</span> sum</div></pre></td></tr></table></figure></p><p>当我们调用lazy_sum（）时，返回的并不是求和结果，而是求和函数<br>3.返回函数不要引用任何循环变量，或者后续会发生变化的变量<br>4.如果一定要引用，方法是再创建一个函数，用该函数的参数绑定循环变量当前的值，无论该循环变量后续如何更改，已绑定到函数参数的值不变，缺点是代码比较长，可利用lambda函数缩短代码。</p><h3 id="匿名函数lambda"><a href="#匿名函数lambda" class="headerlink" title="匿名函数lambda"></a>匿名函数lambda</h3><figure class="highlight llvm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">map ( lambda <span class="keyword">x</span>: <span class="keyword">x</span>*<span class="keyword">x</span>,[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>])</div><div class="line">lambda <span class="keyword">x</span>: <span class="keyword">x</span>*<span class="keyword">x</span></div><div class="line">##等价于:</div><div class="line">def f(<span class="keyword">x</span>)</div><div class="line">    return <span class="keyword">x</span>*<span class="keyword">x</span></div><div class="line">##<span class="keyword">x</span>表示函数参数</div></pre></td></tr></table></figure><p>匿名函数有个限制，只能有一个表达式，不用写return,返回值就是该表达式的结果。</p><h3 id="装饰器-Decorator"><a href="#装饰器-Decorator" class="headerlink" title="装饰器(Decorator)"></a>装饰器(Decorator)</h3><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><p>1.函数也是对象，函数对象可以被赋值给变量，所以可以通过变量调用函数<br>2.函数有一个<strong>name</strong>属性，可以获取函数名<br>3.现在我们要增强一个函数的功能，比如，在函数前后自动打印日志。又不想修改该函数的定义，这种在代码运行期间动态增加功能的方式，我们称之为装饰器<br>4.本质上，Decorator就是一个返回函数的高阶函数</p><h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><figure class="highlight autoit"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">import functools</div><div class="line">def <span class="built_in">log</span>(<span class="function"><span class="keyword">func</span>):</span></div><div class="line">    <span class="symbol">@functools</span>.wraps(<span class="function"><span class="keyword">func</span>)</span></div><div class="line">    def wrapper(*args, **kw):</div><div class="line">        print <span class="string">'call %s():'</span> % <span class="function"><span class="keyword">func</span>.<span class="title">__name__</span></span></div><div class="line">        <span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">(*args, **kw)</span></span></div><div class="line">    <span class="keyword">return</span> wrapper</div></pre></td></tr></table></figure><h3 id="偏函数"><a href="#偏函数" class="headerlink" title="偏函数"></a>偏函数</h3><h4 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a>概念</h4><blockquote><p>python的 functools 模块提供了很多有用的功能，其中一个就是偏函数 （Partial function) 。此处偏函数和数学意义上的不一样。<br>偏函数可以类似设定参数默认值，降低函数调用的难度。</p><h4 id="例子-1"><a href="#例子-1" class="headerlink" title="例子"></a>例子</h4><p>1.int函数提供额外的base参数，默认为10，可以做N进制转换：<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">int ('<span class="number">12345</span>' ,base = <span class="number">8</span>)</div><div class="line"><span class="number">5349</span></div><div class="line">int ('<span class="number">12345</span>' ,<span class="number">16</span>)</div><div class="line"><span class="number">74565</span></div></pre></td></tr></table></figure></p></blockquote><p>2.假如要转换大量的二进制字符串，每次都传入int(x,base=2）非常麻烦，于是，我们想到可以定义一个int2()的函数<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">int2</span> <span class="params">(x,base =<span class="number">20</span></span></span></div><div class="line"><span class="function"><span class="params">    <span class="keyword">return</span> int(x,base)</span></span></div></pre></td></tr></table></figure></p><p>3.functools.partial可以帮助我们创建偏函数，不需要自己定义int2()<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">import functools</div><div class="line">int2 = functools.<span class="keyword">partial</span>(<span class="keyword">int</span>,<span class="keyword">base</span> =<span class="number">2</span>)</div></pre></td></tr></table></figure></p><p>4.简单地说，functools.partial的作用就是，把一个函数的某些参数给固定住（也就是设置默认值），返回一个新的函数，调用会更简单）<br>5.注意上面新的int2函数，仅仅是把base参数重新设定默认值为2，但也可以在函数调用时传入其他值</p><blockquote><p>当函数的参数个数太多，需要简化时，使用functools.partial创建一个新函数，这个新函数可以固定住原函数的部分参数</p><h2 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h2><h3 id="使用模块"><a href="#使用模块" class="headerlink" title="使用模块"></a>使用模块</h3><h4 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h4><p>一个.py文件就称之为一个模块（Module）</p><h4 id="包（Package）"><a href="#包（Package）" class="headerlink" title="包（Package）:"></a>包（Package）:</h4><p>1.你也许还想到，如果不同的人编写的模块名相同怎么办？为了避免模块名冲突，Python又引入了按目录来组织模块的方法，称为包（Package）</p></blockquote><p>2.引入了包以后，只要顶层的包名不与别人冲突，那所有模块都不会与别人冲突。现在，abc.py模块的名字就变成了mycompany.abc，类似的，xyz.py的模块名变成了mycompany.xyz</p><p>3.每一个包目录下面都会有一个<strong>init</strong>.py的文件<br>这个文件是必须存在的，否则，Python就把这个目录当成普通目录，而不是一个包。<br><strong>init</strong>.py可以是空文件，也可以有Python代码<br>因为<strong>init</strong>.py本身就是一个模块，而它的模块名就是mycompany<br>类似的，可以有多级目录，组成多级层次的包结构<br>文件www.py的模块名就是mycompany.web.www</p><h4 id="例子-2"><a href="#例子-2" class="headerlink" title="例子"></a>例子</h4><figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">#!/usr/bin/env python   </div><div class="line">##第<span class="number">1</span>行和第<span class="number">2</span>行是标准注释，第<span class="number">1</span>行注释可以让这个hello.py文件直接在Unix/Linux/Mac上运行</div><div class="line"># -*- coding: utf<span class="number">-8</span> -*-</div><div class="line">##第<span class="number">2</span>行注释表示.py文件本身使用标准UTF<span class="number">-8</span>编码；</div><div class="line"></div><div class="line"><span class="string">' a test module '</span>         </div><div class="line">##第<span class="number">4</span>行是一个字符串，表示模块的文档注释，任何模块代码的第一个字符串都被视为模块的文档注释；</div><div class="line"></div><div class="line">__author__ = <span class="string">'Michael Liao'</span></div><div class="line">##第<span class="number">6</span>行使用__author__变量把作者写进去，这样当你公开源代码后别人就可以瞻仰你的大名；                                       </div><div class="line">##以上就是Python模块的标准文件模板，当然也可以全部删掉不写，但是，按标准办事肯定没错。</div><div class="line"><span class="keyword">import</span> sys                    ##导入该模块</div><div class="line">def test():</div><div class="line">    args = sys.argv</div><div class="line">    <span class="keyword">if</span> len(args)==<span class="number">1</span>:</div><div class="line">        print <span class="string">'Hello, world!'</span></div><div class="line">    elif len(args)==<span class="number">2</span>:</div><div class="line">        print <span class="string">'Hello, %s!'</span> % args[<span class="number">1</span>]</div><div class="line">    else:</div><div class="line">        print <span class="string">'Too many arguments!'</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</div><div class="line">##当我们在命令行运行hello模块文件时，Python解释器把一个特殊变量__name__置为__main__，而如果在其他地方导入该hello模块时，<span class="keyword">if</span>判断将失败，因此，这种<span class="keyword">if</span>测试可以让一个模块通过命令行运行时执行一些额外的代码，最常见的就是运行测试。</div><div class="line">##直接在命令行，可以调用</div><div class="line">##在交互环境，仅导入不能运行函数，需要调用</div><div class="line">    test()</div></pre></td></tr></table></figure><h4 id="别名"><a href="#别名" class="headerlink" title="别名"></a>别名</h4><p>1.导入模块时，还可以使用别名，这样，可以在运行时根据当前环境选择最合适的模块<br>2.比如Python标准库一般会提供StringIO和cStringIO两个库<br>3.两个库的接口和功能是一样的，但是cStringIO是C写的，速度更快<br>所以，你会经常看到这样的写法:<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">try</span>:</div><div class="line">    <span class="keyword">import</span> cStringIO <span class="keyword">as</span> <span class="type">StringIO</span></div><div class="line"><span class="keyword">except</span> <span class="type">ImportError</span>: <span class="comment"># 导入失败会捕获到ImportError</span></div><div class="line">    <span class="keyword">import</span> <span class="type">StringIO</span></div></pre></td></tr></table></figure></p><p>这样就可以优先导入cStringIO。如果有些平台不提供cStringIO，还可以降级使用StringIO。导入cStringIO时，用import … as …指定了别名StringIO，因此，后续代码引用StringIO即可正常工作</p><p>4.还有类似simplejson这样的库，在Python 2.6之开始内置，所以，会有这样的写法：<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">try</span>:</div><div class="line">    <span class="keyword">import</span> json <span class="comment"># python &gt;= 2.6</span></div><div class="line"><span class="keyword">except</span> <span class="type">ImportError</span>:</div><div class="line">    <span class="keyword">import</span> simplejson <span class="keyword">as</span> json <span class="comment"># python &lt;= 2.5</span></div></pre></td></tr></table></figure></p><p>5.由于Python是动态语言，函数签名一致接口就一样，因此，无论导入哪个模块后续代码都能正常工作。</p><h4 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h4><p>在一个模块中，我们可能会定义很多函数和变量<br>1.有的函数和变量我们希望给别人使用</p><p>正常的函数和变量名是公开的（public），可以被直接引用<br>比如：abc，x123，PI等</p><p>2.有的函数和变量我们希望仅仅在模块内部使用<br>在Python中，是通过_前缀来实现的<br>类似<strong>xxx</strong>这样的变量是特殊变量，可以被直接引用，但是有特殊用途<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">比如上面的<span class="strong">__author__</span>，<span class="strong">__name__</span>就是特殊变量</div><div class="line">hello模块定义的文档注释也可以用特殊变量<span class="strong">__doc__</span>访问</div><div class="line">我们自己的变量一般不要用这种变量名</div></pre></td></tr></table></figure></p><p>类似_xxx和__xxx这样的函数或变量就是非公开的（private），不应该被直接引用<br><figure class="highlight sqf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">比如<span class="variable">_abc</span>，<span class="variable">__abc</span>等</div></pre></td></tr></table></figure></p><p>从编程习惯上不应该引用private函数或变量<br>例子<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">_private_1</span><span class="params">(name)</span>:</span></div><div class="line">    <span class="keyword">return</span> <span class="string">'Hello, %s'</span> % name</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">_private_2</span><span class="params">(name)</span>:</span></div><div class="line">    <span class="keyword">return</span> <span class="string">'Hi, %s'</span> % name</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">greeting</span><span class="params">(name)</span>:</span></div><div class="line">    <span class="keyword">if</span> len(name) &gt; <span class="number">3</span>:</div><div class="line">        <span class="keyword">return</span> _private_1(name)</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        <span class="keyword">return</span> _private_2(name)</div></pre></td></tr></table></figure></p><p>我们在模块里公开greeting()函数，而把内部逻辑用private函数隐藏起来了。<br>这样，调用greeting()函数不用关心内部的private函数细节。<br>这也是一种非常有用的代码封装和抽象的方法。<br>即：外部不需要引用的函数全部定义成private，只有外部需要引用的函数才定义为public。</p><h3 id="使用第三方模块"><a href="#使用第三方模块" class="headerlink" title="使用第三方模块"></a>使用第三方模块</h3><h3 id="使用future"><a href="#使用future" class="headerlink" title="使用future"></a>使用<strong>future</strong></h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;第二部分&quot;&gt;&lt;a href=&quot;#第二部分&quot; class=&quot;headerlink&quot; title=&quot;第二部分&quot;&gt;&lt;/a&gt;第二部分&lt;/h1&gt;&lt;h2 id=&quot;高级特性&quot;&gt;&lt;a href=&quot;#高级特性&quot; class=&quot;headerlink&quot; title=&quot;高级特性&quot;&gt;&lt;/a
      
    
    </summary>
    
      <category term="python" scheme="https://chumingke.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https://chumingke.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python2.7 learning notes</title>
    <link href="https://chumingke.github.io//blog/2017/10/Python2-7-learning-notes-1.html"/>
    <id>https://chumingke.github.io//blog/2017/10/Python2-7-learning-notes-1.html</id>
    <published>2017-10-08T08:03:58.000Z</published>
    <updated>2017-10-08T08:03:58.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Python2.7学习笔记（一）</title>
    <link href="https://chumingke.github.io//blog/2017/10/Python2-7-learning-notes.html"/>
    <id>https://chumingke.github.io//blog/2017/10/Python2-7-learning-notes.html</id>
    <published>2017-10-08T06:16:27.000Z</published>
    <updated>2017-10-08T06:17:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>廖老师的教程<a href="https://www.liaoxuefeng.com" target="_blank" rel="external">https://www.liaoxuefeng.com</a></p><h1 id="第一部分"><a href="#第一部分" class="headerlink" title="第一部分"></a>第一部分</h1><h2 id="python简介"><a href="#python简介" class="headerlink" title="python简介"></a>python简介</h2><p>优缺点</p><h2 id="安装python"><a href="#安装python" class="headerlink" title="安装python"></a>安装python</h2><p>python解释器：<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">Python</span></div><div class="line"><span class="attribute">IPython</span></div><div class="line"><span class="attribute">JPython</span></div><div class="line"><span class="attribute">CPython</span></div><div class="line"><span class="attribute">ironPython</span></div></pre></td></tr></table></figure></p><h2 id="第一个python程序"><a href="#第一个python程序" class="headerlink" title="第一个python程序"></a>第一个python程序</h2><h3 id="使用文本编辑器"><a href="#使用文本编辑器" class="headerlink" title="使用文本编辑器"></a>使用文本编辑器</h3><p>推荐两个:<br>Sublime Text——免费<br>Notepad++——免费 中文界面</p><h3 id="运行py"><a href="#运行py" class="headerlink" title="运行py"></a>运行py</h3><p>终端如何使用py文件：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#定位到根目录下</span></span></div><div class="line">cd ...untitled</div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#然后 python helloworld.py</span></span></div></pre></td></tr></table></figure></p><p>怎么直接运行py<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash">!/usr/bin/env python    <span class="comment">##首先要在.py文件的第一行加上</span></span></div><div class="line"><span class="meta">$</span><span class="bash">  chmod a+x hello.py    <span class="comment">##然后通过命令</span></span></div></pre></td></tr></table></figure></p><h3 id="输入和输出"><a href="#输入和输出" class="headerlink" title="输入和输出"></a>输入和输出</h3><p>输出：print<br>输入：raw_input()</p><h2 id="python基础"><a href="#python基础" class="headerlink" title="python基础"></a>python基础</h2><h3 id="关于缩进"><a href="#关于缩进" class="headerlink" title="关于缩进"></a>关于缩进</h3><p>缩进的坏处是“复制-粘贴”功能失效了。<br>粘贴后必须重新检查缩进是否正确。</p><h3 id="数据类型和变量"><a href="#数据类型和变量" class="headerlink" title="数据类型和变量"></a>数据类型和变量</h3><h4 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h4><p>整数，浮点数，字符串，布尔值，空值</p><blockquote><p>计算机使用二进制，所以有时候使用十六进制表示整数比较方便。<br>十六进制用0x前缀和0-9，a-f表示。例如：0xff00</p><h4 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h4><p>1.同一个变量可以被反复赋值，而且可以是不同类型的变量<br>这种变量本身不固定的语言称之为动态语言。<br>与之对应的是静态语言<br>静态语言在定义变量时必须制定变量类型，如果不匹配就会报错。例如java。<br>例如：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">int <span class="selector-tag">a</span> =<span class="number">123</span>        #<span class="selector-id">#a</span> 是整数类型变量</div><div class="line"><span class="selector-tag">a</span> = <span class="string">"ABC"</span>         ##会报错</div></pre></td></tr></table></figure></p></blockquote><p>2.理解变量在计算机内存中的表示<br>当我们写：a = ‘ABC’时，python干了两件事：<br><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">在内存中创建了一个‘ABC'的字符串</span></div><div class="line"><span class="comment">在内存中创建了一个名为a的变量，并指向‘ABC’</span></div></pre></td></tr></table></figure></p><p>也可以把一个变量a赋值给另一个变量b，这个操作实际上是把变量b指向变量a所指向的数据。<br>所以当给a重新赋值，就是让a指向别的值，对b无影响。</p><h4 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h4><p>通常用全部大写的变量名表示常量</p><h3 id="字符串和编码"><a href="#字符串和编码" class="headerlink" title="字符串和编码"></a>字符串和编码</h3><h4 id="字符编码"><a href="#字符编码" class="headerlink" title="字符编码"></a>字符编码</h4><p>因为计算机只能处理数字，要处理文本，就必须将文本转换为数字。</p><blockquote><p>最早计算机设计采用8个比特作为一个字节，所以一个字节能表示最大的整数是255。二进制11111111=十进制255。如果要表示更大的整数，就必须用更多字节<br>最早美国英文、数字、符号，使用ASCII编码。比如A的编码是65.小写字母z是122，127个字母。<br><figure class="highlight excel"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">GB2312</span>——中文</div><div class="line">Shift_JIS——日文</div><div class="line">Euc-kr——韩文</div><div class="line"><span class="built_in">Unicode</span>——所有语言</div><div class="line">UTF-<span class="number">8</span>——可变长编码</div></pre></td></tr></table></figure></p></blockquote><p>如果统一用unicode，虽然解决乱码问题<br>如果写的文本都是英文的话，使用unicode比ASCII需要多一倍的空间。<br>因此出现了把unicode编码转化成“可变长编码”的UTF-8。</p><blockquote><p>总结下现在计算机系统通用的字符编码工作方式<br>计算机内存中，统一使用Unicode编码<br>当需要保存到硬盘或者需要传输的时候，就转换为UTF-8编码<br>用记事本编辑的时候，从文件读取的UTF-8字符被转换为Unicode字符存到内存里，编辑完成后，保存的时候再把Unicode转化为UTF-8保存到文件<br>浏览网页的时候，服务器会把动态生成的Unicode内容转换为UTF-8再传输到浏览器</p><h4 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h4><p>1.最早python支持ASCII编码<br>把字母和对应的数字相互转换<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="title">ord</span><span class="params">()</span></span></div><div class="line"><span class="function"><span class="title">chr</span><span class="params">()</span></span></div></pre></td></tr></table></figure></p></blockquote><p>2.后来添加了对Unicode的支持<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">print</span> <span class="string">u'中文'</span>——中文</div><div class="line"><span class="string">u'中'</span>——<span class="string">u'\u4e2d'</span></div><div class="line"><span class="comment">##写u'中'和u'\u4e2d'是一样的</span></div><div class="line"><span class="comment">##\u后面是十六进制的Unicode码</span></div></pre></td></tr></table></figure></p><p>两种字符串如何转换？<br>字符串‘xxx’虽然是ASCII编码，但也可以看成UTF-8编码。但u’xxx’只能使Unicode编码。<br>把u’xxx’转换为UTF-8编码的‘xxx’用encode(‘utf-8’)方法：<br><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">u'ABC'.encode('utf-8')——'ABC'</div><div class="line">##英文字符转换后表示的UTF-8的值和Unicode值相等（但占据的储存空间不同）</div><div class="line">u'中文‘.encode('utf-8')——'<span class="symbol">\x</span>e4<span class="symbol">\x</span>b8<span class="symbol">\x</span>ad<span class="symbol">\x</span>e6<span class="symbol">\x</span>96<span class="symbol">\x</span>87'</div><div class="line">##中文字符转换后1个Unicode字符将变为3个UTF-8字符</div><div class="line">##<span class="symbol">\x</span>e4就是其中一个字节，它的值是228.没有对应字母可以显示，所以十六进制显示字节的数值</div><div class="line">len('<span class="symbol">\x</span>e4<span class="symbol">\x</span>b8<span class="symbol">\x</span>ad<span class="symbol">\x</span>e6<span class="symbol">\x</span>96<span class="symbol">\x</span>87')——6</div><div class="line">##len（）函数可以返回字符串的长度</div></pre></td></tr></table></figure></p><p>反过来把UTF-8编码表示的字符串’xxx’转换为Unicode字符串u’xxx’用decode(‘utf-8’)方法：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="string">'abc'</span>.decode(<span class="string">'utf-8'</span>)——<span class="string">u'abc'</span></div><div class="line"><span class="string">'\xe4\xb8\xad\xe6\x96\x87'</span>.decode(<span class="string">'utf-8'</span>)——<span class="string">u'\u4e2d\u6587'</span></div><div class="line"><span class="keyword">print</span> <span class="string">'\xe4\xb8\xad\xe6\x96\x87'</span>.decode(<span class="string">'utf-8'</span>)——中文</div></pre></td></tr></table></figure></p><p>3.保存为UTF-8编码<br>由于python源代码也是一个文本文件，所以，当你源代码中包含中文的时候，在保存源代码时，务必制定保存为UTF-8编码。<br>通常在文件开头写两行：<br><figure class="highlight mel"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">#！/usr/bin/<span class="keyword">env</span> <span class="keyword">python</span></div></pre></td></tr></table></figure></p><p>告诉Linux/OS X系统，这是一个python可执行程序，windows系统会忽略这个注释<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> -*- coding:utf-8 -*-</span></div></pre></td></tr></table></figure></p><p>告诉python解释器，按照UTF-8编码读取源代码，否则，在源代码中写的中文输出可能会有乱码</p><blockquote><p>如果你使用Notepad++进行编辑，除了要加上#-<em>- coding:utf-8 -</em>-外，中文字符串必须是Unicode字符串。<br>声明了UTF-8编码也并不意味着你的.py文件就是UTF-8编码，必须却把Notepad++正在使用UTF-8without BOM编码</p></blockquote><p>4.格式化<br>%？占位符<br>常见占位符：<br><figure class="highlight mojolicious"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="xml"></span><span class="perl">%d整数、%f浮点数、%s字符串、%x十六进制整数</span><span class="xml"></span></div></pre></td></tr></table></figure></p><p>其中整数还有浮点数能指定是否补0和整数与小数之间的位数<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">'%<span class="number">2</span>d-%<span class="number">02</span>d' % (<span class="number">3</span>,<span class="number">1</span>)——'<span class="number">3</span><span class="number">-01</span>'</div><div class="line">'%<span class="number">.2</span>f' % <span class="number">3.1415926</span>——'<span class="number">3.14</span>'</div></pre></td></tr></table></figure></p><p>如果不确定用什么，用%s，%s把任何类型转化为字符串。<br>对于unicode字符串，用法一样，最好替换的字符串也是Unicode ：<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">u'Hi, %s'</span> % <span class="string">u'Michael——u'</span>Hi,Michael<span class="string">'</span></div></pre></td></tr></table></figure></p><p>那怎么表示%？<br>转义，用%%表示一个%<br><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="string">'growth rate: %d %%'</span> <span class="comment">% 7</span></div><div class="line"><span class="string">'growth rate :7%'</span></div></pre></td></tr></table></figure></p><p>5.python也支持其他编码方式，没有特殊要求不用</p><h3 id="使用list和tuple"><a href="#使用list和tuple" class="headerlink" title="使用list和tuple"></a>使用list和tuple</h3><h4 id="list"><a href="#list" class="headerlink" title="list"></a>list</h4><h5 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h5><p>1.最后一个元素的索引是<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="title">len</span><span class="params">(classmates)</span></span>-<span class="number">1</span></div></pre></td></tr></table></figure></p><p>2.list里面的元素数据类型可以不同<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">L</span>=[<span class="string">'Apple'</span>,<span class="number">123</span>,,<span class="literal">True</span>]</div></pre></td></tr></table></figure></p><p>3.list里面的元素可以是另一个list<br>二维数组概念</p><h5 id="查"><a href="#查" class="headerlink" title="查"></a>查</h5><p>用索引</p><h5 id="增"><a href="#增" class="headerlink" title="增"></a>增</h5><p>1.添加到末尾<br>append<br><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">classmates.<span class="built_in">append</span>(<span class="string">'Adam'</span>)</div></pre></td></tr></table></figure></p><p>2.插入指定位置<br>insert<br><figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">classmates</span><span class="selector-class">.insert</span>(<span class="number">1</span>,<span class="string">'jack'</span>)</div></pre></td></tr></table></figure></p><h5 id="删"><a href="#删" class="headerlink" title="删"></a>删</h5><p>1.要删除list末尾的元素<br>pop<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">classmates</span><span class="selector-class">.pop</span>()</div></pre></td></tr></table></figure></p><p>2.删除指定位置的元素<br>pop(i)<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">classmates</span><span class="selector-class">.pop</span>(1)</div></pre></td></tr></table></figure></p><h5 id="改"><a href="#改" class="headerlink" title="改"></a>改</h5><p>替换<br>直接赋值给对应索引位置<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">classmates[1]</span> = <span class="string">'Sarah'</span></div></pre></td></tr></table></figure></p><h4 id="tuple"><a href="#tuple" class="headerlink" title="tuple"></a>tuple</h4><h5 id="属性-1"><a href="#属性-1" class="headerlink" title="属性"></a>属性</h5><p>1.初始化后不可修改<br>2.因为不可变，所以代码更安全，如果可能，尽量用tuple<br>3.当tuple中只有一个元素，初始化的时候必须加逗号<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">t</span> = (<span class="number">1</span>,)</div></pre></td></tr></table></figure></p><h5 id="查-1"><a href="#查-1" class="headerlink" title="查"></a>查</h5><p>用索引</p><h5 id="没有增删改"><a href="#没有增删改" class="headerlink" title="没有增删改"></a>没有增删改</h5><h5 id="可变的-tuple"><a href="#可变的-tuple" class="headerlink" title="可变的 tuple"></a>可变的 tuple</h5><p>1.当tuple中包含可变元素例如list<br>2.tuple指向不变<br>3.如果要创建一个内容也不不变的tuple怎么做？<br>必须保证tuple中每个元素也不可变</p><h3 id="条件判断和循环"><a href="#条件判断和循环" class="headerlink" title="条件判断和循环"></a>条件判断和循环</h3><h4 id="条件判断"><a href="#条件判断" class="headerlink" title="条件判断"></a>条件判断</h4><p>if</p><h4 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h4><p>1.for<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">range()</div><div class="line">##生成整数序列[<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</div></pre></td></tr></table></figure></p><p>2.while<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">raw_input</div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#注意该方法永远以字符串的形式返回</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#如果有需要要将字符串转换</span></span></div><div class="line">birth= int (raw_input('birth: '))</div></pre></td></tr></table></figure></p><h3 id="使用dict和set"><a href="#使用dict和set" class="headerlink" title="使用dict和set"></a>使用dict和set</h3><h4 id="dict"><a href="#dict" class="headerlink" title="dict"></a>dict</h4><h5 id="属性-2"><a href="#属性-2" class="headerlink" title="属性"></a>属性</h5><p>1.键值对<br>2.需要牢记</p><ul><li>dict的key必须是不可变对象</li><li>这种通过key计算位置的算法称为哈希算法（Hash)<br>3.如果key不存在会报错<figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">##通过<span class="keyword">in</span>判断是否存在</div><div class="line"><span class="string">'Thomas'</span> <span class="keyword">in</span> d——<span class="literal">False</span></div><div class="line">##通过dict提供的get方法，不存在，返回None或者自己指定value</div><div class="line">d.get(<span class="string">'Thomas'</span>)    ##返回None的时候，交互式命令行不显示结果</div><div class="line">d.get(<span class="string">'Tmoas'</span>,<span class="number">-1</span>)       ##<span class="number">-1</span></div></pre></td></tr></table></figure></li></ul><p>4.和list区别<br>查找、插入速度极快，不会随着Key的增加而增加。<br>需要占用大量内存，内存浪费多。<br>5.list特点<br>查找和插入时间随元素的增加而增加。<br>占用时间小，浪费内存少。</p><h5 id="查-2"><a href="#查-2" class="headerlink" title="查"></a>查</h5><p>用key</p><h5 id="增-1"><a href="#增-1" class="headerlink" title="增"></a>增</h5><p>1.初始化指定<br>2.通过key放入<br><figure class="highlight prolog"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">d[<span class="string">'Adam'</span>]=<span class="number">67</span></div></pre></td></tr></table></figure></p><h5 id="删-1"><a href="#删-1" class="headerlink" title="删"></a>删</h5><p>pop(key)方法<br><figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">d.pop(<span class="string">'Bob'</span>)          ##<span class="number">75</span></div></pre></td></tr></table></figure></p><h5 id="改-1"><a href="#改-1" class="headerlink" title="改"></a>改</h5><p>一个key对应一个value，多次放入，后面的值会把前面的值冲掉</p><h4 id="set"><a href="#set" class="headerlink" title="set"></a>set</h4><h5 id="属性-3"><a href="#属性-3" class="headerlink" title="属性"></a>属性</h5><p>1.和dict类似，也是一组Key的集合，但不储存value。由于key不能重复，所以，在set中，没有重复的key<br>2.重复的元素自动被过滤<br>3.set可以看成数学意义上的无序和无重复元素的集合<br>因此两个set可以做数学意义上的交集、并集等操作<br>4.与dict相比<br>唯一区别仅在于没有存储对应的value<br>同样不可以放入可变对象，因为无法判断两个可变对象是否相等，也就无法保证set内部不会有重复元素。</p><h5 id="增-2"><a href="#增-2" class="headerlink" title="增"></a>增</h5><p>1.初始化创建<br>需提供一个list作为输入集合<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">s=set([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</div><div class="line">s    ——set([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</div><div class="line">##注意，传入的参数【<span class="number">1</span>，<span class="number">2</span>，<span class="number">3</span>】是一个<span class="type">list</span>，而显示的set([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])只是告诉你这个set内部有<span class="number">1</span>，<span class="number">2</span>，<span class="number">3</span>这些元素，显示的[]不表示这是一个<span class="type">list</span></div></pre></td></tr></table></figure></p><p>2.add(key)方法添加<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">s.add(<span class="number">4</span>)</div><div class="line">s   ——set([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>])</div></pre></td></tr></table></figure></p><h5 id="删-2"><a href="#删-2" class="headerlink" title="删"></a>删</h5><p>remove(key)方法<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">s.remove</div><div class="line">s      ——<span class="builtin-name">set</span>([1,2,3])</div></pre></td></tr></table></figure></p><h5 id="改-2"><a href="#改-2" class="headerlink" title="改"></a>改</h5><p>1.交集<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">s1=set([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</div><div class="line">s2=set([<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>])</div><div class="line">s1 &amp; s2    ——set([<span class="number">2</span>,<span class="number">3</span>])</div></pre></td></tr></table></figure></p><p>2.并集<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">s1 | s2        ——set([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>])</div></pre></td></tr></table></figure></p><h5 id="查-3"><a href="#查-3" class="headerlink" title="查"></a>查</h5><h4 id="再议不可变对象"><a href="#再议不可变对象" class="headerlink" title="再议不可变对象"></a>再议不可变对象</h4><h5 id="list是可变"><a href="#list是可变" class="headerlink" title="list是可变"></a>list是可变</h5><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">a</span>=[<span class="string">'c'</span>,<span class="string">'b'</span>,<span class="string">'a'</span>]</div><div class="line"><span class="keyword">a</span>.<span class="built_in">sort</span>()</div><div class="line"><span class="keyword">a</span>    ——[<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>]</div></pre></td></tr></table></figure><h5 id="str是不变对象"><a href="#str是不变对象" class="headerlink" title="str是不变对象"></a>str是不变对象</h5><p>案例1<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">a</span>=<span class="string">'abc'</span></div><div class="line"><span class="keyword">a</span>.<span class="built_in">replace</span>(<span class="string">'a'</span>,<span class="string">'A'</span>)     ——<span class="string">'Abc'</span></div><div class="line"><span class="keyword">a</span>                      ——<span class="string">'abc'</span></div></pre></td></tr></table></figure></p><p>案例2<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">a</span> = <span class="string">'abc'</span></div><div class="line">b=<span class="selector-tag">a</span>.replace(<span class="string">'a'</span>,<span class="string">'A'</span>)</div><div class="line"><span class="selector-tag">b</span>                      ——<span class="string">'Abc'</span></div><div class="line"><span class="selector-tag">a</span>                      ——<span class="string">'abc'</span></div></pre></td></tr></table></figure></p><p>解释：<br>当调用replace时，replace作用在字符串对象‘abc’上，但是没有改变字符串‘abc’的内容，而是创建了一个新字符串’Abc’并返回。<br>用变量b指向新字符串就容易理解。<br>a仍然指向原有字符串，b则指向新字符串。<br>结论：<br>所以对于不变对象来说，调用对象自身的任意方法，都不会改变该对象自身的内容。<br>相反，这些方法会创建新的对象并返回。这样，就保证了不可变对象本身永远是不可变的。</p><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h3 id="调用函数"><a href="#调用函数" class="headerlink" title="调用函数"></a>调用函数</h3><p>1.数据类型转换函数——工厂函数+解码<br>2.将函数赋值给变量</p><h3 id="定义函数"><a href="#定义函数" class="headerlink" title="定义函数"></a>定义函数</h3><p>1.def<br>return返回<br>2.空函数<br>pass<br>3.参数检查<br>添加参数检查后，如果传入错误的参数诶性，函数就可以抛出一个错误<br><figure class="highlight ada"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">raise</span> TypeError(<span class="symbol">'bad</span> operand <span class="keyword">type</span>')</div></pre></td></tr></table></figure></p><p>4.返回多个值<br>其实是返回一个tuple</p><h3 id="函数的参数"><a href="#函数的参数" class="headerlink" title="函数的参数"></a>函数的参数</h3><h4 id="默认参数"><a href="#默认参数" class="headerlink" title="默认参数"></a>默认参数</h4><p>1.当函数有多个参数时，把变化大的参数放前面变化小的参数放后面，使用默认函数最大的好处是能降低调用函数的难度。<br>2.默认函数的坑<br>必须指向不可变对象<br>例如参数为list，每次调用list可能都会变化。<br>如何优化，调用前先把list归零。</p><h4 id="可变参数"><a href="#可变参数" class="headerlink" title="可变参数"></a>可变参数</h4><p>1.定义参数时在参数前加*<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">calc</span><span class="params">(*numbers)</span></span></div><div class="line"><span class="comment">##在函数内部，参数numbers接收到的是一个tuple</span></div></pre></td></tr></table></figure></p><p>2.可变参数允许你传入0个或任意个参数，这些可变参数在函数调用时自动组装为一个tuple。</p><h4 id="关键词参数"><a href="#关键词参数" class="headerlink" title="关键词参数"></a>关键词参数</h4><p>1.定义参数时在参数前加**<br>可以扩展函数的功能，如果调用者愿意提供更多的参数。<br>2.关键字参数允许你传入0个或任意个含参数名的参数，这些关键字参数在函数内部自动组装为一个dict。</p><h4 id="参数组合"><a href="#参数组合" class="headerlink" title="参数组合"></a>参数组合</h4><p>必选参数、默认参数、可变参数、关键字参数可以混合使用。<br>必须按照这种顺序定义。<br>另外，对于任意参数都可以通过类似func(<em>args,*</em>kw)的形式调用它。</p><h3 id="递归函数"><a href="#递归函数" class="headerlink" title="递归函数"></a>递归函数</h3><p>1.在函数内部，可以调用其他函数，如果一个函数在内部调用自己本身，这个函数就是递归函数<br>2.理论上，所有递归函数都可以写成循环的方式，但循环的逻辑不如递归清晰<br><figure class="highlight excel"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">def <span class="built_in">fact</span>(<span class="built_in">n</span>)</div><div class="line">return <span class="built_in">n</span>*<span class="built_in">fact</span>(<span class="built_in">n</span>-<span class="number">1</span>)</div></pre></td></tr></table></figure></p><p>3.使用递归函数需要注意防止栈溢出</p><blockquote><p>在计算机中，函数调用是通过栈（stack）这种数据结构实现的。<br>每当进入一个函数调用，栈就会加一层栈帧，当函数返回，栈就会减一层栈帧。<br>由于栈的大小不是无限的，所以递归调用的次数过多，会导致栈溢出。<br>试试fact(1000）</p></blockquote><p>解决递归调用栈溢出的方法是通过尾递归优化</p><blockquote><p>事实上尾递归和循环的效果是一样的，所以把循环看成一种特殊的尾递归函数也是可以的。<br>尾递归是指，在函数返回的时候，调用自身本身，并且return语句不能包含表达式。<br>这样编译器就可以把尾递归做优化，使递归本身无论调用多少次，都只占用一个栈帧，不会出现栈溢出的情况。</p></blockquote><p>遗憾的是，大部分编程语言没有针对尾递归做优化，python解释器也没有优化，所以即使把上面的函数改成尾递归方式，也会导致栈溢出</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;廖老师的教程&lt;a href=&quot;https://www.liaoxuefeng.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.liaoxuefeng.com&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;第一部分&quot;&gt;&lt;a href=&quot;#第一
      
    
    </summary>
    
      <category term="python" scheme="https://chumingke.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https://chumingke.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>如何利用pandas进行数据清洗？</title>
    <link href="https://chumingke.github.io//blog/2017/10/pandas-for-data-cleaning.html"/>
    <id>https://chumingke.github.io//blog/2017/10/pandas-for-data-cleaning.html</id>
    <published>2017-10-07T03:04:57.000Z</published>
    <updated>2017-10-07T03:06:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文为课程笔记。<br>参考网址：www.cnblogs.com/stream886/p/6021743.html</p><h1 id="数据重复值处理"><a href="#数据重复值处理" class="headerlink" title="数据重复值处理"></a>数据重复值处理</h1><h2 id="引入pandas"><a href="#引入pandas" class="headerlink" title="引入pandas"></a>引入pandas</h2><figure class="highlight elm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> pandas</div></pre></td></tr></table></figure><h2 id="数据载入"><a href="#数据载入" class="headerlink" title="数据载入"></a>数据载入</h2><h3 id="excel或csv-参数为路径"><a href="#excel或csv-参数为路径" class="headerlink" title="excel或csv,参数为路径"></a>excel或csv,参数为路径</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">pd</span><span class="selector-class">.read_excel</span>()</div><div class="line"><span class="selector-tag">pd</span><span class="selector-class">.read</span><span class="selector-class">.csv</span>()</div></pre></td></tr></table></figure><h3 id="数据库查询语句"><a href="#数据库查询语句" class="headerlink" title="数据库查询语句"></a>数据库查询语句</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attr">conn</span> = Mysqldb.connect(host=<span class="string">'127.0.0.1'</span>,user = <span class="string">'root'</span>,passwd = <span class="string">'123'</span>,db = <span class="string">'ca'</span>)</div><div class="line"><span class="attr">df</span> = pd.read_sql(<span class="string">'select * from ca_list'</span>, conn)</div><div class="line"><span class="comment">##参数1为sql语句，参数2为数据库链接对象</span></div></pre></td></tr></table></figure><h3 id="访问html来获取数据"><a href="#访问html来获取数据" class="headerlink" title="访问html来获取数据"></a>访问html来获取数据</h3><p>一般不会这么做，一般用爬虫<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">pd</span><span class="selector-class">.read_html</span>()</div></pre></td></tr></table></figure></p><h2 id="数据转换为dataframe对象"><a href="#数据转换为dataframe对象" class="headerlink" title="数据转换为dataframe对象"></a>数据转换为dataframe对象</h2><figure class="highlight perl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">lonadata = pd.DataFrame(df，<span class="keyword">index</span> = <span class="string">'id'</span>)</div><div class="line"><span class="keyword">print</span> lonadata试一下</div><div class="line"><span class="comment">##第一个参数为之前生成的数据对象，第二个参数是指定的索引</span></div></pre></td></tr></table></figure><h2 id="重复值的清洗"><a href="#重复值的清洗" class="headerlink" title="重复值的清洗"></a>重复值的清洗</h2><h3 id="检测重复值"><a href="#检测重复值" class="headerlink" title="检测重复值"></a>检测重复值</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">print</span> lonadata.duplicated()</div><div class="line">##有重复显示<span class="keyword">true</span>,无重复为<span class="keyword">false</span></div></pre></td></tr></table></figure><h3 id="删除重复值"><a href="#删除重复值" class="headerlink" title="删除重复值"></a>删除重复值</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">lonadata</span><span class="selector-class">.drop_duplicates</span>()</div></pre></td></tr></table></figure><h1 id="数据空值处理"><a href="#数据空值处理" class="headerlink" title="数据空值处理"></a>数据空值处理</h1><h2 id="数据载入-1"><a href="#数据载入-1" class="headerlink" title="数据载入"></a>数据载入</h2><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attr">df2</span> = pd.read_sql(<span class="string">'select * from ca_zwmc'</span>,conn,index_col = <span class="string">'ID'</span>)</div><div class="line"><span class="attr">lonadata2</span> = ph.DataFrame(df2)</div></pre></td></tr></table></figure><h2 id="查看是否有空值"><a href="#查看是否有空值" class="headerlink" title="查看是否有空值"></a>查看是否有空值</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="builtin-name">print</span> lonadata.isnull()</div><div class="line"><span class="comment">##如果当前数据存在空值，显示true</span></div><div class="line"><span class="builtin-name">print</span> lonadata.notnull()</div><div class="line"><span class="comment">##如果当前数据不存在空值，显示true</span></div></pre></td></tr></table></figure><h2 id="对于空数据的处理"><a href="#对于空数据的处理" class="headerlink" title="对于空数据的处理"></a>对于空数据的处理</h2><h3 id="填充数据"><a href="#填充数据" class="headerlink" title="填充数据"></a>填充数据</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">lonadata3= lonadata.fillna ( 0 ） </div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#填充0</span></span></div><div class="line">.fillna ( lonadata ['annual_inc ' ].mean() )  </div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#填平均值</span></span></div><div class="line">print lonadata3.isnull()</div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#检查一下</span></span></div></pre></td></tr></table></figure><h3 id="删除空值数据-把一行都删了）"><a href="#删除空值数据-把一行都删了）" class="headerlink" title="删除空值数据(把一行都删了）"></a>删除空值数据(把一行都删了）</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="builtin-name">print</span> lonadata.dropna()</div></pre></td></tr></table></figure><h1 id="数据间的空格处理"><a href="#数据间的空格处理" class="headerlink" title="数据间的空格处理"></a>数据间的空格处理</h1><h2 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h2><p>取出dataframe集合中单列数据，指定单列<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">print</span> lonadata[<span class="string">'zwyc_name'</span>]</div></pre></td></tr></table></figure></p><p>对于数据中出现乱码，老师采取了一个控制输入输出均为utf-8的代码<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">db</span> = conn.cursor()</div><div class="line"><span class="keyword">db</span>.excute(‘<span class="keyword">set</span> names utf8')</div></pre></td></tr></table></figure></p><h2 id="查看数据中空格"><a href="#查看数据中空格" class="headerlink" title="查看数据中空格"></a>查看数据中空格</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">print</span> lonadata2[<span class="string">'zwyc_name'</span>].value_counts()</div><div class="line"><span class="comment">##其实是统计相同数据出现多少次</span></div></pre></td></tr></table></figure><h2 id="处理空格"><a href="#处理空格" class="headerlink" title="处理空格"></a>处理空格</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">print lonadata2[<span class="string">'zwmc_name'</span>]<span class="selector-class">.map</span> ( str<span class="selector-class">.lstrip</span> )</div><div class="line">##去除左侧空格</div><div class="line">print lonadata2[<span class="string">'zwmc_name'</span>]<span class="selector-class">.map</span> ( str<span class="selector-class">.rstrip</span> )</div><div class="line">##去除右侧空格</div><div class="line">print lonadata2[<span class="string">'zwmc_name'</span>]<span class="selector-class">.map</span> ( str<span class="selector-class">.strip</span> )</div><div class="line">##去除两侧</div></pre></td></tr></table></figure><h1 id="大小写转换"><a href="#大小写转换" class="headerlink" title="大小写转换"></a>大小写转换</h1><figure class="highlight processing"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">print</span> lonadata2[<span class="string">'zwmc_name'</span>].<span class="built_in">map</span> ( <span class="built_in">str</span>.upper)</div><div class="line">##转换为大写</div><div class="line"><span class="built_in">print</span> lonadata2[<span class="string">'zwmc_name'</span>].<span class="built_in">map</span> ( <span class="built_in">str</span>.lower)</div><div class="line">##转换为小写</div><div class="line"><span class="built_in">print</span> lonadata2[<span class="string">'zwmc_name'</span>].<span class="built_in">map</span> ( <span class="built_in">str</span>.title)</div><div class="line">##首字母大写</div></pre></td></tr></table></figure><h1 id="异常和极端值"><a href="#异常和极端值" class="headerlink" title="异常和极端值"></a>异常和极端值</h1><h2 id="检测异常和极端值"><a href="#检测异常和极端值" class="headerlink" title="检测异常和极端值"></a>检测异常和极端值</h2><h3 id="快速统计方法"><a href="#快速统计方法" class="headerlink" title="快速统计方法"></a>快速统计方法</h3><figure class="highlight maxima"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">print</span> lonadata.<span class="built_in">describe</span> ()</div><div class="line">描述统计,通过最大值最小值等发现异常值</div></pre></td></tr></table></figure><h3 id="数据转换格式"><a href="#数据转换格式" class="headerlink" title="数据转换格式"></a>数据转换格式</h3><h4 id="转换为格式"><a href="#转换为格式" class="headerlink" title="转换为格式"></a>转换为格式</h4><figure class="highlight elm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np     ##需要引入Numpy</div><div class="line"><span class="title">print</span> lonadata.descripe () .<span class="keyword">as</span><span class="keyword">type</span>(np.int64)  ##astype</div></pre></td></tr></table></figure><h4 id="转换为时间格式"><a href="#转换为时间格式" class="headerlink" title="转换为时间格式"></a>转换为时间格式</h4><figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">print lonadata3 [ <span class="string">'datatime'</span> ]  ##输出看看</div><div class="line">print pd.to_datetime (lonadata3 [ <span class="string">'datatime'</span> ])</div><div class="line">##另外如果从数据库直接写入时间，就直接是datatime格式</div><div class="line">##大部分情况下不直接存时间格式，因为字符串格式比时间格式快，因为系统转换时间格式需要时间</div></pre></td></tr></table></figure><h4 id="显示数据格式"><a href="#显示数据格式" class="headerlink" title="显示数据格式"></a>显示数据格式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">print</span> lonadata3 [ <span class="string">'datatime'</span> ]. dtypes </div><div class="line"><span class="comment">##最后不用加空格，不是个方法，是个状态</span></div></pre></td></tr></table></figure><h3 id="索引和列转换"><a href="#索引和列转换" class="headerlink" title="索引和列转换"></a>索引和列转换</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">print</span> <span class="selector-tag">lonadata</span><span class="selector-class">.descripe</span> () <span class="selector-class">.astype</span>(<span class="selector-tag">np</span><span class="selector-class">.int64</span>)<span class="selector-class">.T</span>   ##<span class="selector-class">.T</span></div></pre></td></tr></table></figure><h2 id="异常值替换"><a href="#异常值替换" class="headerlink" title="异常值替换"></a>异常值替换</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">lonadata<span class="selector-class">.replace</span> ( [ <span class="number">100000</span>,<span class="number">36</span> ] , lonadata [ <span class="string">'loan_amnt'</span> ]<span class="selector-class">.mean</span> () )</div><div class="line">##把很大的<span class="number">100000</span>，还有很小的<span class="number">36</span>这类极端值替换为均值,均匀分布它们的值</div></pre></td></tr></table></figure><h1 id="更改数据类型"><a href="#更改数据类型" class="headerlink" title="更改数据类型"></a>更改数据类型</h1><p>数据转换格式</p><h1 id="数据分组"><a href="#数据分组" class="headerlink" title="数据分组"></a>数据分组</h1><p>根据范围分组<br><figure class="highlight makefile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">conn2 = Mysqldb.connect(host='127.0.0.1',user = 'root',passwd = '123',db = 'ca')      <span class="comment">##首先连接数据库</span></div><div class="line">db = conn.cursor()               <span class="comment">##设置好输入输出为utf-8</span></div><div class="line">db.excute(‘set names utf8')</div><div class="line">df4 = pd.read_sql('select * from ca_list', conn2，index_col = 'ID' )                    <span class="comment">##写好sql语句</span></div><div class="line">lonadata = pd.DataFrame(df4)      <span class="comment">##转换为dataframe对象</span></div><div class="line">bins = [0,5,10,15，20]                <span class="comment">##设定范围区间</span></div><div class="line">group_label = [u'访问低‘，u'正常访问‘，u'高访问’，u'受欢迎‘ ]                               <span class="comment">##四个标签，需要五个分割点</span></div><div class="line">lonadata [ 'cat' ] = pd.cut ( lonadata['browse'] ,bins,labels = group_labels )           <span class="comment">##进行分割</span></div><div class="line">print lonadata</div></pre></td></tr></table></figure></p><h1 id="数据分列"><a href="#数据分列" class="headerlink" title="数据分列"></a>数据分列</h1><p>根据分隔符分列<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">grade_split = pd.DataFrame (( x.split ( <span class="string">'/'</span> ) <span class="keyword">for</span> x <span class="keyword">in</span> lonadata.title_fenci ))</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">encoding</span><span class="params">(x)</span>:</span></div><div class="line">    <span class="keyword">return</span> x.encode(<span class="string">'gbk'</span>)</div><div class="line">grade_split = pd.DataFrame (( map (encoding,x.split ( <span class="string">'/'</span> ) )<span class="keyword">for</span> x <span class="keyword">in</span> lonadata.title_fenci ))</div><div class="line"><span class="comment">##用map加了一个解码效果</span></div><div class="line"><span class="comment">##但是代码有误</span></div><div class="line"></div><div class="line"><span class="keyword">print</span> grade_split</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文为课程笔记。&lt;br&gt;参考网址：www.cnblogs.com/stream886/p/6021743.html&lt;/p&gt;
&lt;h1 id=&quot;数据重复值处理&quot;&gt;&lt;a href=&quot;#数据重复值处理&quot; class=&quot;headerlink&quot; title=&quot;数据重复值处理&quot;&gt;&lt;/a&gt;
      
    
    </summary>
    
      <category term="python" scheme="https://chumingke.github.io/categories/python/"/>
    
      <category term="pandas" scheme="https://chumingke.github.io/categories/python/pandas/"/>
    
    
      <category term="python" scheme="https://chumingke.github.io/tags/python/"/>
    
      <category term="pandas" scheme="https://chumingke.github.io/tags/pandas/"/>
    
  </entry>
  
  <entry>
    <title>简明Python教程笔记（一）</title>
    <link href="https://chumingke.github.io//blog/2017/10/Concise-Python-tutorial-notes.html"/>
    <id>https://chumingke.github.io//blog/2017/10/Concise-Python-tutorial-notes.html</id>
    <published>2017-10-06T13:43:29.000Z</published>
    <updated>2017-10-06T13:44:45.000Z</updated>
    
    <content type="html"><![CDATA[<p>此文为简明Python教程笔记。</p><h1 id="第一部分"><a href="#第一部分" class="headerlink" title="第一部分"></a>第一部分</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>Python特点<br>简单、易学——伪代码本质<br>免费开源——FLOSS（自由/开放源码软件）<br>高层语言<br>可移植性强——支持多平台<br>解释性——更易移植<br>面向对象——既面向过程也面向对象<br>可扩展性<br>可嵌入性<br>丰富的库</p><h2 id="最初的步骤"><a href="#最初的步骤" class="headerlink" title="最初的步骤"></a>最初的步骤</h2><h3 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h3><p>如果是windows，使用前需要编辑path变量——c\python23</p><h3 id="运行方式"><a href="#运行方式" class="headerlink" title="运行方式"></a>运行方式</h3><p>命令行，交互式解释器，或者源文件。<br>交互式解释器作用是把python代码翻译成机器码<br>交互式解释器有哪些？<br>Python——命令行启动<br>IPython<br>JPython<br>CPython<br>ironPython<br>IDLE（集成开发环境Python GUI）——提示符： &gt;&gt;&gt;是你键入python语句的提示符。退出python提示符：按Ctrl-z再按Enter。</p><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p>“#”符号右面的内容都是注释<br>“#!”后面跟着一个程序<br>组织行：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash">！/usr/bin/python</span></div></pre></td></tr></table></figure></p><p>这行告诉系统该运行哪个解释器<br>python文件第一行有这个才能直接运行。</p><h3 id="编码解码"><a href="#编码解码" class="headerlink" title="编码解码"></a>编码解码</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> -*- encoding:utf-8 -*-</span></div></pre></td></tr></table></figure><p>文件首行有这行才能显示中文。<br>文件保存为utf-8格式的文件。</p><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><h3 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h3><p>特点：<br>不能改变它的值<br>在赋值给变量之前不需要声明<br>访问一个未赋值的变量会产生一个异常<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">some_other_var</span>  <span class="comment"># Raises a name error</span></div></pre></td></tr></table></figure></p><p>if 可以作为表达式来使用<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">"yahoo!"</span> <span class="keyword">if</span> <span class="number">3</span> &gt; <span class="number">2</span> <span class="keyword">else</span> <span class="number">2</span> <span class="meta">#=&gt; <span class="string">"yahoo!"</span></span></div></pre></td></tr></table></figure></p><h3 id="数"><a href="#数" class="headerlink" title="数"></a>数</h3><p>包含整数，长整数，浮点数，复数。</p><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><h4 id="字符串相关"><a href="#字符串相关" class="headerlink" title="字符串相关"></a>字符串相关</h4><p>引号：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">单引号</div><div class="line">双引号与单引号完全相同</div><div class="line">三引号——指示多行字符串</div></pre></td></tr></table></figure></p><p>转义符<br>自然字符串——前缀r或R<br>Unicode字符串——前缀u或U<br>字符串是不可变的<br>按字面意义级连接字符串</p><h4 id="字符串处理"><a href="#字符串处理" class="headerlink" title="字符串处理"></a>字符串处理</h4><p>1.字符串连接：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">##两种方法</div><div class="line">+</div><div class="line"><span class="string">" "</span><span class="selector-class">.join</span>[<span class="selector-tag">a</span>,b]</div></pre></td></tr></table></figure></p><p>2.转义符：<br><figure class="highlight livescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="string">'What\'s your name?'</span></div><div class="line"><span class="comment">##行末的单独一个反斜杠表示字符串在下一行继续，而不是开始一个新的行</span></div><div class="line"><span class="string">\\</span> 反斜杠</div><div class="line"><span class="string">\000</span> 空</div><div class="line"><span class="string">\’</span> 单引号</div><div class="line"><span class="string">\”</span> 双引号</div><div class="line"><span class="string">\n</span> 换行</div><div class="line"><span class="string">\t</span> Tab制表符</div><div class="line"><span class="string">\40表示空格</span></div></pre></td></tr></table></figure></p><p>3.使用dir(str)查看常见的字符串方法。<br>4.比较两个序列值是否相同<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="title">cmp</span><span class="params">(str1,str2)</span></span></div></pre></td></tr></table></figure></p><p>5.字符串格式化输出<br>占位符：<br><figure class="highlight haml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">%<span class="selector-tag">s</span></span>  字符串（采用str()的显示）</div><div class="line"><span class="tag">%<span class="selector-tag">f</span></span> 浮点数</div><div class="line"><span class="tag">%<span class="selector-tag">r</span></span> 字符串（采用repr()的显示）</div><div class="line"><span class="tag">%<span class="selector-tag">c</span></span> 单个字符</div><div class="line"><span class="tag">%<span class="selector-tag">b</span></span> 二进制整数</div><div class="line"><span class="tag">%<span class="selector-tag">d</span></span> 十进制整数</div><div class="line"><span class="tag">%<span class="selector-tag">e</span></span> 指数</div></pre></td></tr></table></figure></p><p>format函数：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#检测字符串里有没有大括号&#123;&#125;，有的话ID替换掉</span></span></div><div class="line">url.format(itemid)</div></pre></td></tr></table></figure></p><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><h3 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h3><p>1.规则<br>第一个字符必须是字母表中的字母（大写或小写）或者一个下划线，名称的其他部分可以由字母（大写或小写）、下划线（‘ _ ’）或数字（0-9）组成。<br>2.变量<br>使用规则：变量要先赋值，后使用<br>相关方法：id(a)，可以查看a变量在python解释器中定义的位置<br>3.函数<br>4.类</p><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><h4 id="数据类型有哪些"><a href="#数据类型有哪些" class="headerlink" title="数据类型有哪些"></a>数据类型有哪些</h4><p>None——null<br>str——字符串类型，ASCII，以8位的ASCII码储存，比如：‘abc’，’中国’<br>unicode——Unicode字符串类型，16位的Unicode字符，比如：u’Hello world’<br>float——双精度（64）浮点数<br>bool——布尔类型，Ture或者False（大写）<br><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">表示Ture：</div><div class="line"><span class="number">1</span></div><div class="line">“****”——字符串不为空</div><div class="line"><span class="string">[1，2，3]</span>——列表不为空</div><div class="line">&#123;“a”:<span class="string">"aaa"</span>&#125;</div><div class="line">只要不是空的</div><div class="line">表示False：</div><div class="line"><span class="number">0</span></div><div class="line">“”——字符串为空</div><div class="line"><span class="string">[]</span>——列表为空</div><div class="line">&#123;&#125;——字典为空</div></pre></td></tr></table></figure></p><p>int——有符号整数，最大值由平台决定<br>long——任意精度的有符号整数，int类型数字一旦超过最大值，会自动转换为long</p><h4 id="数-1"><a href="#数-1" class="headerlink" title="数"></a>数</h4><p>整数，长整数，浮点数，复数complex。</p><h4 id="如何判断一个变量的类型"><a href="#如何判断一个变量的类型" class="headerlink" title="如何判断一个变量的类型"></a>如何判断一个变量的类型</h4><p>type函数可以用于得到某个对象的类型<br>isinstance 函数用于判断某个对象类型是否属于指定的类型中的一种</p><h4 id="类型转换函数"><a href="#类型转换函数" class="headerlink" title="类型转换函数"></a>类型转换函数</h4><p>str字符串调用decode方法转为unicode（解码）。<br>unicode字符串调用encode方法转为str字符串。<br>工厂函数:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">int  将其他对象转成整数类型  </div><div class="line"><span class="function"><span class="title">float</span><span class="params">()</span></span></div><div class="line"><span class="function"><span class="title">bool</span><span class="params">()</span></span></div><div class="line"><span class="function"><span class="title">str</span><span class="params">()</span></span></div><div class="line"><span class="function"><span class="title">long</span><span class="params">()</span></span></div></pre></td></tr></table></figure></p><h3 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h3><p>任何东西</p><h3 id="逻辑行与物理行"><a href="#逻辑行与物理行" class="headerlink" title="逻辑行与物理行"></a>逻辑行与物理行</h3><p>物理行是你在编写程序时所 看见的。逻辑行是Python 看见 的单个语句。<br>想要在一个物理行中使用多于一个逻辑行，那么你需要使用分号（;）<br>反斜杠的使用，有时候有一种暗示的假设，可以不需要使用反斜杠</p><h3 id="缩进"><a href="#缩进" class="headerlink" title="缩进"></a>缩进</h3><p>同一层次的语句合起来称为一个块</p><h3 id="None"><a href="#None" class="headerlink" title="None"></a>None</h3><p>不要使用相等符号 <code>==</code> 来把对象和 None 进行比较<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">"etc"</span> <span class="keyword">is</span> <span class="keyword">None</span></div></pre></td></tr></table></figure></p><p>None、0 以及空字符串和空列表都等于 False，除此以外的所有值都等于 True<br><figure class="highlight basic"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">0 </span>== False  #=&gt; True</div><div class="line"><span class="string">""</span> == False #=&gt; True</div></pre></td></tr></table></figure></p><h2 id="运算符与表达式"><a href="#运算符与表达式" class="headerlink" title="运算符与表达式"></a>运算符与表达式</h2><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><p>1.注意优先级<br>2.计算顺序——圆括号改变<br>3.结合规律：<br>具有相同优先级的运算符从左到右顺序：<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="number">2</span>+<span class="number">3</span>+<span class="number">4</span>的等同于（<span class="number">2</span>+<span class="number">3</span>）+<span class="number">4</span></div></pre></td></tr></table></figure></p><p>赋值运算符是自右向左:<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">a</span>=b=c等同于a=(b=c)</div></pre></td></tr></table></figure></p><h3 id="表达式"><a href="#表达式" class="headerlink" title="表达式"></a>表达式</h3><p>1.数学运算表达式<br>其中，关于除法<br><figure class="highlight ceylon"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">除法，有一个是小数，结果是小数。</div><div class="line">整数相除，默认得到商。</div><div class="line">from<span class="number">__f</span>uture<span class="number">__</span><span class="keyword">import</span> division让两整数相除得到浮点数结果</div></pre></td></tr></table></figure></p><p>2.逻辑运算表达式——or,and<br>3.比较运算表达式——1&gt;2<br>4.python中表达式都有值，其值就是表达式运算后的结果</p><h1 id="第二部分"><a href="#第二部分" class="headerlink" title="第二部分"></a>第二部分</h1><h2 id="控制流"><a href="#控制流" class="headerlink" title="控制流"></a>控制流</h2><h3 id="选择结构（判断语句）"><a href="#选择结构（判断语句）" class="headerlink" title="选择结构（判断语句）"></a>选择结构（判断语句）</h3><p>if语句<br>用来检验一个条件， 如果 条件为真，我们运行一块语句<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">if-elif-else</div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#逻辑行结尾处有一个冒号,else可选</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#冒号后跟着语句块</span></span></div></pre></td></tr></table></figure></p><h3 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h3><h4 id="while语句"><a href="#while语句" class="headerlink" title="while语句"></a>while语句</h4><p>1.循环次数未知<br>2.只要在一个条件为真的情况下，while语句允许你重复执行一块语句<br>3.else可选</p><h4 id="for循环（迭代历遍语句）"><a href="#for循环（迭代历遍语句）" class="headerlink" title="for循环（迭代历遍语句）"></a>for循环（迭代历遍语句）</h4><p>1.迭代字符串<br>2.for..in——for i in range(1, 5):<br>3.在一序列的对象上 递归 即逐一使用队列中的每个项目<br>4.else可选<br>5.range(数字)：</p><ul><li>返回从零到给定的数字的数字列表</li><li>range（0，1001，2）</li><li>包头不包尾，默认是0</li><li>迭代器，先把要迭代的数全部生成好存在内存，再一个个操作</li><li>必须整数</li><li>3.5版本默认就是生成器<br>6.xrange——生成器，一次生成一个（性能的提升），3.5版本没有<br>7.循环次数已知<h4 id="break语句"><a href="#break语句" class="headerlink" title="break语句"></a>break语句</h4>如果你从for或while循环中 终止 ，任何对应的循环else块将不执行<br>if s == ‘quit’:  break<br>跳出循环<h4 id="continue语句"><a href="#continue语句" class="headerlink" title="continue语句"></a>continue语句</h4>用来告诉Python跳过当前循环块中的剩余语句，然后 继续 进行下一轮循环。<br>略过循环。<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> len(s) &lt; <span class="number">3</span>:  <span class="keyword">continue</span></div><div class="line">##如果长度小于<span class="number">3</span>，我们将使用<span class="keyword">continue</span>语句，忽略块中的剩余的语句。否则，这个循环中的剩余语句将被执行</div></pre></td></tr></table></figure></li></ul><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h3 id="组成"><a href="#组成" class="headerlink" title="组成"></a>组成</h3><h4 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h4><p>1.函数是重用的程序段<br>2.通过def关键字定义<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">sayHello</span><span class="params">()</span></span><span class="symbol">:</span></div></pre></td></tr></table></figure></p><p>3.<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">if__name__=='__main__':pass</div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#python文件在被调用的时候，__name__值为模块名</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#当python文件被运行之后，__name__值为‘__main__’</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#上面只定义函数、常用属性，下面写主逻辑。</span></span></div></pre></td></tr></table></figure></p><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><p>1.参数名称为 形参<br>2.函数调用的值称为实参<br>3.默认参数值<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">##只有在形参表末尾的那些参数可以有默认参数值</span></div><div class="line">def <span class="function"><span class="keyword">func</span><span class="params">(a, b=<span class="number">5</span>)</span>是有效的</span></div></pre></td></tr></table></figure></p><p>4.关键参数<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">##使用名字（关键字）而不是位置来给函数指定实参</span></div><div class="line"><span class="string">"&#123;name&#125; wants to eat &#123;food&#125;"</span>.format(<span class="attribute">name</span>=<span class="string">"Bob"</span>, <span class="attribute">food</span>=<span class="string">"lasagna"</span>)</div></pre></td></tr></table></figure></p><p>5.可变数量参数<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">##也可以定义一个函数，并让它接受可变数量的关键字参数</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">keyword_args</span><span class="params">(**kwargs)</span></span><span class="symbol">:</span></div><div class="line">keyword_args(big=<span class="string">"foot"</span>, loch=<span class="string">"ness"</span>) <span class="comment">#=&gt; &#123;"big": "foot", "loch": "ness"&#125;</span></div><div class="line"><span class="comment">##你可以定义一个函数，并让它接受可变数量的定位参数</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">varargs</span><span class="params">(*args)</span></span></div><div class="line">varargs(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>) <span class="comment">#=&gt; (1,2,3)</span></div><div class="line"><span class="comment">##还可以同时使用这两类参数</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">all_the_args</span><span class="params">(*args, **kwargs)</span></span><span class="symbol">:</span></div><div class="line"><span class="comment">##使用 * 来展开元组，使用 ** 来展开关键字参数</span></div></pre></td></tr></table></figure></p><h4 id="局部变量"><a href="#局部变量" class="headerlink" title="局部变量"></a>局部变量</h4><p>所有变量的作用域是它们被定义的块<br>global语句<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">global x, y, z</div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#声明是全局变量</span></span></div></pre></td></tr></table></figure></p><h3 id="语句与文档字符串"><a href="#语句与文档字符串" class="headerlink" title="语句与文档字符串"></a>语句与文档字符串</h3><h4 id="return语句"><a href="#return语句" class="headerlink" title="return语句"></a>return语句</h4><p>从一个函数 返回 即跳出函数<br>没有返回值的return语句等价于return None</p><h4 id="文档字符串（DocStrings）"><a href="#文档字符串（DocStrings）" class="headerlink" title="文档字符串（DocStrings）"></a>文档字符串（DocStrings）</h4><p>1.标准格式<br>文档字符串以大写字母开始，句号结尾。第二行是空行，从第三行开始是详细的描述。<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">'''    '''</span></div></pre></td></tr></table></figure></p><p>2.调用方法<br>用<strong>doc</strong>（注意双下划线）调用printMax函数的文档字符串属性<br>3.也适用模块和类</p><h3 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h3><figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">(<span class="name">lambda</span> x: x &gt; <span class="number">2</span>)(<span class="number">3</span>) #=&gt; True</div></pre></td></tr></table></figure><h3 id="dir-函数"><a href="#dir-函数" class="headerlink" title="dir()函数"></a>dir()函数</h3><p>查看该模块的函数列表<br>dir + help的使用</p><h3 id="内置的常用数学函数"><a href="#内置的常用数学函数" class="headerlink" title="内置的常用数学函数"></a>内置的常用数学函数</h3><p>divmod 返回两个数相除的商和余数<br>round 四舍五入</p><h3 id="Math模块常用的函数"><a href="#Math模块常用的函数" class="headerlink" title="Math模块常用的函数"></a>Math模块常用的函数</h3><p>pow 幂运算<br>sqrt  开方运算<br>floor/ceil<br>fabs<br>fmod</p><h3 id="高阶函数"><a href="#高阶函数" class="headerlink" title="高阶函数"></a>高阶函数</h3><p>map:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="title">map</span><span class="params">(lambda x:x*<span class="number">2</span>+<span class="number">1</span>,data)</span></span></div><div class="line"><span class="function"><span class="title">map</span><span class="params">(add_10, [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</span></span> #=&gt; [<span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>]</div></pre></td></tr></table></figure></p><p>reduce:<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">##求10的阶乘</span></div><div class="line"><span class="built_in">num</span>=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>]</div><div class="line">reduce(lambda x,y:x*y,<span class="built_in">num</span>)</div></pre></td></tr></table></figure></p><p>使用列表推导式来模拟 map 和 filter<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[add_10(i) for i in [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]]  #=&gt; [<span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>]</div><div class="line">[x for x in [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>] if x &gt; <span class="number">5</span>] #=&gt; [<span class="number">6</span>, <span class="number">7</span>]</div></pre></td></tr></table></figure></p><p>filter<br><figure class="highlight llvm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#<span class="symbol">#1000</span>以内的偶数</div><div class="line">res=<span class="keyword">filter</span>(lambda <span class="keyword">x</span>: <span class="keyword">x</span><span class="symbol">%2</span>==<span class="number">0</span>,a)</div><div class="line"><span class="keyword">filter</span>(lambda <span class="keyword">x</span>: <span class="keyword">x</span> &gt; <span class="number">5</span>, [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>]) #=&gt; [<span class="number">6</span>, <span class="number">7</span>]</div><div class="line">##过滤判断好的</div></pre></td></tr></table></figure></p><h2 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h2><h3 id="导入方法"><a href="#导入方法" class="headerlink" title="导入方法"></a>导入方法</h3><h4 id="绝对导入"><a href="#绝对导入" class="headerlink" title="绝对导入"></a>绝对导入</h4><p>import sys语句<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">sys</span><span class="selector-class">.argv</span></div></pre></td></tr></table></figure></p><h4 id="相对导入"><a href="#相对导入" class="headerlink" title="相对导入"></a>相对导入</h4><p>from..import语句<br><figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> argv</div><div class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> *    ##你可以从一个模块中导入所有函数</div><div class="line">##不建议使用这种方式,<span class="keyword">import</span> 更易读</div></pre></td></tr></table></figure></p><h4 id="字节编译的-pyc文件"><a href="#字节编译的-pyc文件" class="headerlink" title="字节编译的.pyc文件"></a>字节编译的.pyc文件</h4><h4 id="安装其他人的模块"><a href="#安装其他人的模块" class="headerlink" title="安装其他人的模块"></a>安装其他人的模块</h4><p>1.Anaconda2\Scripts<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">所有<span class="keyword">python</span>的工具都在这个文件夹</div><div class="line">conda.<span class="keyword">exe</span></div></pre></td></tr></table></figure></p><p>2.模块的安装<br>pip命令(python自带)：<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">c:</span>\python27\scripts&gt;pip.exe install pymysql</div><div class="line"><span class="symbol">c:</span>\python27\<span class="class"><span class="keyword">lib</span>\<span class="title">site</span>-<span class="title">packages</span>   <span class="comment">##所有第三方库的文件夹</span></span></div></pre></td></tr></table></figure></p><p>conda命令(anaconda环境特有):<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">conda<span class="selector-class">.exe</span> install scrapy</div><div class="line">conda<span class="selector-class">.exe</span> list  ##把当前python环境里安装的所有第三方模块都返回</div></pre></td></tr></table></figure></p><p>优先使用<br>好处：能够自动分析模块之间的依赖，如果安装A模块中，引用了B模块，可以自动安装好B模块<br>缺点：网络不好易下载失败，解决办法：尝试使用代理<br>whl文件的安装（google一下）:<br>二进制文件<br>搜索需要的包，复制到scripts文件夹下，使用pip等安装，输入首字母按Tab自动补全。</p><h4 id="sys-path"><a href="#sys-path" class="headerlink" title="sys.path"></a>sys.path</h4><p>当前python文件的目录<br>site-packages</p><h3 id="模块方法"><a href="#模块方法" class="headerlink" title="模块方法"></a>模块方法</h3><p>1.模块的属性<br>模块的<strong>name</strong><br>当一个模块被第一次输入的时候，这个模块的主块将被运行。假如我们只想在程序本身被使用的时候运行主块，而在它被别的模块输入的时候不运行主块，我们该怎么做呢？这可以通过模块的<strong>name</strong>属性完成。<br><figure class="highlight sqf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> <span class="variable">__name__</span> == <span class="string">'__main__'</span>:</div></pre></td></tr></table></figure></p><p>2.join的方法<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">print</span><span class="string">"    "</span>.<span class="keyword">join</span>(<span class="string">"1"</span>,<span class="string">"2"</span>,<span class="string">"3"</span>)</div></pre></td></tr></table></figure></p><h3 id="模块类别"><a href="#模块类别" class="headerlink" title="模块类别"></a>模块类别</h3><h4 id="常见模块"><a href="#常见模块" class="headerlink" title="常见模块"></a>常见模块</h4><p>1.sys系统相关<br>2.datetime日期<br>3.re正则表达式<br>4.math数学运算模块<br>5.Numpy科学计算 Pandas结构化函数 Scipy数值积分 matplotlib绘制数据图表<br>6.request http访问库 scrapy网络爬虫工具库<br>7.学习方法<br>dir()函数:<br>列出模块定义的标识符。标识符有函数、类和变量。<br>当你为dir()提供一个模块名的时候，它返回模块定义的名称列表<br>如果不提供参数，它返回当前模块中定义的名称列表<br>help()函数:<br>详细定义<br>8.python标准库</p><h4 id="制造你自己的模块"><a href="#制造你自己的模块" class="headerlink" title="制造你自己的模块"></a>制造你自己的模块</h4><p>这个模块应该被放置在我们输入它的程序的同一个目录中，或者在sys.path所列目录之一<br>使用了点号来使用模块的成员<br>from mymodule import sayhi, version</p><h3 id="库、包、模块之间的关系"><a href="#库、包、模块之间的关系" class="headerlink" title="库、包、模块之间的关系"></a>库、包、模块之间的关系</h3><p>包含关系：库-包-模块<br>一个包下面可以有很多模块<br>包的文件下面必须有<strong>init</strong>.py</p><h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><h3 id="类与对象的概念"><a href="#类与对象的概念" class="headerlink" title="类与对象的概念"></a>类与对象的概念</h3><p>当你使用变量i并给它赋值的时候，你可以认为你创建了一个类（类型）int的对象（实例）i</p><h3 id="列表list"><a href="#列表list" class="headerlink" title="列表list"></a>列表list</h3><h4 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h4><p>1.方括号<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">shoplist</span> = [<span class="string">'apple'</span>, <span class="string">'mango'</span>, <span class="string">'carrot'</span>, <span class="string">'banana'</span>]</div></pre></td></tr></table></figure></p><p>2.比如赋整数5，你可以认为你创建了一个类（类型）int的对象（实例）i<br>3.用 in 来检查是否存在于某个列表中<br>4.索引indexing、分片slicing<br>5.获取列表长度<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="title">len</span><span class="params">(a)</span></span></div><div class="line"><span class="selector-tag">a</span>.__len__()</div></pre></td></tr></table></figure></p><p>6.在print 语句的结尾使用一个逗号来消除每个语句自动打印的换行符，就是不回车了<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">print</span> <span class="string">'these items are:'</span>,</div></pre></td></tr></table></figure></p><h4 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h4><p>1.添加<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#在末尾添加</span></span></div><div class="line">shoplist.append('rice')</div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#插入，在索引为1的位置插入</span></span></div><div class="line">mylist.insert(1,3000)</div></pre></td></tr></table></figure></p><p>2.排序<br>shoplist.sort()<br><figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">shoplist.sort(reverse=ture)   ##表示从大到小</div><div class="line">##这个方法影响列表本身，而不是返回一个修改后的列表</div><div class="line">##与字符串工作的方法不同，因此我们说列表可变，字符串不可变</div></pre></td></tr></table></figure></p><p>reverse——把列表的元素反过来<br>3.修改索引为1的元素<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">把列表的元素反过来</div></pre></td></tr></table></figure></p><p>4.删除<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#删除</span></span></div><div class="line">del shoplist[0]</div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#移除最后一个元素，并且返回删除的值</span></span></div><div class="line">li.pop()        #=&gt; 3 and li is now [1, 2, 4]</div><div class="line"><span class="meta">#</span><span class="bash">删除指定元素（有多个删除第一个，没有抛出异常）</span></div><div class="line">remove</div></pre></td></tr></table></figure></p><p>5.输出列表元素<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">print</span> <span class="selector-tag">mylist</span>(0<span class="selector-pseudo">:10</span><span class="selector-pseudo">:2)</span></div><div class="line">#<span class="selector-id">#0-10</span>隔一个取</div></pre></td></tr></table></figure></p><p>6.列表求和<br><figure class="highlight fortran"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">print</span> <span class="built_in">sum</span>(mylist)</div></pre></td></tr></table></figure></p><h4 id="表与表"><a href="#表与表" class="headerlink" title="表与表"></a>表与表</h4><p>1.列表相加<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">li + other_li</div><div class="line">##结果[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>] - 请留意 li 和 other_li 并不会被修改</div></pre></td></tr></table></figure></p><p>2.用 extend 来合并列表<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">li.extend(other_li)</div><div class="line">现在 li 是 [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</div></pre></td></tr></table></figure></p><h4 id="不定常列表"><a href="#不定常列表" class="headerlink" title="不定常列表"></a>不定常列表</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">funcw</span><span class="params">(*args)</span></span><span class="symbol">:</span></div><div class="line"><span class="comment">##后面就可以将args作为列表使用</span></div><div class="line">func2(<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>)</div></pre></td></tr></table></figure><h3 id="元组tuple"><a href="#元组tuple" class="headerlink" title="元组tuple"></a>元组tuple</h3><h4 id="属性-1"><a href="#属性-1" class="headerlink" title="属性"></a>属性</h4><p>1.圆括号<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">zoo</span> = (<span class="string">'wolf'</span>, <span class="string">'elephant'</span>, <span class="string">'penguin'</span>)</div></pre></td></tr></table></figure></p><p>2.不可变<br>3.来访问new_zoo元组的第三个项目的第三个项目<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">new_zoo[<span class="string">2</span>][<span class="symbol">2</span>]</div></pre></td></tr></table></figure></p><p>4.含有单个元素的元组，在第一个项目后跟一个逗号,这样Python才能区分元组和表达式中一个带圆括号的对象<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">singleton</span> = (<span class="number">2</span> , )</div></pre></td></tr></table></figure></p><h4 id="基本使用方法"><a href="#基本使用方法" class="headerlink" title="基本使用方法"></a>基本使用方法</h4><p>1.元组最通常的用法是用在打印语句中<br><figure class="highlight lua"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">print</span> <span class="string">'%s is %d years old'</span>   % (name, age)</div><div class="line"><span class="string">"&#123;0&#125; can be &#123;1&#125;"</span>.<span class="built_in">format</span>(<span class="string">"strings"</span>, <span class="string">"formatted"</span>)  ##<span class="built_in">format</span> 方法</div></pre></td></tr></table></figure></p><p>2.定制字符串<br>%s——表示字符串<br>%d——表示整数<br>3.也可以一个定制<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">print 'why <span class="keyword">is</span> %s playing <span class="keyword">with</span> <span class="keyword">that</span> python?' % <span class="built_in">name</span></div></pre></td></tr></table></figure></p><h4 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h4><p>1.元组拆包<br>你可以把元组（或列表）中的元素解包赋值给多个变量<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">a, b, c = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</div><div class="line">##现在 a 是 <span class="number">1</span>，b 是 <span class="number">2</span>，c 是 <span class="number">3</span></div><div class="line">##如果你省去了小括号，那么元组会被自动创建</div><div class="line">d, e, f = <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span></div></pre></td></tr></table></figure></p><p>2.交换两个值<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">e, d = d, e</div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#现在 d 是 5 而 e 是 4</span></span></div></pre></td></tr></table></figure></p><h3 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h3><h4 id="属性-2"><a href="#属性-2" class="headerlink" title="属性"></a>属性</h4><p>1.字典是dict类的实例/对象<br>2.花括号<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attr">ab</span> = &#123; <span class="string">'Swaroop'</span> : <span class="string">'swaroopch@byteofpython.info'</span>&#125;</div><div class="line"><span class="attr">d</span> = &#123;key1 : value1, key2 : value2 &#125;</div></pre></td></tr></table></figure></p><p>3.字典输出无序<br>4.映射mapping：<br>通过名称来引用值的数据结构<br>把键（名字）和值（详细情况）联系在一起<br>哈希映射或相联数组(重要)</p><h4 id="基本使用方法-1"><a href="#基本使用方法-1" class="headerlink" title="基本使用方法"></a>基本使用方法</h4><p>1.<br><figure class="highlight perl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">print</span> <span class="string">"Swaroop's address is %s"</span> % ab[<span class="string">'Swaroop'</span>]</div></pre></td></tr></table></figure></p><p>2.用索引操作符来寻址一个键并为它赋值<br><figure class="highlight prolog"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ab[<span class="string">'Guido'</span>] = <span class="string">'guido@python.org'</span></div></pre></td></tr></table></figure></p><p>3.del语句来删除键/值对<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">del</span> ab[<span class="string">'Spammer'</span>]</div></pre></td></tr></table></figure></p><p>4.使用in操作符检验一个键/值对是否存在<br>或者使用dict类的has_key方法<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> <span class="string">'Guido'</span> <span class="keyword">in</span> <span class="string">ab:</span></div></pre></td></tr></table></figure></p><p>5.使用 in 来检查一个字典是否包含某个键名<br><figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">"one"</span> <span class="keyword">in</span> filled_dict #=&gt; <span class="literal">True</span></div></pre></td></tr></table></figure></p><h4 id="方法-1"><a href="#方法-1" class="headerlink" title="方法"></a>方法</h4><p>1.与键名有关<br>将字典的所有键名获取为一个列表<br><figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">filled_dict.keys() #=&gt; [<span class="string">"three"</span>, <span class="string">"two"</span>, <span class="string">"one"</span>]</div><div class="line">##请注意：无法保证字典键名的顺序如何排列</div></pre></td></tr></table></figure></p><p>将字典的所有键值获取为一个列表<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">filled_dict.values() #=&gt; [<span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>]</div></pre></td></tr></table></figure></p><p>2.与键值有关<br>使用 [] 来查询键值：<br><figure class="highlight 1c"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">filled_dict[<span class="string">"one"</span>] <span class="meta">#=&gt; 1</span></div></pre></td></tr></table></figure></p><p>get根据key获取value值，key不存在时返回None，查询一个不存在的键名会产生一个键名错误：<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">filled_dict[<span class="string">"four"</span>] <span class="comment"># KeyError</span></div><div class="line"><span class="comment">##所以要使用 get 方法来避免键名错误</span></div><div class="line">filled_dict.<span class="keyword">get</span>(<span class="string">"one"</span>) <span class="comment">#=&gt; 1</span></div><div class="line">filled_dict.<span class="keyword">get</span>(<span class="string">"four"</span>) <span class="comment">#=&gt; None</span></div><div class="line"><span class="comment">##get 方法支持传入一个默认值参数，将在取不到值时返回</span></div><div class="line">filled_dict.<span class="keyword">get</span>(<span class="string">"one"</span>, <span class="number">4</span>) <span class="comment">#=&gt; 1</span></div><div class="line">filled_dict.<span class="keyword">get</span>(<span class="string">"four"</span>, <span class="number">4</span>) <span class="comment">#=&gt; 4</span></div></pre></td></tr></table></figure></p><p>pop获取指定键的值，然后将该键值对从字典中移除。<br>setdefault根据key返回对应的value值，key不存在则返回默认值并相应更新字典。<br>3.都有关<br>items：<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">字典的<span class="keyword">items方法来使用字典中的每个键/值对，来使用字典中的每个键/值对。</span></div><div class="line"><span class="keyword">将所有的项以列表的方式返回。</span></div><div class="line"><span class="keyword">iteritems返回迭代器。</span></div></pre></td></tr></table></figure></p><p>Setdefault 方法可以安全地把新的名值对添加到字典里：<br><figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">filled_dict.setdefault(<span class="string">"five"</span>, <span class="number">5</span>)</div><div class="line">##filled_dict[<span class="string">"five"</span>] 被设置为 <span class="number">5</span></div><div class="line">filled_dict.setdefault(<span class="string">"five"</span>, <span class="number">6</span>)</div><div class="line">##filled_dict[<span class="string">"five"</span>] 仍然为 <span class="number">5</span></div></pre></td></tr></table></figure></p><p>copy、deepcopy复制（浅复制、深复制）。<br>popitem随机移除某个键值对。<br>clear清除字典中所有的项。<br>update使用一个字典去更新另一个字典：<br><figure class="highlight q"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">字典重点键值对会添加到原来的字典中</div><div class="line">有相同的<span class="built_in">key</span>则更新对应的<span class="built_in">value</span></div></pre></td></tr></table></figure></p><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">person_info=&#123;uid[0]:&#123;"name":name[0],"age":age[0],"sex":sex[0]&#125;&#125;</div><div class="line">person_info[<span class="string">"u1"</span>][<span class="symbol">'name'</span>]</div><div class="line"><span class="section">##取u1中name是什么</span></div></pre></td></tr></table></figure><p>不定常字典:<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">func3</span><span class="params">(**kwargs)</span></span></div><div class="line">func3(host=<span class="string">"localhost"</span>,port=<span class="string">"3366"</span>)</div><div class="line">连接数据库时方便使用</div></pre></td></tr></table></figure></p><p>先创建空表，后逐步填充:<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">employee</span>=&#123;&#125;.fromkeys((<span class="string">"name"</span>,<span class="string">"age"</span>,<span class="string">"salary"</span>).<span class="string">"i,do not know"</span>)</div></pre></td></tr></table></figure></p><h4 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h4><p>1.set 用于保存集合<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">empty_set = set()</div><div class="line">some_set = set([<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>])</div><div class="line">##some_set 现在是 set([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])</div><div class="line">##从 Python <span class="number">2.7</span> 开始，&#123;&#125; 可以用来声明一个集合</div><div class="line">filled_set = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;</div><div class="line">##（译注：集合是种无序不重复的元素集，因此重复的 <span class="number">2</span> 被滤除了。）</div><div class="line">##（译注：&#123;&#125; 不会创建一个空集合，只会创建一个空字典。）</div></pre></td></tr></table></figure></p><p>2.把更多的元素添加进一个集合<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">filled_set.add(<span class="number">5</span>)</div><div class="line">##filled_set 现在是 &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;</div></pre></td></tr></table></figure></p><p>3.使用 &amp; 来获取交集<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">other_set = &#123;<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;</div><div class="line">filled_set &amp; other_set #=&gt; &#123;<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;</div></pre></td></tr></table></figure></p><p>4.使用 - 来获取补集<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125; - &#123;<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>&#125; #=&gt; &#123;<span class="number">1</span>, <span class="number">4</span>&#125;</div></pre></td></tr></table></figure></p><h3 id="序列"><a href="#序列" class="headerlink" title="序列"></a>序列</h3><p>1.列表、元组和字符串都是序列<br>2.索引操作符<br><figure class="highlight ada"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">print <span class="symbol">'Item</span> <span class="number">0</span> <span class="keyword">is</span>', shoplist[<span class="number">0</span>]</div></pre></td></tr></table></figure></p><p>3.切片操作符<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">print 'Item <span class="number">1</span> <span class="keyword">to</span> <span class="number">-1</span> <span class="keyword">is</span>', shoplist[<span class="number">1</span>:<span class="number">-1</span>]</div><div class="line"><span class="comment">##相当于数学中的左闭右开区间</span></div></pre></td></tr></table></figure></p><p>4.使用 | 来获取并集<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">filled_set | other_set #=&gt; &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;</div></pre></td></tr></table></figure></p><h3 id="引用-参考"><a href="#引用-参考" class="headerlink" title="引用/参考"></a>引用/参考</h3><p>如果是想复制，使用切片操作，复制后复制副本不受原始对象变化影响。<br>如果只是使用另一个变量名，那么是只是参考同一个对象。</p><h3 id="更多字符串的方法"><a href="#更多字符串的方法" class="headerlink" title="更多字符串的方法"></a>更多字符串的方法</h3><p>1.startwith方法<br>测试字符串是否以给定字符串开始<br>2.in操作符<br>给定字符串是否是另一个字符串的一部分<br>3.find方法<br>找出位置，返回-1表示找不到<br>4.字符串join<br>返回一个生成的大字符串：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">delimiter = <span class="string">'_*_'</span></div><div class="line"><span class="built_in">print</span> delimiter.join(mylist)</div><div class="line">mylist = [<span class="string">'Brazil'</span>,<span class="string">'Russia'</span>,<span class="string">'India'</span>,<span class="string">'China'</span>]</div><div class="line"><span class="comment">##结果:</span></div><div class="line">Brazil_*_Russia_*_India_*_China</div></pre></td></tr></table></figure></p><h3 id="python推导式"><a href="#python推导式" class="headerlink" title="python推导式"></a>python推导式</h3><p>for循环结合表达式<br>列表推导式<br>字典推导式<br>集合推导式</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;此文为简明Python教程笔记。&lt;/p&gt;
&lt;h1 id=&quot;第一部分&quot;&gt;&lt;a href=&quot;#第一部分&quot; class=&quot;headerlink&quot; title=&quot;第一部分&quot;&gt;&lt;/a&gt;第一部分&lt;/h1&gt;&lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerli
      
    
    </summary>
    
      <category term="python" scheme="https://chumingke.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https://chumingke.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>MySQL查询语句练习题(50题版)</title>
    <link href="https://chumingke.github.io//blog/2017/10/MySQL-query-exercises-50.html"/>
    <id>https://chumingke.github.io//blog/2017/10/MySQL-query-exercises-50.html</id>
    <published>2017-10-06T09:40:04.000Z</published>
    <updated>2017-10-17T03:50:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>学生表：Student（编号sid，姓名sname，年龄sage，性别ssex)<br>课程表：Course（课程编号cid，课程名称cname，教师编号tid）<br>成绩表：Sc（学生编号sid，课程编号cid，成绩score）<br>教师表：Teacher（教师编号tid，姓名tname）</p><p>1，插入学生数据<br>| 学号        | 姓名       | 年龄  |  性别|<br>| :——–: |:———–:|:———-:|:——:|<br>| 1001| 张三| 10| 男|<br>| 1002| 李四| 11| 女|<br>| 1003| 王五| 12| 男|<br>| 1004| 马六| 19| 女|<br>| 1005| 孙七| 22| 女|<br>| 1006| 钱八| 18| 男|<br>| 1007| 赵九| 11| 女|<br>| 1008| 周公| 19| 男|<br>2，插入老师数据<br>| 教师编号        | 教师姓名       |<br>| :——–: |:———–:|<br>| 1| 叶平|<br>| 2| 李浩然|<br>| 3| 胡平原|<br>| 4| 朱清时|<br>| 5| 赛先生|<br>| 6| 宋三东|<br>3，插入课程数据<br>| 课程编号      | 课程名    |教师编号  |<br>| :——–: |:———–:|:———-:|<br>| 001| PHP| 1|<br>| 002| C#| 1|<br>| 003| C++| 2|<br>| 004| JAVA| 3|<br>| 005| Python| 4|<br>| 006| R| 5|<br>| 007| HTML| 6|<br>4，插入成绩数据<br>| 学号      | 课程编号    |成绩  |<br>| :——–: |:———–:|:———-:|<br>| 1001| 001| 89|<br>| 1002| 001| 80|<br>| 1003| 001| 30|<br>| 1004| 001| 78|<br>| 1005| 001| 68|<br>| 1006| 001| 93|<br>| 1007| 001| 62|<br>| 1001| 002| 67|<br>| 1002| 002| 86|<br>| 1003| 002| 67|<br>| 1004| 002| 77|<br>| 1005| 002| 66|<br>| 1006| 002| 84|<br>| 1007| 002| 72|<br>| 1001| 003| 82|<br>| 1002| 003| 85|<br>| 1003| 003| 32|<br>| 1004| 003| 73|<br>| 1005| 003| 64|<br>| 1006| 003| 87|<br>| 1007| 003| 77|<br>| 1008| 003| 94|<br>| 1001| 004| 39|<br>| 1002| 004| 80|<br>| 1003| 004| 80|<br>| 1004| 004| 88|<br>| 1005| 004| 68|<br>| 1006| 004| 59|<br>| 1007| 004| 42|<br>| 1008| 004| 64|<br>| 1001| 005| 89|<br>| 1002| 005| 70|<br>| 1003| 005| 60|<br>| 1004| 005| 58|<br>| 1005| 005| 38|<br>| 1006| 005| 89|<br>| 1007| 005| 72|<br>| 1008| 005| 64|<br>| 1001| 006| 49|<br>| 1002| 006| 90|<br>| 1003| 006| 70|<br>| 1004| 006| 48|<br>| 1005| 006| 98|<br>| 1006| 006| 59|<br>| 1007| 006| 72|<br>| 1008| 006| 74|<br>| 1001| 007| 49|<br>| 1002| 007| 50|<br>| 1003| 007| 70|<br>| 1004| 007| 88|<br>| 1005| 007| 78|<br>| 1006| 007| 99|<br>| 1007| 007| 82|<br>以下题目答案均由45题版本的数据库来操作。懒得再建了。</p><h2 id="1、查询“001”课程比“002”课程成绩高的所有学生的学号；"><a href="#1、查询“001”课程比“002”课程成绩高的所有学生的学号；" class="headerlink" title="1、查询“001”课程比“002”课程成绩高的所有学生的学号；"></a>1、查询“001”课程比“002”课程成绩高的所有学生的学号；</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#自连接</span></div><div class="line"><span class="attribute">select</span> S<span class="literal">no</span> from Score a </div><div class="line">where C<span class="literal">no</span>= <span class="string">'3-105'</span> and </div><div class="line">Degree &gt; (<span class="literal">select</span> Degree from Score b where C<span class="literal">no</span>=<span class="string">'3-245'</span>and a.S<span class="literal">no</span>=b.S<span class="literal">no</span>);</div><div class="line"><span class="comment">#输出两个表后连接比较</span></div><div class="line"><span class="attribute">select</span> a.S<span class="literal">no</span> from </div><div class="line">(<span class="literal">select</span> S<span class="literal">no</span>,Degree from Score where C<span class="literal">no</span>=<span class="string">'3-105'</span>) a inner join </div><div class="line">(<span class="literal">select</span> S<span class="literal">no</span>,Degree from Score where C<span class="literal">no</span>=<span class="string">'3-245'</span>) b </div><div class="line"><span class="literal">on</span> a.S<span class="literal">no</span>=b.S<span class="literal">no</span></div><div class="line">where a.Degree&gt;b.Degree;</div></pre></td></tr></table></figure><h2 id="2、查询平均成绩大于60分的同学的学号和平均成绩；"><a href="#2、查询平均成绩大于60分的同学的学号和平均成绩；" class="headerlink" title="2、查询平均成绩大于60分的同学的学号和平均成绩；"></a>2、查询平均成绩大于60分的同学的学号和平均成绩；</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">select Sno,avg(Degree) <span class="keyword">from</span> Score </div><div class="line">group by Sno</div><div class="line">having avg(Degree)&gt;60;</div></pre></td></tr></table></figure><h2 id="3、查询所有同学的学号、姓名、选课数、总成绩；"><a href="#3、查询所有同学的学号、姓名、选课数、总成绩；" class="headerlink" title="3、查询所有同学的学号、姓名、选课数、总成绩；"></a>3、查询所有同学的学号、姓名、选课数、总成绩；</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">select Score.Sno,Sname,count(*),sum(Degree) <span class="keyword">from</span> Score,Student where Score.<span class="attribute">Sno</span>=Student.Sno<span class="built_in"> group </span>by Score.Sno ;</div><div class="line"></div><div class="line">select Score.Sno,Sname,count(*),sum(Degree) <span class="keyword">from</span> Score inner join Student on Score.<span class="attribute">Sno</span>=Student.Sno<span class="built_in"> group </span>by Sno;</div></pre></td></tr></table></figure><h2 id="4、查询姓“李”的老师的个数；"><a href="#4、查询姓“李”的老师的个数；" class="headerlink" title="4、查询姓“李”的老师的个数；"></a>4、查询姓“李”的老师的个数；</h2><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#还需要去重</div><div class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="keyword">distinct</span>(Tname)) <span class="keyword">from</span> Teacher <span class="keyword">where</span> Tname <span class="keyword">like</span> <span class="string">'李%'</span>;</div></pre></td></tr></table></figure><h2 id="5、查询没学过“叶平”老师课的同学的学号、姓名；"><a href="#5、查询没学过“叶平”老师课的同学的学号、姓名；" class="headerlink" title="5、查询没学过“叶平”老师课的同学的学号、姓名；"></a>5、查询没学过“叶平”老师课的同学的学号、姓名；</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> Sno,Sname <span class="keyword">from</span> Student <span class="keyword">where</span> Sno <span class="keyword">not</span> <span class="keyword">in</span> (</div><div class="line"><span class="keyword">select</span> Sno <span class="keyword">from</span> Score <span class="keyword">where</span> Cno <span class="keyword">in</span> (</div><div class="line"><span class="keyword">select</span> Cno <span class="keyword">from</span> Course <span class="keyword">where</span> Tno = (</div><div class="line"><span class="keyword">select</span> Tno <span class="keyword">from</span> Teacher <span class="keyword">where</span> Tname =<span class="string">'李诚'</span>)));</div><div class="line"></div><div class="line"><span class="keyword">select</span> Sno,Sname <span class="keyword">from</span> Student <span class="keyword">where</span> Sno <span class="keyword">not</span> <span class="keyword">in</span>(</div><div class="line"><span class="keyword">select</span> Score.Sno <span class="keyword">from</span> Score <span class="keyword">inner</span> <span class="keyword">join</span> Course <span class="keyword">on</span> Score.Cno=Course.Cno </div><div class="line"><span class="keyword">inner</span> <span class="keyword">join</span> Teacher <span class="keyword">on</span> Course.Tno=Teacher.Tno <span class="keyword">where</span> Tname=<span class="string">'李诚'</span>);</div></pre></td></tr></table></figure><h2 id="6、查询学过“001”并且也学过编号“002”课程的同学的学号、姓名；"><a href="#6、查询学过“001”并且也学过编号“002”课程的同学的学号、姓名；" class="headerlink" title="6、查询学过“001”并且也学过编号“002”课程的同学的学号、姓名；"></a>6、查询学过“001”并且也学过编号“002”课程的同学的学号、姓名；</h2><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> Student.Sno,Sname <span class="keyword">from</span> Student inner <span class="keyword">join</span> Score <span class="keyword">on</span> Student.Sno=Score.Sno </div><div class="line"><span class="keyword">where</span> Cno=<span class="string">'001'</span> <span class="keyword">and</span> Student.Sno <span class="keyword">in</span> (<span class="keyword">select</span> Student.Sno,Sname <span class="keyword">from</span> Student </div><div class="line">inner <span class="keyword">join</span> Score <span class="keyword">on</span> Student.Sno=Score.Sno <span class="keyword">where</span> Cno=<span class="string">'002'</span>);</div><div class="line"></div><div class="line"><span class="keyword">select</span> Sno,Sname <span class="keyword">from</span> Student <span class="keyword">where</span> Sno <span class="keyword">in</span>(</div><div class="line"><span class="keyword">select</span> Sno <span class="keyword">from</span> Score <span class="keyword">where</span> Cno = <span class="string">'001'</span> <span class="keyword">and</span> Sno <span class="keyword">in</span>(</div><div class="line"><span class="keyword">select</span> Sno <span class="keyword">from</span> Score <span class="keyword">where</span> Cno=<span class="string">'002'</span>));</div><div class="line"></div><div class="line"><span class="keyword">select</span> Student.Sno,Student.Sname <span class="keyword">from</span> Student,Score  <span class="keyword">where</span> Student.Sno=Score.Sno </div><div class="line"><span class="keyword">and</span> Score.Sno=<span class="string">'001'</span> <span class="keyword">and</span> exists( <span class="keyword">Select</span> * <span class="keyword">from</span> Score <span class="keyword">as</span> SC_2 <span class="keyword">where</span> SC_2.Sno=SC.Sno <span class="keyword">and</span> SC_2.Sno=<span class="string">'002'</span>);</div><div class="line">#EXISTS用于检查子查询是否至少会返回一行数据，该子查询实际上并不返回任何数据，而是返回值<span class="keyword">True</span>或<span class="keyword">False</span>。</div></pre></td></tr></table></figure><h2 id="7、查询学过“叶平”老师所教的所有课的同学的学号、姓名；"><a href="#7、查询学过“叶平”老师所教的所有课的同学的学号、姓名；" class="headerlink" title="7、查询学过“叶平”老师所教的所有课的同学的学号、姓名；"></a>7、查询学过“叶平”老师所教的所有课的同学的学号、姓名；</h2><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> Sno,Sname <span class="keyword">from</span> Student <span class="keyword">where</span> Sno <span class="keyword">in</span> (</div><div class="line"><span class="keyword">select</span> Sno <span class="keyword">from</span> Score <span class="keyword">where</span> Cno <span class="keyword">in</span>(</div><div class="line"><span class="keyword">select</span> Cno <span class="keyword">from</span> Course <span class="keyword">where</span> Tno =(</div><div class="line"><span class="keyword">select</span> Tno <span class="keyword">from</span> Teacher <span class="keyword">where</span> Tname = <span class="string">'李诚'</span>))</div><div class="line"><span class="keyword">group</span> <span class="keyword">by</span> Sno </div><div class="line">having count<span class="comment">(*)=(select count(*)</span> <span class="keyword">from</span> Course,Teacher <span class="keyword">where</span> Course.Tno=Teacher.Tno <span class="keyword">and</span> Tname =<span class="string">'李诚'</span>)</div><div class="line">);</div><div class="line"></div><div class="line"><span class="keyword">select</span> Student.Sno,Student.Sname <span class="keyword">from</span> Student,Score,Course,Teacher <span class="keyword">where</span> Student.Sno=Score.Sno</div><div class="line"><span class="keyword">and</span> Score.Cno=Course.Cno <span class="keyword">and</span> Course.Tno = Teacher.Tno <span class="keyword">and</span> Teacher.Tname=<span class="string">'李诚'</span></div><div class="line"><span class="keyword">group</span> <span class="keyword">by</span> Sno </div><div class="line">having count<span class="comment">(*) = (select count(*)</span> <span class="keyword">from</span> Course,Teacher <span class="keyword">where</span> Course.Tno= Teacher.Tno <span class="keyword">and</span> Teacher.Tname= <span class="string">'李诚'</span>);</div><div class="line">#这题我感觉有问题，因为有同时学过叶平和别人的课而且课程数目一样的情况。</div><div class="line"><span class="keyword">select</span> Sno,Sname <span class="keyword">from</span> Student <span class="keyword">where</span> Sno <span class="keyword">in</span> (</div><div class="line"><span class="keyword">select</span> Sno <span class="keyword">from</span> Score <span class="keyword">where</span> Cno <span class="keyword">in</span>(</div><div class="line">  <span class="keyword">select</span> Cno <span class="keyword">from</span> Course <span class="keyword">where</span> Tno =(</div><div class="line">    <span class="keyword">select</span> Tno <span class="keyword">from</span> Teacher <span class="keyword">where</span> Tname = <span class="string">'李诚'</span>))</div><div class="line"><span class="keyword">and</span> Cno <span class="keyword">not</span> <span class="keyword">in</span>(</div><div class="line">  <span class="keyword">select</span> Cno <span class="keyword">from</span> Course <span class="keyword">where</span> Tno <span class="keyword">not</span> <span class="keyword">in</span> (</div><div class="line">    <span class="keyword">select</span> Tno <span class="keyword">from</span> Teacher <span class="keyword">where</span> Tname = <span class="string">'李诚'</span>)))</div><div class="line"><span class="keyword">group</span> <span class="keyword">by</span> Sno </div><div class="line">having count<span class="comment">(*)=(select count(*)</span> <span class="keyword">from</span> Course,Teacher <span class="keyword">where</span> Course.Tno=Teacher.Tno <span class="keyword">and</span> Tname =<span class="string">'李诚'</span>)</div><div class="line">;</div></pre></td></tr></table></figure><h2 id="8、查询课程编号“002”的成绩比课程编号“001”课程低的所有同学的学号、姓名；"><a href="#8、查询课程编号“002”的成绩比课程编号“001”课程低的所有同学的学号、姓名；" class="headerlink" title="8、查询课程编号“002”的成绩比课程编号“001”课程低的所有同学的学号、姓名；"></a>8、查询课程编号“002”的成绩比课程编号“001”课程低的所有同学的学号、姓名；</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> Sno,Sname <span class="keyword">from</span> Student <span class="keyword">where</span> Sno <span class="keyword">in</span> (</div><div class="line"><span class="keyword">select</span> Sno <span class="keyword">from</span> Score a2 <span class="keyword">where</span> Cno=<span class="string">'002'</span> <span class="keyword">and</span> Degree&gt;</div><div class="line">(<span class="keyword">select</span> Degree <span class="keyword">from</span> Score a1 <span class="keyword">where</span> Cno=<span class="string">'001'</span> <span class="keyword">and</span> a1.Sno=a2.Sno));</div><div class="line"></div><div class="line"><span class="keyword">Select</span> Sno,Sname <span class="keyword">from</span> (<span class="keyword">select</span> Student.Sno,Student.Sname,</div><div class="line">Degree,(<span class="keyword">select</span> score <span class="keyword">from</span> Score SC_2 <span class="keyword">where</span> SC_2.Sno=Student.Sno <span class="keyword">and</span> SC_2.Cno=<span class="string">'002'</span>) Degree2 </div><div class="line"><span class="keyword">from</span> Student,Score <span class="keyword">where</span> Student.Sno=Score.Sno <span class="keyword">and</span> Cno =<span class="string">'001'</span>) S_2 <span class="keyword">where</span> Degree2 &lt;Degree;</div></pre></td></tr></table></figure><h2 id="9、查询所有课程成绩小于60分的同学的学号、姓名；"><a href="#9、查询所有课程成绩小于60分的同学的学号、姓名；" class="headerlink" title="9、查询所有课程成绩小于60分的同学的学号、姓名；"></a>9、查询所有课程成绩小于60分的同学的学号、姓名；</h2><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#注意关键词所有课程，可以采用逆向思维</div><div class="line"><span class="keyword">select</span> Sno,Sname <span class="keyword">from</span> Student <span class="keyword">where</span> Sno <span class="keyword">not</span> <span class="keyword">in</span> (</div><div class="line"><span class="keyword">select</span> Sno <span class="keyword">from</span> Score <span class="keyword">where</span> Degree&gt;<span class="number">60</span>);</div></pre></td></tr></table></figure><h2 id="10、查询没有学全所有课的同学的学号、姓名；"><a href="#10、查询没有学全所有课的同学的学号、姓名；" class="headerlink" title="10、查询没有学全所有课的同学的学号、姓名；"></a>10、查询没有学全所有课的同学的学号、姓名；</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">select Sno,Sname <span class="keyword">from</span> Student where Sno <span class="keyword">not</span> <span class="keyword">in</span> (</div><div class="line">select Sno <span class="keyword">from</span> Score<span class="built_in"> group </span>by Sno</div><div class="line">having count(*) = (</div><div class="line">select count(distinct(Cno)) <span class="keyword">from</span> Score));</div><div class="line"></div><div class="line">select Sno,Sname <span class="keyword">from</span> Student where Sno <span class="keyword">not</span> <span class="keyword">in</span> (</div><div class="line">select Sno <span class="keyword">from</span> Score<span class="built_in"> group </span>by Sno</div><div class="line">having count(*) = (</div><div class="line">select count(*) <span class="keyword">from</span> Course));</div><div class="line"></div><div class="line">select Student.Sno,Student.Sname</div><div class="line"><span class="keyword">from</span> Student,Score</div><div class="line">where Student.<span class="attribute">Sno</span>=Score.Sno<span class="built_in"> group </span>by  Student.Sno,Student.Sname </div><div class="line">having count(Cno) &lt;(select count(Cno) <span class="keyword">from</span> Course);</div></pre></td></tr></table></figure><h2 id="11、查询至少有一门课与学号为“1001”的同学所学相同的同学的学号和姓名；"><a href="#11、查询至少有一门课与学号为“1001”的同学所学相同的同学的学号和姓名；" class="headerlink" title="11、查询至少有一门课与学号为“1001”的同学所学相同的同学的学号和姓名；"></a>11、查询至少有一门课与学号为“1001”的同学所学相同的同学的学号和姓名；</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> Sno,Sname <span class="keyword">from</span> Student <span class="keyword">where</span> Sno <span class="keyword">in</span> (</div><div class="line"><span class="keyword">select</span> Sno <span class="keyword">from</span> Score <span class="keyword">where</span> Cno <span class="keyword">in</span> (</div><div class="line"><span class="keyword">select</span> Cno <span class="keyword">from</span> Score <span class="keyword">where</span> Sno = <span class="string">'103'</span>));</div></pre></td></tr></table></figure><h2 id="12、查询与“1001”同学所学课程相同的其他同学学号和姓名；"><a href="#12、查询与“1001”同学所学课程相同的其他同学学号和姓名；" class="headerlink" title="12、查询与“1001”同学所学课程相同的其他同学学号和姓名；"></a>12、查询与“1001”同学所学课程相同的其他同学学号和姓名；</h2><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">#自己做的待考证</div><div class="line"><span class="keyword">select</span> Sno,Sname <span class="keyword">from</span> Student <span class="keyword">where</span> Sno <span class="keyword">in</span>(</div><div class="line">   <span class="keyword">select</span> Sno,Cno <span class="keyword">from</span> Score <span class="keyword">where</span> Sno <span class="keyword">in</span>(</div><div class="line">  <span class="keyword">select</span> Sno <span class="keyword">from</span> Score <span class="keyword">where</span> Cno <span class="keyword">in</span> (<span class="keyword">select</span> Cno <span class="keyword">from</span> Score <span class="keyword">where</span> Sno=<span class="string">'103'</span>))</div><div class="line"><span class="keyword">and</span> Sno <span class="keyword">not</span> <span class="keyword">in</span> (</div><div class="line">  <span class="keyword">select</span> Sno <span class="keyword">from</span> Score <span class="keyword">where</span> Cno <span class="keyword">not</span> <span class="keyword">in</span> (<span class="keyword">select</span> Cno <span class="keyword">from</span> Score <span class="keyword">where</span> Sno=<span class="string">'103'</span>))</div><div class="line"><span class="keyword">group</span> <span class="keyword">by</span> Sno <span class="keyword">having</span> <span class="built_in">count</span>(Cno) = (<span class="keyword">select</span> <span class="built_in">count</span>(<span class="keyword">distinct</span>(Cno)) <span class="keyword">from</span> Score <span class="keyword">where</span> Sno=<span class="string">'103'</span>));</div></pre></td></tr></table></figure><h2 id="13、把“SC”表中“叶平”老师教的课的成绩都更改为此课程的平均成绩；"><a href="#13、把“SC”表中“叶平”老师教的课的成绩都更改为此课程的平均成绩；" class="headerlink" title="13、把“SC”表中“叶平”老师教的课的成绩都更改为此课程的平均成绩；"></a>13、把“SC”表中“叶平”老师教的课的成绩都更改为此课程的平均成绩；</h2><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">#这个方法出不来</div><div class="line"><span class="keyword">update</span> Score a <span class="keyword">set</span> Degree = (<span class="keyword">select</span> <span class="built_in">avg</span>(Degree) <span class="keyword">from</span> Score b <span class="keyword">group</span> <span class="keyword">by</span> Cno <span class="keyword">where</span> a.Cno=b.Cno)</div><div class="line"><span class="keyword">where</span> a.Cno <span class="keyword">in</span> (<span class="keyword">select</span> Cno <span class="keyword">from</span> Course,Teacher <span class="keyword">where</span> Teacher.Tno = Course.Tno <span class="keyword">and</span> Tname=<span class="string">'李诚'</span>));</div><div class="line">#网上的方法是</div><div class="line"><span class="keyword">update</span> SC <span class="keyword">set</span> score=(<span class="keyword">select</span> <span class="built_in">avg</span>(SC_2.score) </div><div class="line">    <span class="keyword">from</span> SC SC_2 </div><div class="line">    <span class="keyword">where</span> SC_2.C#=SC.C# ) <span class="keyword">from</span> Course,Teacher <span class="keyword">where</span> Course.C#=SC.C# <span class="keyword">and</span> Course.T#=Teacher.T# <span class="keyword">and</span> Teacher.Tname=<span class="string">'叶平'</span>); </div><div class="line"></div><div class="line"><span class="keyword">update</span> Score <span class="keyword">inner</span> <span class="keyword">join</span> (<span class="keyword">select</span> Cno,<span class="built_in">avg</span>(Degree) avgDegree <span class="keyword">from</span> Score <span class="keyword">where</span> Cno <span class="keyword">in</span> </div><div class="line">(<span class="keyword">select</span> Cno <span class="keyword">from</span> Course <span class="keyword">where</span> Tno = (<span class="keyword">select</span> Tno <span class="keyword">from</span> Teacher <span class="keyword">where</span> Tname = <span class="string">'李诚'</span>)) <span class="keyword">group</span> <span class="keyword">by</span> Cno) a</div><div class="line"><span class="keyword">on</span> Score.Cno=a.Cno</div><div class="line"><span class="keyword">Set</span> Score.degree = a.avgDegree;</div></pre></td></tr></table></figure><h2 id="14、查询和“1002”号的同学学习的课程完全相同的其他同学学号和姓名；"><a href="#14、查询和“1002”号的同学学习的课程完全相同的其他同学学号和姓名；" class="headerlink" title="14、查询和“1002”号的同学学习的课程完全相同的其他同学学号和姓名；"></a>14、查询和“1002”号的同学学习的课程完全相同的其他同学学号和姓名；</h2><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#有可能学了同样数目但是类型不同的课程，所以用not in</div><div class="line"><span class="keyword">select</span> Sno,Sname <span class="keyword">from</span> Student <span class="keyword">where</span> Sno <span class="keyword">in</span> (</div><div class="line"><span class="keyword">select</span> Sno <span class="keyword">from</span> Score <span class="keyword">where</span> Sno <span class="keyword">not</span> <span class="keyword">in</span>(</div><div class="line"><span class="keyword">select</span> Sno <span class="keyword">from</span> Score <span class="keyword">where</span> Cno <span class="keyword">not</span> <span class="keyword">in</span> (<span class="keyword">select</span> Cno <span class="keyword">from</span> Score <span class="keyword">where</span> Sno = <span class="string">'103'</span>))</div><div class="line"><span class="keyword">group</span> <span class="keyword">by</span> Sno</div><div class="line"><span class="keyword">having</span> <span class="built_in">count</span>(Cno) = (<span class="keyword">select</span> <span class="built_in">count</span>(Cno) <span class="keyword">from</span> Score <span class="keyword">where</span> Sno = <span class="string">'103'</span>));</div></pre></td></tr></table></figure><h2 id="15、删除学习“叶平”老师课的SC表记录；"><a href="#15、删除学习“叶平”老师课的SC表记录；" class="headerlink" title="15、删除学习“叶平”老师课的SC表记录；"></a>15、删除学习“叶平”老师课的SC表记录；</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">delete</span> <span class="keyword">from</span> Score <span class="keyword">where</span> Cno = (</div><div class="line"><span class="keyword">select</span> Cno <span class="keyword">from</span> Course <span class="keyword">where</span> Tno = (</div><div class="line"><span class="keyword">select</span> Tno <span class="keyword">from</span> Teacher <span class="keyword">where</span> Tname=<span class="string">'叶平'</span>));</div></pre></td></tr></table></figure><h2 id="16、向SC表中插入一些记录，这些记录要求符合以下条件：没有上过编号“003”课程的同学学号、’002’号课的平均成绩；"><a href="#16、向SC表中插入一些记录，这些记录要求符合以下条件：没有上过编号“003”课程的同学学号、’002’号课的平均成绩；" class="headerlink" title="16、向SC表中插入一些记录，这些记录要求符合以下条件：没有上过编号“003”课程的同学学号、’002’号课的平均成绩；"></a>16、向SC表中插入一些记录，这些记录要求符合以下条件：没有上过编号“003”课程的同学学号、’002’号课的平均成绩；</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Score (Sno,Cno,Degree)</div><div class="line"><span class="keyword">values</span></div><div class="line">(<span class="keyword">select</span> Sno,<span class="number">002</span>,(<span class="keyword">select</span> <span class="keyword">avg</span>(Degree) <span class="keyword">from</span> Score <span class="keyword">where</span> Cno =<span class="string">'002'</span> ) <span class="keyword">from</span> Student <span class="keyword">where</span> Sno <span class="keyword">not</span> <span class="keyword">in</span> </div><div class="line">(<span class="keyword">select</span> Sno <span class="keyword">from</span> Score <span class="keyword">where</span> Cno = <span class="string">'003'</span>));</div></pre></td></tr></table></figure><h2 id="17、按平均成绩从高到低显示所有学生的“JAVA”、“C-”、“C-”三门的课程成绩，按如下形式显示：-学生ID-C-C-JAVA-有效课程数-有效平均分。"><a href="#17、按平均成绩从高到低显示所有学生的“JAVA”、“C-”、“C-”三门的课程成绩，按如下形式显示：-学生ID-C-C-JAVA-有效课程数-有效平均分。" class="headerlink" title="17、按平均成绩从高到低显示所有学生的“JAVA”、“C#”、“C++”三门的课程成绩，按如下形式显示： 学生ID,,C#,C++,JAVA,有效课程数,有效平均分。"></a>17、按平均成绩从高到低显示所有学生的“JAVA”、“C#”、“C++”三门的课程成绩，按如下形式显示： 学生ID,,C#,C++,JAVA,有效课程数,有效平均分。</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> Sno <span class="keyword">as</span> <span class="string">'学生ID'</span>,</div><div class="line">(<span class="keyword">select</span> Degree <span class="keyword">from</span> Score a <span class="keyword">where</span> Cno =(<span class="keyword">select</span> Cno <span class="keyword">from</span> Course <span class="keyword">where</span> Cname=<span class="string">'C#'</span>) <span class="keyword">and</span> a.Sno=SC.Sno) <span class="keyword">as</span> <span class="string">'C#'</span>,</div><div class="line">(<span class="keyword">select</span> Degree <span class="keyword">from</span> Score b <span class="keyword">where</span> Cno =(<span class="keyword">select</span> Cno <span class="keyword">from</span> Course <span class="keyword">where</span> Cname=<span class="string">'C++'</span>) <span class="keyword">and</span> b.Sno=SC.Sno) <span class="keyword">as</span> <span class="string">'C++'</span>,</div><div class="line">(<span class="keyword">select</span> Degree <span class="keyword">from</span> Score c <span class="keyword">where</span> Cno =(<span class="keyword">select</span> Cno <span class="keyword">from</span> Course <span class="keyword">where</span> Cname=<span class="string">'JAVA'</span>) <span class="keyword">and</span> c.Sno=SC.Sno) <span class="keyword">as</span> <span class="string">'JAVA'</span>,</div><div class="line"><span class="keyword">count</span>(*) <span class="keyword">as</span> <span class="string">'有效课程数'</span>,</div><div class="line"><span class="keyword">avg</span>(Degree) <span class="keyword">as</span> <span class="string">'有效平均分'</span></div><div class="line"><span class="keyword">from</span> Score SC <span class="keyword">group</span> <span class="keyword">by</span> Sno </div><div class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">avg</span>(Degree) <span class="keyword">desc</span>;</div></pre></td></tr></table></figure><h2 id="18、查询各科成绩最高和最低的分：以如下形式显示：课程ID，最高分，最低分"><a href="#18、查询各科成绩最高和最低的分：以如下形式显示：课程ID，最高分，最低分" class="headerlink" title="18、查询各科成绩最高和最低的分：以如下形式显示：课程ID，最高分，最低分;"></a>18、查询各科成绩最高和最低的分：以如下形式显示：课程ID，最高分，最低分;</h2><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">#自己写的</div><div class="line"><span class="keyword">select</span> Cno <span class="keyword">as</span> <span class="string">'课程ID'</span>,<span class="built_in">max</span>(Degree) <span class="keyword">as</span> <span class="string">'最高分'</span>,<span class="built_in">min</span>(Degree) <span class="keyword">as</span> <span class="string">'最低分'</span> <span class="keyword">from</span> Score <span class="keyword">group</span> <span class="keyword">by</span> Cno;</div><div class="line">#网上的</div><div class="line"><span class="keyword">SELECT</span> L.Cno <span class="keyword">As</span> 课程ID,L.score <span class="keyword">AS</span> 最高分,R.score <span class="keyword">AS</span> 最低分 </div><div class="line">    <span class="keyword">FROM</span> SC L ,SC <span class="keyword">AS</span> R </div><div class="line">    <span class="keyword">WHERE</span> L.Cno = R.Cno <span class="keyword">and</span> </div><div class="line">        L.Degree = (<span class="keyword">SELECT</span> <span class="built_in">MAX</span>(IL.Degree) </div><div class="line">                      <span class="keyword">FROM</span> SC <span class="keyword">AS</span> IL,Student <span class="keyword">AS</span> IM </div><div class="line">                      <span class="keyword">WHERE</span> L.Cno = IL.Cno <span class="keyword">and</span> IM.Sno=IL.Sno </div><div class="line">                      <span class="keyword">GROUP</span> <span class="keyword">BY</span> IL.Cno) </div><div class="line">        <span class="keyword">AND</span> </div><div class="line">        R.Score = (<span class="keyword">SELECT</span> <span class="built_in">MIN</span>(IR.Degree) </div><div class="line">                      <span class="keyword">FROM</span> SC <span class="keyword">AS</span> IR </div><div class="line">                      <span class="keyword">WHERE</span> R.Cno = IR.Cno </div><div class="line">                  <span class="keyword">GROUP</span> <span class="keyword">BY</span> IR.Cno</div><div class="line">                    );</div></pre></td></tr></table></figure><h2 id="19、按各科平均成绩从低到高和及格率的百分数从高到低顺序-；"><a href="#19、按各科平均成绩从低到高和及格率的百分数从高到低顺序-；" class="headerlink" title="19、按各科平均成绩从低到高和及格率的百分数从高到低顺序 ；"></a>19、按各科平均成绩从低到高和及格率的百分数从高到低顺序 ；</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#自己写的</span></div><div class="line">select * <span class="keyword">from</span> Score a order by </div><div class="line">(select avg(Degree) <span class="keyword">from</span> Score b where a.<span class="attribute">Cno</span>=b.Cno<span class="built_in"> group </span>by Cno) asc,</div><div class="line">(select count(*) <span class="keyword">from</span> Score c where Degree &gt; 60 <span class="keyword">and</span> a.<span class="attribute">Cno</span>=c.Cno<span class="built_in"> group </span>by Cno)/(select count(*) <span class="keyword">from</span> Score d </div><div class="line">where a.<span class="attribute">Cno</span>=d.Cno<span class="built_in"> group </span>by Cno) desc;</div><div class="line"><span class="comment">#网上的</span></div><div class="line">SELECT t.C# AS 课程号,max(course.Cname)AS 课程名,isnull(AVG(score),0) AS平均成绩,100 * SUM(CASE </div><div class="line">WHEN  isnull(score,0)&gt;=60 THEN 1 <span class="keyword">ELSE</span> 0 END)/COUNT(*) AS 及格百分数</div><div class="line">    <span class="keyword">FROM</span> SC T,Course</div><div class="line">    where t.C#=course.C#</div><div class="line">   <span class="built_in"> GROUP </span>BY t.C#</div><div class="line">    ORDER BY 100* SUM(CASE WHEN  isnull(score,0)&gt;=60 THEN 1 <span class="keyword">ELSE</span> 0 END)/COUNT(*) DESC</div></pre></td></tr></table></figure><h2 id="20、查询如下课程平均成绩和及格率的百分数-用”1行”显示-企业管理（001），马克思（002），OO-amp-UML-（003），数据库（004）"><a href="#20、查询如下课程平均成绩和及格率的百分数-用”1行”显示-企业管理（001），马克思（002），OO-amp-UML-（003），数据库（004）" class="headerlink" title="20、查询如下课程平均成绩和及格率的百分数(用”1行”显示): 企业管理（001），马克思（002），OO&amp;UML （003），数据库（004）"></a>20、查询如下课程平均成绩和及格率的百分数(用”1行”显示): 企业管理（001），马克思（002），OO&amp;UML （003），数据库（004）</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> <span class="keyword">SUM</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> C# =<span class="string">'001'</span> <span class="keyword">THEN</span> score <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>)/<span class="keyword">SUM</span>(<span class="keyword">CASE</span> C# <span class="keyword">WHEN</span> <span class="string">'001'</span> <span class="keyword">THEN</span> <span class="number">1</span> <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>) <span class="keyword">AS</span> 企业管理平均分,</div><div class="line"><span class="number">100</span> * <span class="keyword">SUM</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> C# = <span class="string">'001'</span> <span class="keyword">AND</span> score &gt;= <span class="number">60</span> <span class="keyword">THEN</span> <span class="number">1</span> <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>)/<span class="keyword">SUM</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> C# = <span class="string">'001'</span> <span class="keyword">THEN</span> <span class="number">1</span> <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>) <span class="keyword">AS</span> 企业管理及格百分数,</div><div class="line"><span class="keyword">SUM</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> C# = <span class="string">'002'</span> <span class="keyword">THEN</span> score <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>)/<span class="keyword">SUM</span>(<span class="keyword">CASE</span> C# <span class="keyword">WHEN</span> <span class="string">'002'</span> <span class="keyword">THEN</span> <span class="number">1</span> <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>) <span class="keyword">AS</span> 马克思平均分,</div><div class="line"><span class="number">100</span> * <span class="keyword">SUM</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> C# = <span class="string">'002'</span> <span class="keyword">AND</span> score &gt;= <span class="number">60</span> <span class="keyword">THEN</span> <span class="number">1</span> <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>)/<span class="keyword">SUM</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> C# = <span class="string">'002'</span> <span class="keyword">THEN</span> <span class="number">1</span> <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>) <span class="keyword">AS</span> 马克思及格百分数,</div><div class="line"><span class="keyword">SUM</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> C# = <span class="string">'003'</span> <span class="keyword">THEN</span> score <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>)/<span class="keyword">SUM</span>(<span class="keyword">CASE</span> C# <span class="keyword">WHEN</span> <span class="string">'003'</span> <span class="keyword">THEN</span> <span class="number">1</span> <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>) <span class="keyword">AS</span> UML平均分,</div><div class="line"><span class="number">100</span>* <span class="keyword">SUM</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> C# = <span class="string">'003'</span> <span class="keyword">AND</span> score &gt;= <span class="number">60</span> <span class="keyword">THEN</span> <span class="number">1</span> <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>)/<span class="keyword">SUM</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> C# = <span class="string">'003'</span> <span class="keyword">THEN</span> <span class="number">1</span> <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>) <span class="keyword">AS</span> UML及格百分数,</div><div class="line"><span class="keyword">SUM</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> C# = <span class="string">'004'</span> <span class="keyword">THEN</span> score <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>)/<span class="keyword">SUM</span>(<span class="keyword">CASE</span> C# <span class="keyword">WHEN</span> <span class="string">'004'</span> <span class="keyword">THEN</span> <span class="number">1</span> <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>) <span class="keyword">AS</span> 数据库平均分,</div><div class="line"><span class="number">100</span> * <span class="keyword">SUM</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> C# = <span class="string">'004'</span> <span class="keyword">AND</span> score &gt;= <span class="number">60</span> <span class="keyword">THEN</span> <span class="number">1</span> <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>)/<span class="keyword">SUM</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> C# = <span class="string">'004'</span> <span class="keyword">THEN</span> <span class="number">1</span> <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>) <span class="keyword">AS</span> 数据库及格百分数</div><div class="line"><span class="keyword">FROM</span> SC；</div></pre></td></tr></table></figure><h2 id="21、查询不同老师所教不同课程平均分从高到低显示"><a href="#21、查询不同老师所教不同课程平均分从高到低显示" class="headerlink" title="21、查询不同老师所教不同课程平均分从高到低显示"></a>21、查询不同老师所教不同课程平均分从高到低显示</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> <span class="keyword">max</span>(Z.T#) <span class="keyword">AS</span> 教师<span class="keyword">ID</span>,<span class="keyword">MAX</span>(Z.Tname) <span class="keyword">AS</span> 教师姓名,C.C# <span class="keyword">AS</span> 课程ＩＤ,<span class="keyword">MAX</span>(C.Cname) <span class="keyword">AS</span> 课程名称,<span class="keyword">AVG</span>(Score) <span class="keyword">AS</span> 平均成绩 </div><div class="line">  <span class="keyword">FROM</span> SC <span class="keyword">AS</span> T,Course <span class="keyword">AS</span> C ,Teacher <span class="keyword">AS</span> Z </div><div class="line">  <span class="keyword">where</span> T.C#=C.C# <span class="keyword">and</span> C.T#=Z.T# </div><div class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> C.C# </div><div class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">AVG</span>(Score) <span class="keyword">DESC</span></div></pre></td></tr></table></figure><h2 id="22、查询如下课程成绩第-3-名到第-6-名的学生成绩单：企业管理（001），马克思（002），UML-（003），数据库（004）"><a href="#22、查询如下课程成绩第-3-名到第-6-名的学生成绩单：企业管理（001），马克思（002），UML-（003），数据库（004）" class="headerlink" title="22、查询如下课程成绩第 3 名到第 6 名的学生成绩单：企业管理（001），马克思（002），UML （003），数据库（004）"></a>22、查询如下课程成绩第 3 名到第 6 名的学生成绩单：企业管理（001），马克思（002），UML （003），数据库（004）</h2><p>[学生ID],[学生姓名],企业管理,马克思,UML,数据库,平均成绩<br><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">SELECT  <span class="keyword">DISTINCT </span>top <span class="number">3</span> </div><div class="line">      <span class="keyword">SC.S# </span>As 学生学号, </div><div class="line">        Student.Sname AS 学生姓名 , </div><div class="line">      <span class="built_in">T1</span>.<span class="keyword">score </span>AS 企业管理, </div><div class="line">      <span class="built_in">T2</span>.<span class="keyword">score </span>AS 马克思, </div><div class="line">      <span class="built_in">T3</span>.<span class="keyword">score </span>AS UML, </div><div class="line">      <span class="built_in">T4</span>.<span class="keyword">score </span>AS 数据库, </div><div class="line">      ISNULL(<span class="built_in">T1</span>.<span class="keyword">score,0) </span>+ ISNULL(<span class="built_in">T2</span>.<span class="keyword">score,0) </span>+ ISNULL(<span class="built_in">T3</span>.<span class="keyword">score,0) </span>+ ISNULL(<span class="built_in">T4</span>.<span class="keyword">score,0) </span>as 总分 </div><div class="line">      FROM Student,<span class="keyword">SC </span> LEFT <span class="keyword">JOIN </span><span class="keyword">SC </span>AS <span class="built_in">T1</span> </div><div class="line">                      ON <span class="keyword">SC.S# </span>= <span class="built_in">T1</span>.S<span class="comment"># AND T1.C# = '001' </span></div><div class="line">            LEFT <span class="keyword">JOIN </span><span class="keyword">SC </span>AS <span class="built_in">T2</span> </div><div class="line">                      ON <span class="keyword">SC.S# </span>= <span class="built_in">T2</span>.S<span class="comment"># AND T2.C# = '002' </span></div><div class="line">            LEFT <span class="keyword">JOIN </span><span class="keyword">SC </span>AS <span class="built_in">T3</span> </div><div class="line">                      ON <span class="keyword">SC.S# </span>= <span class="built_in">T3</span>.S<span class="comment"># AND T3.C# = '003' </span></div><div class="line">            LEFT <span class="keyword">JOIN </span><span class="keyword">SC </span>AS <span class="built_in">T4</span> </div><div class="line">                      ON <span class="keyword">SC.S# </span>= <span class="built_in">T4</span>.S<span class="comment"># AND T4.C# = '004' </span></div><div class="line">      WHERE student.S<span class="comment">#=SC.S# and </span></div><div class="line">      ISNULL(<span class="built_in">T1</span>.<span class="keyword">score,0) </span>+ ISNULL(<span class="built_in">T2</span>.<span class="keyword">score,0) </span>+ ISNULL(<span class="built_in">T3</span>.<span class="keyword">score,0) </span>+ ISNULL(<span class="built_in">T4</span>.<span class="keyword">score,0) </span></div><div class="line">      NOT IN </div><div class="line">      (SELECT </div><div class="line">            <span class="keyword">DISTINCT </span></div><div class="line">            TOP <span class="number">15</span> WITH TIES </div><div class="line">            ISNULL(<span class="built_in">T1</span>.<span class="keyword">score,0) </span>+ ISNULL(<span class="built_in">T2</span>.<span class="keyword">score,0) </span>+ ISNULL(<span class="built_in">T3</span>.<span class="keyword">score,0) </span>+ ISNULL(<span class="built_in">T4</span>.<span class="keyword">score,0) </span></div><div class="line">      FROM <span class="keyword">sc </span></div><div class="line">            LEFT <span class="keyword">JOIN </span><span class="keyword">sc </span>AS <span class="built_in">T1</span> </div><div class="line">                      ON <span class="keyword">sc.S# </span>= <span class="built_in">T1</span>.S<span class="comment"># AND T1.C# = 'k1' </span></div><div class="line">            LEFT <span class="keyword">JOIN </span><span class="keyword">sc </span>AS <span class="built_in">T2</span> </div><div class="line">                      ON <span class="keyword">sc.S# </span>= <span class="built_in">T2</span>.S<span class="comment"># AND T2.C# = 'k2' </span></div><div class="line">            LEFT <span class="keyword">JOIN </span><span class="keyword">sc </span>AS <span class="built_in">T3</span> </div><div class="line">                      ON <span class="keyword">sc.S# </span>= <span class="built_in">T3</span>.S<span class="comment"># AND T3.C# = 'k3' </span></div><div class="line">            LEFT <span class="keyword">JOIN </span><span class="keyword">sc </span>AS <span class="built_in">T4</span> </div><div class="line">                      ON <span class="keyword">sc.S# </span>= <span class="built_in">T4</span>.S<span class="comment"># AND T4.C# = 'k4' </span></div><div class="line">      <span class="keyword">ORDER </span><span class="keyword">BY </span>ISNULL(<span class="built_in">T1</span>.<span class="keyword">score,0) </span>+ ISNULL(<span class="built_in">T2</span>.<span class="keyword">score,0) </span>+ ISNULL(<span class="built_in">T3</span>.<span class="keyword">score,0) </span>+ ISNULL(<span class="built_in">T4</span>.<span class="keyword">score,0) </span>DESC)<span class="comment">;</span></div></pre></td></tr></table></figure></p><h2 id="23、统计列印各科成绩-各分数段人数-课程ID-课程名称-100-85-85-70-70-60-lt-60"><a href="#23、统计列印各科成绩-各分数段人数-课程ID-课程名称-100-85-85-70-70-60-lt-60" class="headerlink" title="23、统计列印各科成绩,各分数段人数:课程ID,课程名称,[100-85],[85-70],[70-60],[ &lt;60]"></a>23、统计列印各科成绩,各分数段人数:课程ID,课程名称,[100-85],[85-70],[70-60],[ &lt;60]</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> SC.C# <span class="keyword">as</span> 课程<span class="keyword">ID</span>, Cname <span class="keyword">as</span> 课程名称 </div><div class="line">        ,<span class="keyword">SUM</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> score <span class="keyword">BETWEEN</span> <span class="number">85</span> <span class="keyword">AND</span> <span class="number">100</span> <span class="keyword">THEN</span> <span class="number">1</span> <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>) <span class="keyword">AS</span> [<span class="number">100</span> - <span class="number">85</span>] </div><div class="line">        ,<span class="keyword">SUM</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> score <span class="keyword">BETWEEN</span> <span class="number">70</span> <span class="keyword">AND</span> <span class="number">85</span> <span class="keyword">THEN</span> <span class="number">1</span> <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>) <span class="keyword">AS</span> [<span class="number">85</span> - <span class="number">70</span>] </div><div class="line">        ,<span class="keyword">SUM</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> score <span class="keyword">BETWEEN</span> <span class="number">60</span> <span class="keyword">AND</span> <span class="number">70</span> <span class="keyword">THEN</span> <span class="number">1</span> <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>) <span class="keyword">AS</span> [<span class="number">70</span> - <span class="number">60</span>] </div><div class="line">        ,<span class="keyword">SUM</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> score &lt; <span class="number">60</span> <span class="keyword">THEN</span> <span class="number">1</span> <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>) <span class="keyword">AS</span> [<span class="number">60</span> -] </div><div class="line">    <span class="keyword">FROM</span> SC,Course </div><div class="line">    <span class="keyword">where</span> SC.C#=Course.C# </div><div class="line">    <span class="keyword">GROUP</span> <span class="keyword">BY</span> SC.C#,Cname;</div></pre></td></tr></table></figure><h2 id="24、查询学生平均成绩及其名次"><a href="#24、查询学生平均成绩及其名次" class="headerlink" title="24、查询学生平均成绩及其名次"></a>24、查询学生平均成绩及其名次</h2><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">  <span class="keyword">SELECT</span> <span class="number">1</span>+(<span class="keyword">SELECT</span> <span class="built_in">COUNT</span>( <span class="keyword">distinct</span> 平均成绩) </div><div class="line">          <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> S#,<span class="built_in">AVG</span>(score) <span class="keyword">AS</span> 平均成绩 </div><div class="line">                  <span class="keyword">FROM</span> SC </div><div class="line">              <span class="keyword">GROUP</span> <span class="keyword">BY</span> S# </div><div class="line">              ) <span class="keyword">AS</span> T1 </div><div class="line">        <span class="keyword">WHERE</span> 平均成绩 &gt; T2.平均成绩) <span class="keyword">as</span> 名次, </div><div class="line">  S# <span class="keyword">as</span> 学生学号,平均成绩 </div><div class="line"><span class="keyword">FROM</span> (<span class="keyword">SELECT</span> S#,<span class="built_in">AVG</span>(score) 平均成绩 </div><div class="line">        <span class="keyword">FROM</span> SC </div><div class="line">    <span class="keyword">GROUP</span> <span class="keyword">BY</span> S# </div><div class="line">    ) <span class="keyword">AS</span> T2 </div><div class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> 平均成绩 <span class="keyword">desc</span>;</div></pre></td></tr></table></figure><h2 id="25、查询各科成绩前三名的记录-不考虑成绩并列情况"><a href="#25、查询各科成绩前三名的记录-不考虑成绩并列情况" class="headerlink" title="25、查询各科成绩前三名的记录:(不考虑成绩并列情况)"></a>25、查询各科成绩前三名的记录:(不考虑成绩并列情况)</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> t1.S# <span class="keyword">as</span> 学生<span class="keyword">ID</span>,t1.C# <span class="keyword">as</span> 课程<span class="keyword">ID</span>,Score <span class="keyword">as</span> 分数 </div><div class="line"><span class="keyword">FROM</span> SC t1 </div><div class="line"><span class="keyword">WHERE</span> score <span class="keyword">IN</span> (<span class="keyword">SELECT</span> TOP <span class="number">3</span> score </div><div class="line">        <span class="keyword">FROM</span> SC </div><div class="line">        <span class="keyword">WHERE</span> t1.C#= C# </div><div class="line">      <span class="keyword">ORDER</span> <span class="keyword">BY</span> score <span class="keyword">DESC</span> </div><div class="line">        ) </div><div class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> t1.C#;</div></pre></td></tr></table></figure><h2 id="26、查询每门课程被选修的学生数"><a href="#26、查询每门课程被选修的学生数" class="headerlink" title="26、查询每门课程被选修的学生数"></a>26、查询每门课程被选修的学生数</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">select c#,count(S#) <span class="keyword">from</span> sc<span class="built_in"> group </span>by C#;</div></pre></td></tr></table></figure><h2 id="27、查询出只选修了一门课程的全部学生的学号和姓名"><a href="#27、查询出只选修了一门课程的全部学生的学号和姓名" class="headerlink" title="27、查询出只选修了一门课程的全部学生的学号和姓名"></a>27、查询出只选修了一门课程的全部学生的学号和姓名</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">select SC.S#,Student.Sname,count(C#) AS 选课数 </div><div class="line"><span class="keyword">from</span> SC ,Student </div><div class="line">where SC.S#=Student.S#<span class="built_in"> group </span>by SC.S# ,Student.Sname having count(C#)=1;</div></pre></td></tr></table></figure><h2 id="28、查询男生、女生人数"><a href="#28、查询男生、女生人数" class="headerlink" title="28、查询男生、女生人数"></a>28、查询男生、女生人数</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Select count(Ssex) as 男生人数 <span class="keyword">from</span> Student<span class="built_in"> group </span>by Ssex having <span class="attribute">Ssex</span>=<span class="string">'男'</span>; </div><div class="line">Select count(Ssex) as 女生人数 <span class="keyword">from</span> Student<span class="built_in"> group </span>by Ssex having <span class="attribute">Ssex</span>=<span class="string">'女'</span>；</div></pre></td></tr></table></figure><h2 id="29、查询姓“张”的学生名单"><a href="#29、查询姓“张”的学生名单" class="headerlink" title="29、查询姓“张”的学生名单"></a>29、查询姓“张”的学生名单</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> Sname <span class="keyword">FROM</span> Student <span class="keyword">WHERE</span> Sname <span class="keyword">like</span> <span class="string">'张%'</span>;</div></pre></td></tr></table></figure><h2 id="30、查询同名同性学生名单，并统计同名人数"><a href="#30、查询同名同性学生名单，并统计同名人数" class="headerlink" title="30、查询同名同性学生名单，并统计同名人数"></a>30、查询同名同性学生名单，并统计同名人数</h2><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> Sname,count<span class="comment">(*) from Student group by Sname having  count(*)</span>&gt;<span class="number">1</span>;</div></pre></td></tr></table></figure><h2 id="31、1981年出生的学生名单-注：Student表中Sage列的类型是datetime"><a href="#31、1981年出生的学生名单-注：Student表中Sage列的类型是datetime" class="headerlink" title="31、1981年出生的学生名单(注：Student表中Sage列的类型是datetime)"></a>31、1981年出生的学生名单(注：Student表中Sage列的类型是datetime)</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> Sname,  <span class="keyword">CONVERT</span>(<span class="built_in">char</span> (<span class="number">11</span>),<span class="keyword">DATEPART</span>(<span class="keyword">year</span>,Sage)) <span class="keyword">as</span> age </div><div class="line"><span class="keyword">from</span> student </div><div class="line"><span class="keyword">where</span>  <span class="keyword">CONVERT</span>(<span class="built_in">char</span>(<span class="number">11</span>),<span class="keyword">DATEPART</span>(<span class="keyword">year</span>,Sage))=<span class="string">'1981'</span>;</div></pre></td></tr></table></figure><h2 id="32、查询每门课程的平均成绩，结果按平均成绩升序排列，平均成绩相同时，按课程号降序排列"><a href="#32、查询每门课程的平均成绩，结果按平均成绩升序排列，平均成绩相同时，按课程号降序排列" class="headerlink" title="32、查询每门课程的平均成绩，结果按平均成绩升序排列，平均成绩相同时，按课程号降序排列"></a>32、查询每门课程的平均成绩，结果按平均成绩升序排列，平均成绩相同时，按课程号降序排列</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Select C#,Avg(score) <span class="keyword">from</span> SC<span class="built_in"> group </span>by C# order by Avg(score),C# DESC ;</div></pre></td></tr></table></figure><h2 id="33、查询平均成绩大于85的所有学生的学号、姓名和平均成绩"><a href="#33、查询平均成绩大于85的所有学生的学号、姓名和平均成绩" class="headerlink" title="33、查询平均成绩大于85的所有学生的学号、姓名和平均成绩"></a>33、查询平均成绩大于85的所有学生的学号、姓名和平均成绩</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">select Sname,SC.S# ,avg(score) </div><div class="line"><span class="keyword">from</span> Student,SC </div><div class="line">where Student.S#=SC.S#<span class="built_in"> group </span>by SC.S#,Sname having    avg(score)&gt;85;</div></pre></td></tr></table></figure><h2 id="34、查询课程名称为“数据库”，且分数低于60的学生姓名和分数"><a href="#34、查询课程名称为“数据库”，且分数低于60的学生姓名和分数" class="headerlink" title="34、查询课程名称为“数据库”，且分数低于60的学生姓名和分数"></a>34、查询课程名称为“数据库”，且分数低于60的学生姓名和分数</h2><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Select Sname,isnull(<span class="keyword">score,0) </span></div><div class="line">from Student,<span class="keyword">SC,Course </span></div><div class="line">where <span class="keyword">SC.S#=Student.S# </span><span class="keyword">and </span><span class="keyword">SC.C#=Course.C# </span><span class="keyword">and </span> Course.Cname=<span class="string">'数据库'</span><span class="keyword">and </span><span class="keyword">score </span>&lt;<span class="number">60</span><span class="comment">;</span></div></pre></td></tr></table></figure><h2 id="35、查询所有学生的选课情况；"><a href="#35、查询所有学生的选课情况；" class="headerlink" title="35、查询所有学生的选课情况；"></a>35、查询所有学生的选课情况；</h2><figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">SELECT SC.S#,SC.C#,Sname,Cname </div><div class="line">FROM SC,Student,Course </div><div class="line"><span class="keyword">where</span> SC.S#=Student.S# and SC.C#=Course.C# ;</div></pre></td></tr></table></figure><h2 id="36、查询任何一门课程成绩在70分以上的姓名、课程名称和分数；"><a href="#36、查询任何一门课程成绩在70分以上的姓名、课程名称和分数；" class="headerlink" title="36、查询任何一门课程成绩在70分以上的姓名、课程名称和分数；"></a>36、查询任何一门课程成绩在70分以上的姓名、课程名称和分数；</h2><figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">SELECT  <span class="keyword">distinct</span> student.S#,student.Sname,<span class="keyword">SC</span>.C#,<span class="keyword">SC</span>.<span class="keyword">score</span> </div><div class="line">FROM student,<span class="keyword">Sc</span> </div><div class="line">WHERE <span class="keyword">SC</span>.<span class="keyword">score</span>&gt;=70 AND <span class="keyword">SC</span>.S#=student.S#;</div></pre></td></tr></table></figure><h2 id="37、查询不及格的课程，并按课程号从大到小排列"><a href="#37、查询不及格的课程，并按课程号从大到小排列" class="headerlink" title="37、查询不及格的课程，并按课程号从大到小排列"></a>37、查询不及格的课程，并按课程号从大到小排列</h2><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> c# <span class="keyword">from</span> sc <span class="keyword">where</span> scor <span class="built_in">e</span> &lt;<span class="number">60</span> <span class="keyword">order</span> <span class="keyword">by</span> C# ;</div></pre></td></tr></table></figure><h2 id="38、查询课程编号为003且课程成绩在80分以上的学生的学号和姓名；"><a href="#38、查询课程编号为003且课程成绩在80分以上的学生的学号和姓名；" class="headerlink" title="38、查询课程编号为003且课程成绩在80分以上的学生的学号和姓名；"></a>38、查询课程编号为003且课程成绩在80分以上的学生的学号和姓名；</h2><figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">select SC.S#,Student.Sname <span class="keyword">from</span> SC,Student <span class="keyword">where</span> SC.S#=Student.S# and Score&gt;<span class="number">80</span> and C#=<span class="string">'003'</span>;</div></pre></td></tr></table></figure><h2 id="39、求选了课程的学生人数"><a href="#39、求选了课程的学生人数" class="headerlink" title="39、求选了课程的学生人数"></a>39、求选了课程的学生人数</h2><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="built_in">count</span>(*) <span class="keyword">from</span> sc;</div></pre></td></tr></table></figure><h2 id="40、查询选修“叶平”老师所授课程的学生中，成绩最高的学生姓名及其成绩"><a href="#40、查询选修“叶平”老师所授课程的学生中，成绩最高的学生姓名及其成绩" class="headerlink" title="40、查询选修“叶平”老师所授课程的学生中，成绩最高的学生姓名及其成绩"></a>40、查询选修“叶平”老师所授课程的学生中，成绩最高的学生姓名及其成绩</h2><figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">select Student.Sname,score </div><div class="line"><span class="keyword">from</span> Student,SC,Course C,Teacher </div><div class="line"><span class="keyword">where</span> Student.S#=SC.S# and SC.C#=C.C# and C.T#=Teacher.T# and Teacher.Tname=<span class="string">'叶平'</span> </div><div class="line">and SC.score=(select max(score)<span class="keyword">from</span> SC <span class="keyword">where</span> C#=C.C# );</div></pre></td></tr></table></figure><h2 id="41、查询各个课程及相应的选修人数"><a href="#41、查询各个课程及相应的选修人数" class="headerlink" title="41、查询各个课程及相应的选修人数"></a>41、查询各个课程及相应的选修人数</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">select count(*) <span class="keyword">from</span> sc<span class="built_in"> group </span>by C#;</div></pre></td></tr></table></figure><h2 id="42、查询不同课程成绩相同的学生的学号、课程号、学生成绩"><a href="#42、查询不同课程成绩相同的学生的学号、课程号、学生成绩" class="headerlink" title="42、查询不同课程成绩相同的学生的学号、课程号、学生成绩"></a>42、查询不同课程成绩相同的学生的学号、课程号、学生成绩</h2><figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">select distinct  A.S#,B.score <span class="keyword">from</span> SC A  ,SC B <span class="keyword">where</span> A.Score=B.Score and A.C# &lt;&gt;B.C# ;</div></pre></td></tr></table></figure><h2 id="43、查询每门功成绩最好的前两名"><a href="#43、查询每门功成绩最好的前两名" class="headerlink" title="43、查询每门功成绩最好的前两名"></a>43、查询每门功成绩最好的前两名</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> t1.S# <span class="keyword">as</span> 学生<span class="keyword">ID</span>,t1.C# <span class="keyword">as</span> 课程<span class="keyword">ID</span>,Score <span class="keyword">as</span> 分数 </div><div class="line">      <span class="keyword">FROM</span> SC t1 </div><div class="line">      <span class="keyword">WHERE</span> score <span class="keyword">IN</span> (<span class="keyword">SELECT</span> TOP <span class="number">2</span> score </div><div class="line">              <span class="keyword">FROM</span> SC </div><div class="line">              <span class="keyword">WHERE</span> t1.C#= C# </div><div class="line">            <span class="keyword">ORDER</span> <span class="keyword">BY</span> score <span class="keyword">DESC</span> </div><div class="line">              ) </div><div class="line">      <span class="keyword">ORDER</span> <span class="keyword">BY</span> t1.C#;</div></pre></td></tr></table></figure><h2 id="44、统计每门课程的学生选修人数（超过10人的课程才统计）。要求输出课程号和选修人数，查询结果按人数降序排列，"><a href="#44、统计每门课程的学生选修人数（超过10人的课程才统计）。要求输出课程号和选修人数，查询结果按人数降序排列，" class="headerlink" title="44、统计每门课程的学生选修人数（超过10人的课程才统计）。要求输出课程号和选修人数，查询结果按人数降序排列，"></a>44、统计每门课程的学生选修人数（超过10人的课程才统计）。要求输出课程号和选修人数，查询结果按人数降序排列，</h2><p>查询结果按人数降序排列，若人数相同，按课程号升序排列<br><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span>  C# <span class="keyword">as</span> 课程号,count<span class="comment">(*) as 人数 </span></div><div class="line"><span class="comment">from  sc  </span></div><div class="line"><span class="comment">group  by  C# </span></div><div class="line"><span class="comment">order  by  count(*)</span> <span class="keyword">desc</span>,c#</div></pre></td></tr></table></figure></p><h2 id="45、检索至少选修两门课程的学生学号"><a href="#45、检索至少选修两门课程的学生学号" class="headerlink" title="45、检索至少选修两门课程的学生学号"></a>45、检索至少选修两门课程的学生学号</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">select  S#  </div><div class="line">    <span class="keyword">from</span>  sc  </div><div class="line">   <span class="built_in"> group </span> by  s# </div><div class="line">    having  count(*)  &gt;  =  2</div></pre></td></tr></table></figure><h2 id="46、查询全部学生都选修的课程的课程号和课程名"><a href="#46、查询全部学生都选修的课程的课程号和课程名" class="headerlink" title="46、查询全部学生都选修的课程的课程号和课程名"></a>46、查询全部学生都选修的课程的课程号和课程名</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">select  C#,Cname  </div><div class="line"><span class="keyword">from</span>  Course  </div><div class="line">where  C#  <span class="keyword">in</span>  (select  c#  <span class="keyword">from</span>  sc<span class="built_in"> group </span> by  c#)</div></pre></td></tr></table></figure><h2 id="47、查询没学过“叶平”老师讲授的任一门课程的学生姓名"><a href="#47、查询没学过“叶平”老师讲授的任一门课程的学生姓名" class="headerlink" title="47、查询没学过“叶平”老师讲授的任一门课程的学生姓名"></a>47、查询没学过“叶平”老师讲授的任一门课程的学生姓名</h2><figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">select Sname <span class="keyword">from</span> Student <span class="keyword">where</span> S# not <span class="keyword">in</span> (select S# <span class="keyword">from</span> Course,Teacher,SC </div><div class="line"><span class="keyword">where</span> Course.T#=Teacher.T# and SC.C#=course.C# and Tname=<span class="string">'叶平'</span>);</div></pre></td></tr></table></figure><h2 id="48、查询两门以上不及格课程的同学的学号及其平均成绩"><a href="#48、查询两门以上不及格课程的同学的学号及其平均成绩" class="headerlink" title="48、查询两门以上不及格课程的同学的学号及其平均成绩"></a>48、查询两门以上不及格课程的同学的学号及其平均成绩</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> S#,<span class="keyword">avg</span>(<span class="keyword">isnull</span>(score,<span class="number">0</span>)) <span class="keyword">from</span> SC <span class="keyword">where</span> S# <span class="keyword">in</span> (<span class="keyword">select</span> S# <span class="keyword">from</span> SC </div><div class="line"><span class="keyword">where</span> score &lt;<span class="number">60</span> <span class="keyword">group</span> <span class="keyword">by</span> S# <span class="keyword">having</span> <span class="keyword">count</span>(*)&gt;<span class="number">2</span>)<span class="keyword">group</span> <span class="keyword">by</span> S#;</div></pre></td></tr></table></figure><h2 id="49、检索“004”课程分数小于60，按分数降序排列的同学学号"><a href="#49、检索“004”课程分数小于60，按分数降序排列的同学学号" class="headerlink" title="49、检索“004”课程分数小于60，按分数降序排列的同学学号"></a>49、检索“004”课程分数小于60，按分数降序排列的同学学号</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> S# <span class="keyword">from</span> SC <span class="keyword">where</span> C#=<span class="string">'004'</span><span class="keyword">and</span> score &lt;<span class="number">60</span> <span class="keyword">order</span> <span class="keyword">by</span> score <span class="keyword">desc</span>;</div></pre></td></tr></table></figure><h2 id="50、删除“002”同学的“001”课程的成绩"><a href="#50、删除“002”同学的“001”课程的成绩" class="headerlink" title="50、删除“002”同学的“001”课程的成绩"></a>50、删除“002”同学的“001”课程的成绩</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">delete</span> <span class="keyword">from</span> Sc <span class="keyword">where</span> S#=<span class="string">'001'</span><span class="keyword">and</span> C#=<span class="string">'001'</span>;</div></pre></td></tr></table></figure><p>其他练习题：<br>问题描述： 为管理岗位业务培训信息，建立3个表:</p><p>S (S#,SN,SD,SA) S#,SN,SD,SA 分别代表学号、学员姓名、所属单位、学员年龄</p><p>C (C#,CN ) C#,CN 分别代表课程编号、课程名称</p><p>SC ( S#,C#,G ) S#,C#,G 分别代表学号、所选修的课程编号、学习成绩</p><p>要求实现如下5个处理：</p><h2 id="1-使用标准SQL嵌套语句查询选修课程名称为’税收基础’的学员学号和姓名"><a href="#1-使用标准SQL嵌套语句查询选修课程名称为’税收基础’的学员学号和姓名" class="headerlink" title="1. 使用标准SQL嵌套语句查询选修课程名称为’税收基础’的学员学号和姓名"></a>1. 使用标准SQL嵌套语句查询选修课程名称为’税收基础’的学员学号和姓名</h2><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> SN,SD <span class="keyword">FROM</span> S</div><div class="line"><span class="keyword">WHERE</span> [S<span class="meta">#] IN(</span></div><div class="line">    <span class="keyword">SELECT</span> [S<span class="meta">#] FROM C,SC</span></div><div class="line">    <span class="keyword">WHERE</span> C.[C<span class="meta">#]=SC.[C#]</span></div><div class="line">        <span class="keyword">AND</span> CN=N<span class="comment">'税收基础')</span></div></pre></td></tr></table></figure><h2 id="2-使用标准SQL嵌套语句查询选修课程编号为’C2’的学员姓名和所属单位"><a href="#2-使用标准SQL嵌套语句查询选修课程编号为’C2’的学员姓名和所属单位" class="headerlink" title="2. 使用标准SQL嵌套语句查询选修课程编号为’C2’的学员姓名和所属单位"></a>2. 使用标准SQL嵌套语句查询选修课程编号为’C2’的学员姓名和所属单位</h2><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> S.SN,S.SD <span class="keyword">FROM</span> S,SC</div><div class="line"><span class="keyword">WHERE</span> S.[S<span class="meta">#]=SC.[S#]</span></div><div class="line">    <span class="keyword">AND</span> SC.[C<span class="meta">#]='C2'</span></div></pre></td></tr></table></figure><h2 id="3-使用标准SQL嵌套语句查询不选修课程编号为’C5’的学员姓名和所属单位"><a href="#3-使用标准SQL嵌套语句查询不选修课程编号为’C5’的学员姓名和所属单位" class="headerlink" title="3. 使用标准SQL嵌套语句查询不选修课程编号为’C5’的学员姓名和所属单位"></a>3. 使用标准SQL嵌套语句查询不选修课程编号为’C5’的学员姓名和所属单位</h2><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> SN,SD <span class="keyword">FROM</span> S</div><div class="line"><span class="keyword">WHERE</span> [S#] <span class="keyword">NOT</span> <span class="keyword">IN</span>(</div><div class="line">    <span class="keyword">SELECT</span> [S#] <span class="keyword">FROM</span> SC </div><div class="line">    <span class="keyword">WHERE</span> [C#]=<span class="string">'C5'</span>)</div></pre></td></tr></table></figure><h2 id="4-使用标准SQL嵌套语句查询选修全部课程的学员姓名和所属单位"><a href="#4-使用标准SQL嵌套语句查询选修全部课程的学员姓名和所属单位" class="headerlink" title="4. 使用标准SQL嵌套语句查询选修全部课程的学员姓名和所属单位"></a>4. 使用标准SQL嵌套语句查询选修全部课程的学员姓名和所属单位</h2><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> SN,SD <span class="keyword">FROM</span> S</div><div class="line"><span class="keyword">WHERE</span> [S#] <span class="keyword">IN</span>(</div><div class="line">    <span class="keyword">SELECT</span> [S#] <span class="keyword">FROM</span> SC </div><div class="line">        <span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> C <span class="keyword">ON</span> SC.[C#]=C.[C#]</div><div class="line">    <span class="keyword">GROUP</span> <span class="keyword">BY</span> [S#]</div><div class="line">    <span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(*)=<span class="built_in">COUNT</span>(<span class="keyword">DISTINCT</span> [S#]))</div></pre></td></tr></table></figure><h2 id="5-查询选修了课程的学员人数"><a href="#5-查询选修了课程的学员人数" class="headerlink" title="5. 查询选修了课程的学员人数"></a>5. 查询选修了课程的学员人数</h2><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> 学员人数=<span class="built_in">COUNT</span>(<span class="keyword">DISTINCT</span> [S#]) <span class="keyword">FROM</span> SC</div></pre></td></tr></table></figure><h2 id="6-查询选修课程超过5门的学员学号和所属单位"><a href="#6-查询选修课程超过5门的学员学号和所属单位" class="headerlink" title="6. 查询选修课程超过5门的学员学号和所属单位"></a>6. 查询选修课程超过5门的学员学号和所属单位</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">SELECT SN,SD <span class="keyword">FROM</span> S</div><div class="line">WHERE [S#] <span class="keyword">IN</span>(</div><div class="line">    SELECT [S#] <span class="keyword">FROM</span> SC </div><div class="line">   <span class="built_in"> GROUP </span>BY [S#]</div><div class="line">    HAVING COUNT(DISTINCT [C#])&gt;5)</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;学生表：Student（编号sid，姓名sname，年龄sage，性别ssex)&lt;br&gt;课程表：Course（课程编号cid，课程名称cname，教师编号tid）&lt;br&gt;成绩表：Sc（学生编号sid，课程编号cid，成绩score）&lt;br&gt;教师表：Teacher（教师编号t
      
    
    </summary>
    
      <category term="mysql" scheme="https://chumingke.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://chumingke.github.io/tags/mysql/"/>
    
  </entry>
  
</feed>
